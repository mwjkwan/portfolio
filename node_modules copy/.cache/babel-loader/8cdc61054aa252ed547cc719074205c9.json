{"ast":null,"code":"import _objectSpread from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { api } from './config';\nexport function apiGet(endpoint, token, api_url) {\n  return callApi(endpoint, 'GET', null, token, api_url);\n}\nexport function apiPost(endpoint, body, token, api_url) {\n  return callApi(endpoint, 'POST', body, token, api_url);\n}\nexport function apiDelete(endpoint, body, token, api_url) {\n  return callApi(endpoint, 'DELETE', body, token, api_url);\n}\nexport function apiPut(endpoint, body, token, api_url) {\n  return callApi(endpoint, 'PUT', body, token, api_url);\n}\nexport function apiUpload(endpoint, image, token) {\n  var form = new FormData();\n  form.append('image', image);\n\n  if (token) {\n    form.append('token', token);\n  }\n\n  var requestOptions = {\n    method: 'POST',\n    body: form\n  };\n  var url = api(endpoint);\n  return fetch(url, requestOptions).then(function (response) {\n    if (response.status === 500) {\n      throw new Error();\n    }\n\n    return response.json().then(function (json) {\n      return {\n        json: json,\n        response: response\n      };\n    });\n  });\n}\nexport function callApi(endpoint, method, body, token, api_url) {\n  var requestOptions = {\n    method: method,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    }\n  };\n\n  if ((method === 'POST' || method === 'DELETE' || method === 'PUT') && token) {\n    body = _objectSpread({}, body); // body.token = token;\n  }\n\n  if (body) {\n    if (typeof body === 'object') {\n      requestOptions.body = JSON.stringify(body);\n    } else {\n      requestOptions.body = body;\n    }\n  }\n\n  var url = api(endpoint, api_url);\n\n  if (token) {\n    url = \"\".concat(url, \"?token=\").concat(token);\n  }\n\n  return fetch(url, requestOptions).then(function (response) {\n    if (response.status !== 200) {\n      throw new Error();\n    } // if (response.status === 200) {\n\n\n    return response.json().then(function (json) {\n      return {\n        json: json,\n        response: response\n      };\n    }); // }\n  });\n}","map":{"version":3,"sources":["/Users/melissa/datamatch/src/utils/Api.js"],"names":["api","apiGet","endpoint","token","api_url","callApi","apiPost","body","apiDelete","apiPut","apiUpload","image","form","FormData","append","requestOptions","method","url","fetch","then","response","status","Error","json","headers","Accept","JSON","stringify"],"mappings":"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","sourcesContent":["import { api } from './config';\n\nexport function apiGet(endpoint, token, api_url) {\n  return callApi(endpoint, 'GET', null, token, api_url);\n}\n\nexport function apiPost(endpoint, body, token, api_url) {\n  return callApi(endpoint, 'POST', body, token, api_url);\n}\n\nexport function apiDelete(endpoint, body, token, api_url) {\n  return callApi(endpoint, 'DELETE', body, token, api_url);\n}\n\nexport function apiPut(endpoint, body, token, api_url) {\n  return callApi(endpoint, 'PUT', body, token, api_url);\n}\n\nexport function apiUpload(endpoint, image, token) {\n  let form = new FormData();\n  form.append('image', image);\n  if (token) {\n    form.append('token', token);\n  }\n\n  let requestOptions = {\n    method: 'POST',\n    body: form,\n  };\n\n  let url = api(endpoint);\n\n  return fetch(url, requestOptions).then(response => {\n    if (response.status === 500) {\n      throw new Error();\n    }\n\n    return response.json().then(json => ({ json, response }));\n  });\n}\n\nexport function callApi(endpoint, method, body, token, api_url) {\n  let requestOptions = {\n    method: method,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n  };\n\n  if ((method === 'POST' || method === 'DELETE' || method === 'PUT') && token) {\n    body = {\n      ...body,\n    };\n    // body.token = token;\n  }\n  if (body) {\n    if (typeof body === 'object') {\n      requestOptions.body = JSON.stringify(body);\n    } else {\n      requestOptions.body = body;\n    }\n  }\n  let url = api(endpoint, api_url);\n\n  if (token) {\n    url = `${url}?token=${token}`;\n  }\n\n  return fetch(url, requestOptions).then(response => {\n    if (response.status !== 200) {\n      throw new Error();\n    }\n\n    // if (response.status === 200) {\n    return response.json().then(json => ({ json, response }));\n    // }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}