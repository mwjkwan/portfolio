{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/melissa/datamatch/src/pages/PageArchives.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  max-width: 700px;\\n\\n  .answer {\\n    padding: 0px 10px;\\n    font-family: 'apercu-light';\\n    height: 40px;\\n    text-align: left;\\n    color: #222222;\\n    display: flex;\\n    align-items: center;\\n    cursor: pointer;\\n    &:hover {\\n      background: rgba(196, 196, 196, 0.1);\\n    }\\n  }\\n\\n  .answer-selected {\\n    background: #f3f2f2;\\n    &:hover {\\n      background: #f3f2f2;\\n    }\\n  }\\n\\n  .question {\\n    margin-bottom: 15px;\\n    font-size: 20px !important;\\n  }\\n\\n  .checkmark {\\n    margin-right: 4px;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport SurveyQuestion from 'components/SurveyQuestion';\nimport Header from 'components/Header';\nimport PastQuestions from 'constants/PastQuestions';\nvar pageArchivesStyle = css(_templateObject());\n/* This code assumes the following schema:\n * type Survey = { questions: { [key]: Question } }\n * type Question = { text: String, order: Number, answers: { [key]: Answer } }\n * type Answer = { order: Number, text: String }\n */\n// Patch in some fake data\n\nvar FAKE_SURVEY = {\n  year: 2015,\n  questions: {\n    '0a196cf6-f5fa-44b3-9f80-a15270faceb9': {\n      text: 'The book most similar to your love life is...',\n      order: 0,\n      answers: {\n        '9607a597-dcff-4e70-bfad-be70d267d1da': {\n          order: 0,\n          text: 'The Great Gatsby: Rich white men always messing things up'\n        },\n        'd9bface9-9081-4bb7-8e61-62848f4ae900': {\n          order: 1,\n          text: 'Dracula: blood sucking monsters of the night'\n        },\n        'ea854861-086c-403c-9c9b-8d920e2bf0ab': {\n          order: 2,\n          text: \"Hitchhiker's Guide to the Galaxy: Perpetually ending up in strange places with nothing but a towel\"\n        },\n        '1e68c589-6232-46f0-949c-f70c32696d2f': {\n          order: 3,\n          text: '*Points to the OCS office* \"Is that the Delphic\"?'\n        }\n      }\n    },\n    '26ad02ec-8414-4051-b1b3-79c31cd724b0': {\n      text: 'My style is...',\n      order: 1,\n      answers: {\n        's350e33cd-8bc8-42f4-ae8e-841612df346d': {\n          order: 0,\n          text: 'WASP: Between my Canada Goose jacket and my salmon pants, I jsut love nature.'\n        },\n        '97fc8864-db04-4c0d-9ad8-cc4e7572a719': {\n          order: 1,\n          text: \"Sweatpants: I've got to be ready in case I ever decide to work out.\"\n        },\n        'df5251f6-ebf5-44c6-90af-5cb266771594': {\n          order: 2,\n          text: 'T-shirt and jeans: Johnny Bravo chic.'\n        },\n        'd109a6f3-abab-4ab1-a152-b88ef75efbe9': {\n          order: 3,\n          text: 'All black everything: Ready for a secret mission, or The Advocate comp.'\n        }\n      }\n    }\n  }\n};\n\nfunction PageArchives(props) {\n  var survey = PastQuestions;\n  return jsx(\"div\", {\n    css: pageArchivesStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"ARCHIVES\"), jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Check out some selected questions from previous years!\"), jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, survey.map(function (question) {\n    return jsx(SurveyQuestion, {\n      question: question,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    });\n  })));\n}\n\nexport default PageArchives;","map":{"version":3,"sources":["/Users/melissa/datamatch/src/pages/PageArchives.js"],"names":["jsx","css","SurveyQuestion","Header","PastQuestions","pageArchivesStyle","FAKE_SURVEY","year","questions","text","order","answers","PageArchives","props","survey","map","question"],"mappings":";;;;;;;;;;;;;AAAA;AAEA,SAASA,GAAT,EAAcC,GAAd,QAAyB,eAAzB;AAEA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AAEA,IAAMC,iBAAiB,GAAGJ,GAAH,mBAAvB;AAkCA;;;;;AAMA;;AACA,IAAMK,WAAW,GAAG;AAClBC,EAAAA,IAAI,EAAE,IADY;AAElBC,EAAAA,SAAS,EAAE;AACT,4CAAwC;AACtCC,MAAAA,IAAI,EAAE,+CADgC;AAEtCC,MAAAA,KAAK,EAAE,CAF+B;AAGtCC,MAAAA,OAAO,EAAE;AACP,gDAAwC;AACtCD,UAAAA,KAAK,EAAE,CAD+B;AAEtCD,UAAAA,IAAI,EAAE;AAFgC,SADjC;AAKP,gDAAwC;AACtCC,UAAAA,KAAK,EAAE,CAD+B;AAEtCD,UAAAA,IAAI,EAAE;AAFgC,SALjC;AASP,gDAAwC;AACtCC,UAAAA,KAAK,EAAE,CAD+B;AAEtCD,UAAAA,IAAI,EACF;AAHoC,SATjC;AAcP,gDAAwC;AACtCC,UAAAA,KAAK,EAAE,CAD+B;AAEtCD,UAAAA,IAAI,EAAE;AAFgC;AAdjC;AAH6B,KAD/B;AAwBT,4CAAwC;AACtCA,MAAAA,IAAI,EAAE,gBADgC;AAEtCC,MAAAA,KAAK,EAAE,CAF+B;AAGtCC,MAAAA,OAAO,EAAE;AACP,iDAAyC;AACvCD,UAAAA,KAAK,EAAE,CADgC;AAEvCD,UAAAA,IAAI,EACF;AAHqC,SADlC;AAMP,gDAAwC;AACtCC,UAAAA,KAAK,EAAE,CAD+B;AAEtCD,UAAAA,IAAI,EACF;AAHoC,SANjC;AAWP,gDAAwC;AACtCC,UAAAA,KAAK,EAAE,CAD+B;AAEtCD,UAAAA,IAAI,EAAE;AAFgC,SAXjC;AAeP,gDAAwC;AACtCC,UAAAA,KAAK,EAAE,CAD+B;AAEtCD,UAAAA,IAAI,EACF;AAHoC;AAfjC;AAH6B;AAxB/B;AAFO,CAApB;;AAsDA,SAASG,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,MAAMC,MAAM,GAAGV,aAAf;AAEA,SACE;AAAK,IAAA,GAAG,EAAEC,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,IAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGS,MAAM,CAACC,GAAP,CAAW,UAAAC,QAAQ;AAAA,WAClB,IAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEA,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADkB;AAAA,GAAnB,CADH,CAJF,CADF;AAYD;;AAED,eAAeJ,YAAf","sourcesContent":["/** @jsx jsx */\n\nimport { jsx, css } from '@emotion/core';\n\nimport SurveyQuestion from 'components/SurveyQuestion';\nimport Header from 'components/Header';\nimport PastQuestions from 'constants/PastQuestions'\n\nconst pageArchivesStyle = css`\n  max-width: 700px;\n\n  .answer {\n    padding: 0px 10px;\n    font-family: 'apercu-light';\n    height: 40px;\n    text-align: left;\n    color: #222222;\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    &:hover {\n      background: rgba(196, 196, 196, 0.1);\n    }\n  }\n\n  .answer-selected {\n    background: #f3f2f2;\n    &:hover {\n      background: #f3f2f2;\n    }\n  }\n\n  .question {\n    margin-bottom: 15px;\n    font-size: 20px !important;\n  }\n\n  .checkmark {\n    margin-right: 4px;\n  }\n`;\n\n/* This code assumes the following schema:\n * type Survey = { questions: { [key]: Question } }\n * type Question = { text: String, order: Number, answers: { [key]: Answer } }\n * type Answer = { order: Number, text: String }\n */\n\n// Patch in some fake data\nconst FAKE_SURVEY = {\n  year: 2015,\n  questions: {\n    '0a196cf6-f5fa-44b3-9f80-a15270faceb9': {\n      text: 'The book most similar to your love life is...',\n      order: 0,\n      answers: {\n        '9607a597-dcff-4e70-bfad-be70d267d1da': {\n          order: 0,\n          text: 'The Great Gatsby: Rich white men always messing things up',\n        },\n        'd9bface9-9081-4bb7-8e61-62848f4ae900': {\n          order: 1,\n          text: 'Dracula: blood sucking monsters of the night',\n        },\n        'ea854861-086c-403c-9c9b-8d920e2bf0ab': {\n          order: 2,\n          text:\n            \"Hitchhiker's Guide to the Galaxy: Perpetually ending up in strange places with nothing but a towel\",\n        },\n        '1e68c589-6232-46f0-949c-f70c32696d2f': {\n          order: 3,\n          text: '*Points to the OCS office* \"Is that the Delphic\"?',\n        },\n      },\n    },\n    '26ad02ec-8414-4051-b1b3-79c31cd724b0': {\n      text: 'My style is...',\n      order: 1,\n      answers: {\n        's350e33cd-8bc8-42f4-ae8e-841612df346d': {\n          order: 0,\n          text:\n            'WASP: Between my Canada Goose jacket and my salmon pants, I jsut love nature.',\n        },\n        '97fc8864-db04-4c0d-9ad8-cc4e7572a719': {\n          order: 1,\n          text:\n            \"Sweatpants: I've got to be ready in case I ever decide to work out.\",\n        },\n        'df5251f6-ebf5-44c6-90af-5cb266771594': {\n          order: 2,\n          text: 'T-shirt and jeans: Johnny Bravo chic.',\n        },\n        'd109a6f3-abab-4ab1-a152-b88ef75efbe9': {\n          order: 3,\n          text:\n            'All black everything: Ready for a secret mission, or The Advocate comp.',\n        },\n      },\n    },\n  },\n};\n\nfunction PageArchives(props) {\n  const survey = PastQuestions;\n\n  return (\n    <div css={pageArchivesStyle}>\n      <Header>ARCHIVES</Header>\n      <div>Check out some selected questions from previous years!</div>\n      <br />\n      <div>\n        {survey.map(question => (\n          <SurveyQuestion question={question} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default PageArchives;"]},"metadata":{},"sourceType":"module"}