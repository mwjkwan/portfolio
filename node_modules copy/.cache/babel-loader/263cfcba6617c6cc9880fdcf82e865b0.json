{"ast":null,"code":"import _classCallCheck from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/melissa/datamatch/src/components/PicUpload.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  display: inline-block;\\n  height: 200px;\\n  width: 200px;\\n  background: #9b9b9b;\\n\\n  input {\\n    display: none;\\n  }\\n\\n  img {\\n    width: 200px;\\n    height: 200px;\\n  }\\n\\n  .imagehover {\\n    position: absolute;\\n    top: 0px;\\n    width: 200px;\\n    height: 200px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    cursor: pointer;\\n    opacity: 0;\\n\\n    &:hover {\\n      opacity: 0.7;\\n    }\\n\\n    i {\\n      font-size: 40px;\\n      opacity: 0.7;\\n      cursor: pointer;\\n      color: #3b3b3b;\\n    }\\n\\n    img {\\n      background: white;\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsx jsx */\nimport React, { Component } from 'react';\nimport { jsx, css } from '@emotion/core';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect, firebaseConnect } from 'react-redux-firebase';\nimport Loading from 'components/Loading';\nvar picUploadStyle = css(_templateObject());\n\nvar PicUpload =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PicUpload, _Component);\n\n  function PicUpload(props) {\n    var _this;\n\n    _classCallCheck(this, PicUpload);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PicUpload).call(this, props));\n\n    _this.onChange = function (e) {\n      var _this$props = _this.props,\n          email = _this$props.email,\n          uploadFile = _this$props.uploadFile,\n          updateProfile = _this$props.updateProfile;\n\n      _this.setState({\n        loading: true\n      }); // upload file to firestore\n\n\n      uploadFile('/profile_pics', e.target.files[0], '/profile_pics', {\n        name: email + '.jpg'\n      }).then(function (value) {\n        updateProfile({\n          profile_pic: value.downloadURL\n        });\n\n        _this.setState({\n          loading: false,\n          pic: value.downloadURL\n        });\n      }).catch(function (error) {\n        alert(error);\n\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.file = React.createRef();\n    _this.state = {\n      pic: props.profile_pic,\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(PicUpload, [{\n    key: \"renderProfilePic\",\n    value: function renderProfilePic() {\n      if (this.state.pic) {\n        return jsx(\"img\", {\n          alt: \"profile pic\",\n          src: this.state.pic,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.loading) {\n        return jsx(Loading, {\n          type: \"spin\",\n          style: {\n            height: 200,\n            width: 200\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        });\n      }\n\n      return jsx(\"div\", {\n        className: \"PicUpload\",\n        css: picUploadStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, jsx(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, jsx(\"input\", {\n        accept: \"image/*\",\n        ref: this.file,\n        type: \"file\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), this.renderProfilePic(), jsx(\"div\", {\n        className: \"imagehover\",\n        style: {\n          opacity: this.state.pic ? null : 0.7\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, jsx(\"img\", {\n        src: require('assets/uploadphoto.svg'),\n        alt: \"upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return PicUpload;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, props) {\n  return {\n    updateProfile: props.firebase.updateProfile,\n    email: state.firebase.auth.email,\n    uploadFile: props.firebase.uploadFile,\n    profile_pic: state.firebase.profile.profile_pic\n  };\n};\n\nexport default compose(firebaseConnect(), firestoreConnect(), connect(mapStateToProps))(PicUpload);","map":{"version":3,"sources":["/Users/melissa/datamatch/src/components/PicUpload.js"],"names":["React","Component","jsx","css","connect","compose","firestoreConnect","firebaseConnect","Loading","picUploadStyle","PicUpload","props","onChange","e","email","uploadFile","updateProfile","setState","loading","target","files","name","then","value","profile_pic","downloadURL","pic","catch","error","alert","file","createRef","state","height","width","renderProfilePic","opacity","require","mapStateToProps","firebase","auth","profile"],"mappings":"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","sourcesContent":["/** @jsx jsx */\n\nimport React, { Component } from 'react';\nimport { jsx, css } from '@emotion/core';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect, firebaseConnect } from 'react-redux-firebase';\n\nimport Loading from 'components/Loading';\n\nconst picUploadStyle = css`\n  position: relative;\n  display: inline-block;\n  height: 200px;\n  width: 200px;\n  background: #9b9b9b;\n\n  input {\n    display: none;\n  }\n\n  img {\n    width: 200px;\n    height: 200px;\n  }\n\n  .imagehover {\n    position: absolute;\n    top: 0px;\n    width: 200px;\n    height: 200px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    opacity: 0;\n\n    &:hover {\n      opacity: 0.7;\n    }\n\n    i {\n      font-size: 40px;\n      opacity: 0.7;\n      cursor: pointer;\n      color: #3b3b3b;\n    }\n\n    img {\n      background: white;\n    }\n  }\n`;\n\nclass PicUpload extends Component {\n  constructor(props) {\n    super(props);\n    this.file = React.createRef();\n    this.state = { pic: props.profile_pic, loading: false };\n  }\n\n  onChange = e => {\n    const { email, uploadFile, updateProfile } = this.props;\n    this.setState({ loading: true });\n\n    // upload file to firestore\n    uploadFile('/profile_pics', e.target.files[0], '/profile_pics', {\n      name: email + '.jpg',\n    })\n      .then(value => {\n        updateProfile({ profile_pic: value.downloadURL });\n        this.setState({ loading: false, pic: value.downloadURL });\n      })\n      .catch(error => {\n        alert(error);\n        this.setState({ loading: false });\n      });\n  };\n\n  renderProfilePic() {\n    if (this.state.pic) {\n      return <img alt=\"profile pic\" src={this.state.pic} />;\n    }\n    return null;\n  }\n\n  render() {\n    if (this.state.loading) {\n      return <Loading type=\"spin\" style={{ height: 200, width: 200 }} />;\n    }\n\n    return (\n      <div className=\"PicUpload\" css={picUploadStyle}>\n        <label>\n          <input\n            accept=\"image/*\"\n            ref={this.file}\n            type=\"file\"\n            onChange={this.onChange}\n          />\n\n          {this.renderProfilePic()}\n\n          <div\n            className=\"imagehover\"\n            style={{ opacity: this.state.pic ? null : 0.7 }}\n          >\n            <img src={require('assets/uploadphoto.svg')} alt=\"upload\" />\n          </div>\n        </label>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n    updateProfile: props.firebase.updateProfile,\n    email: state.firebase.auth.email,\n    uploadFile: props.firebase.uploadFile,\n    profile_pic: state.firebase.profile.profile_pic,\n  };\n};\n\nexport default compose(\n  firebaseConnect(),\n  firestoreConnect(),\n  connect(mapStateToProps),\n)(PicUpload);\n"]},"metadata":{},"sourceType":"module"}