{"ast":null,"code":"import _defineProperty from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/melissa/datamatch/src/pages/PageResults/routes/Dates.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  .blue-button {\\n    background: #dedef0;\\n  }\\n\\n  .you-button {\\n    background: #e9c8c5;\\n  }\\n\\n  .both-button {\\n    background: #ffad87;\\n  }\\n\\n  .partner-button {\\n    background: #d3908a;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsx jsx **/\nimport { Component } from 'react';\nimport { jsx, css } from '@emotion/core';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport Loading from 'components/Loading';\nvar datesStyle = css(_templateObject());\n\nvar Dates =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dates, _Component);\n\n  function Dates(props) {\n    var _this;\n\n    _classCallCheck(this, Dates);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dates).call(this, props));\n\n    _this.processDates = function () {\n      var _this$props = _this.props,\n          meFinalized = _this$props.meFinalized,\n          otherFinalized = _this$props.otherFinalized,\n          requested = _this$props.requested;\n\n      if (!requested) {\n        return;\n      }\n\n      var availability = _this.props.availability || {};\n      var dates = _this.props.dates || {};\n      var processedDates = Object.keys(dates).map(function (date) {\n        return _objectSpread({\n          id: date,\n          render: dates[date].datesAvailable > 0\n        }, dates[date], {}, _this.getColor(availability[date]));\n      });\n\n      if (meFinalized && otherFinalized) {\n        processedDates = processedDates.map(function (date) {\n          return _objectSpread({}, date, {\n            render: date.btnClass === 'both-button',\n            btnClass: _this.getFinalizedColor(date.id)\n          });\n        });\n      }\n\n      _this.setState({\n        processedDates: processedDates\n      });\n\n      _this.checkFilled(processedDates);\n    };\n\n    _this.checkFilled = function (processedDates) {\n      var notFilled = processedDates.every(function (_ref) {\n        var btnClass = _ref.btnClass,\n            render = _ref.render;\n        return !render || btnClass === 'partner-button' || btnClass === 'blue-button';\n      });\n\n      _this.props.setFilled(!notFilled);\n    };\n\n    _this.updateAvailability = function (dateId, available) {\n      var _this$props2 = _this.props,\n          firebase = _this$props2.firebase,\n          matchId = _this$props2.matchId,\n          uid = _this$props2.uid;\n      firebase.update('/matches/' + matchId + '/availability/' + dateId, _defineProperty({}, uid, !available));\n    };\n\n    _this.onClick = function (dateId, available) {\n      var _this$props3 = _this.props,\n          meFinalized = _this$props3.meFinalized,\n          otherFinalized = _this$props3.otherFinalized,\n          setDateId = _this$props3.setDateId;\n\n      if (!meFinalized) {\n        _this.updateAvailability(dateId, available);\n      }\n\n      if (meFinalized && otherFinalized) {\n        setDateId(dateId);\n      }\n    };\n\n    _this.getColor = function (available) {\n      var _this$props4 = _this.props,\n          otherUid = _this$props4.otherUid,\n          uid = _this$props4.uid;\n      var btnClass = 'blue-button';\n      var currentAvailability = false;\n\n      if (available) {\n        if (available[otherUid] && available[uid]) {\n          btnClass = 'both-button';\n          currentAvailability = true;\n        } else if (!available[otherUid] && available[uid]) {\n          btnClass = 'you-button';\n          currentAvailability = true;\n        } else if (available[otherUid] && !available[uid]) {\n          btnClass = 'partner-button';\n          currentAvailability = false;\n        }\n      }\n\n      return {\n        btnClass: btnClass,\n        currentAvailability: currentAvailability\n      };\n    };\n\n    _this.getFinalizedColor = function (dateId) {\n      if (dateId === _this.props.dateId) {\n        return 'you-button';\n      }\n\n      return 'blue-button';\n    };\n\n    _this.state = {\n      processedDates: []\n    };\n    return _this;\n  }\n\n  _createClass(Dates, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props5 = this.props,\n          availability = _this$props5.availability,\n          claimingDate = _this$props5.claimingDate,\n          dateId = _this$props5.dateId,\n          dates = _this$props5.dates,\n          meFinalized = _this$props5.meFinalized,\n          otherFinalized = _this$props5.otherFinalized;\n\n      if (claimingDate) {\n        return;\n      }\n\n      if (availability !== prevProps.availability || dateId !== prevProps.dateId || dates !== prevProps.dates || meFinalized !== prevProps.meFinalized || otherFinalized !== prevProps.otherFinalized) {\n        this.processDates();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props6 = this.props,\n          meFinalized = _this$props6.meFinalized,\n          otherFinalized = _this$props6.otherFinalized,\n          requested = _this$props6.requested;\n\n      if (!requested) {\n        return jsx(\"div\", {\n          style: {\n            height: 200\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, jsx(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }));\n      }\n\n      var processedDates = this.state.processedDates;\n      var notRendered = processedDates.every(function (date) {\n        return !date.render;\n      });\n\n      if (notRendered) {\n        if (meFinalized && otherFinalized) {\n          return jsx(\"div\", {\n            style: {\n              color: 'red'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159\n            },\n            __self: this\n          }, \"There are currently no dates both of you can make. Try changing your availability.\");\n        }\n\n        return jsx(\"div\", {\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, \"Unfortunately, there are no dates available at this time.\");\n      }\n\n      return jsx(\"div\", {\n        css: datesStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, processedDates.map(function (date) {\n        var btnClass = date.btnClass,\n            currentAvailability = date.currentAvailability,\n            day = date.day,\n            id = date.id,\n            place = date.place,\n            render = date.render;\n\n        if (!render) {\n          return null;\n        }\n\n        return jsx(\"button\", {\n          className: 'date ' + btnClass,\n          key: id,\n          onClick: function onClick() {\n            return _this2.onClick(id, currentAvailability);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, place.toUpperCase(), \" \", day);\n      }));\n    }\n  }]);\n\n  return Dates;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, _props) {\n  var _state$firebase$data = state.firebase.data,\n      availability = _state$firebase$data.availability,\n      dates = _state$firebase$data.dates;\n  var requested = state.firebase.requested;\n  return {\n    availability: availability,\n    dates: dates,\n    requested: requested.availability && requested.dates\n  };\n};\n\nexport default compose(firebaseConnect(function (props) {\n  return [{\n    path: '/dates',\n    storeAs: 'dates',\n    queryParams: ['orderByChild=datesAvailable', 'startAt=1']\n  }, {\n    path: \"/matches/\".concat(props.matchId, \"/availability\"),\n    storeAs: 'availability'\n  }];\n}), connect(mapStateToProps))(Dates);","map":{"version":3,"sources":["/Users/melissa/datamatch/src/pages/PageResults/routes/Dates.js"],"names":["Component","jsx","css","connect","compose","firebaseConnect","Loading","datesStyle","Dates","props","processDates","meFinalized","otherFinalized","requested","availability","dates","processedDates","Object","keys","map","date","id","render","datesAvailable","getColor","btnClass","getFinalizedColor","setState","checkFilled","notFilled","every","setFilled","updateAvailability","dateId","available","firebase","matchId","uid","update","onClick","setDateId","otherUid","currentAvailability","state","prevProps","claimingDate","height","notRendered","color","day","place","toUpperCase","mapStateToProps","_props","data","path","storeAs","queryParams"],"mappings":"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","sourcesContent":["/** @jsx jsx **/\n\nimport { Component } from 'react';\nimport { jsx, css } from '@emotion/core';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\n\nimport Loading from 'components/Loading';\n\nconst datesStyle = css`\n  .blue-button {\n    background: #dedef0;\n  }\n\n  .you-button {\n    background: #e9c8c5;\n  }\n\n  .both-button {\n    background: #ffad87;\n  }\n\n  .partner-button {\n    background: #d3908a;\n  }\n`;\n\nclass Dates extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { processedDates: [] };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      availability,\n      claimingDate,\n      dateId,\n      dates,\n      meFinalized,\n      otherFinalized,\n    } = this.props;\n\n    if (claimingDate) {\n      return;\n    }\n\n    if (\n      availability !== prevProps.availability ||\n      dateId !== prevProps.dateId ||\n      dates !== prevProps.dates ||\n      meFinalized !== prevProps.meFinalized ||\n      otherFinalized !== prevProps.otherFinalized\n    ) {\n      this.processDates();\n    }\n  }\n\n  processDates = () => {\n    const { meFinalized, otherFinalized, requested } = this.props;\n    if (!requested) {\n      return;\n    }\n\n    const availability = this.props.availability || {};\n    const dates = this.props.dates || {};\n\n    let processedDates = Object.keys(dates).map(date => ({\n      id: date,\n      render: dates[date].datesAvailable > 0,\n      ...dates[date],\n      ...this.getColor(availability[date]),\n    }));\n\n    if (meFinalized && otherFinalized) {\n      processedDates = processedDates.map(date => ({\n        ...date,\n        render: date.btnClass === 'both-button',\n        btnClass: this.getFinalizedColor(date.id),\n      }));\n    }\n\n    this.setState({ processedDates });\n    this.checkFilled(processedDates);\n  };\n\n  checkFilled = processedDates => {\n    const notFilled = processedDates.every(\n      ({ btnClass, render }) =>\n        !render || btnClass === 'partner-button' || btnClass === 'blue-button',\n    );\n    this.props.setFilled(!notFilled);\n  };\n\n  updateAvailability = (dateId, available) => {\n    const { firebase, matchId, uid } = this.props;\n    firebase.update('/matches/' + matchId + '/availability/' + dateId, {\n      [uid]: !available,\n    });\n  };\n\n  onClick = (dateId, available) => {\n    const { meFinalized, otherFinalized, setDateId } = this.props;\n\n    if (!meFinalized) {\n      this.updateAvailability(dateId, available);\n    }\n\n    if (meFinalized && otherFinalized) {\n      setDateId(dateId);\n    }\n  };\n\n  getColor = available => {\n    const { otherUid, uid } = this.props;\n    let btnClass = 'blue-button';\n    let currentAvailability = false;\n\n    if (available) {\n      if (available[otherUid] && available[uid]) {\n        btnClass = 'both-button';\n        currentAvailability = true;\n      } else if (!available[otherUid] && available[uid]) {\n        btnClass = 'you-button';\n        currentAvailability = true;\n      } else if (available[otherUid] && !available[uid]) {\n        btnClass = 'partner-button';\n        currentAvailability = false;\n      }\n    }\n    return { btnClass, currentAvailability };\n  };\n\n  getFinalizedColor = dateId => {\n    if (dateId === this.props.dateId) {\n      return 'you-button';\n    }\n    return 'blue-button';\n  };\n\n  render() {\n    const { meFinalized, otherFinalized, requested } = this.props;\n\n    if (!requested) {\n      return (\n        <div style={{ height: 200 }}>\n          <Loading />\n        </div>\n      );\n    }\n\n    const { processedDates } = this.state;\n    const notRendered = processedDates.every(date => !date.render);\n\n    if (notRendered) {\n      if (meFinalized && otherFinalized) {\n        return (\n          <div style={{ color: 'red' }}>\n            There are currently no dates both of you can make. Try changing your\n            availability.\n          </div>\n        );\n      }\n\n      return (\n        <div style={{ color: 'red' }}>\n          Unfortunately, there are no dates available at this time.\n        </div>\n      );\n    }\n\n    return (\n      <div css={datesStyle}>\n        {processedDates.map(date => {\n          const {\n            btnClass,\n            currentAvailability,\n            day,\n            id,\n            place,\n            render,\n          } = date;\n\n          if (!render) {\n            return null;\n          }\n\n          return (\n            <button\n              className={'date ' + btnClass}\n              key={id}\n              onClick={() => this.onClick(id, currentAvailability)}\n            >\n              {place.toUpperCase()} {day}\n            </button>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, _props) => {\n  const { availability, dates } = state.firebase.data;\n  const { requested } = state.firebase;\n\n  return {\n    availability,\n    dates,\n    requested: requested.availability && requested.dates,\n  };\n};\n\nexport default compose(\n  firebaseConnect(props => [\n    {\n      path: '/dates',\n      storeAs: 'dates',\n      queryParams: ['orderByChild=datesAvailable', 'startAt=1'],\n    },\n    {\n      path: `/matches/${props.matchId}/availability`,\n      storeAs: 'availability',\n    },\n  ]),\n  connect(mapStateToProps),\n)(Dates);\n"]},"metadata":{},"sourceType":"module"}