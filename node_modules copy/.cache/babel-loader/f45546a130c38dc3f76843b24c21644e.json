{"ast":null,"code":"import _objectSpread from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/melissa/datamatch/src/pages/PageProfile.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  .profile-container {\\n    margin-top: 10px;\\n  }\\n\\n  .profile-pic {\\n    float: left;\\n    margin-right: 10px;\\n  }\\n\\n  .profile-input {\\n    text-align: left;\\n    width: 300px;\\n    height: 43px;\\n    margin-bottom: 9px;\\n    color: #545353;\\n    background: #f4f2f2;\\n    border: 0px;\\n  }\\n\\n  .profile-select {\\n    background: #f4f2f2;\\n    background-image: url(https://image.flaticon.com/icons/svg/60/60781.svg);\\n    background-position: 95% 50%;\\n    background-repeat: no-repeat;\\n    background-size: 16px;\\n    border: 0px;\\n    width: 300px;\\n    height: 43px;\\n    margin-bottom: 9px;\\n    color: #545353;\\n  }\\n\\n  .looking-for-select {\\n    width: 150px !important;\\n    margin-bottom: 0px !important;\\n  }\\n\\n  .match-type-select {\\n    width: 170px !important;\\n    margin-bottom: 0px !important;\\n  }\\n\\n  .gender-select {\\n    width: 120px !important;\\n    margin-bottom: 0px !important;\\n  }\\n\\n  .looking-for-gender-select {\\n    width: 250px !important;\\n    margin-bottom: 0px !important;\\n  }\\n\\n  .bottom-elements {\\n    margin-top: 20px;\\n    margin-bottom: 20px;\\n  }\\n\\n  .question-header {\\n    font-family: Apercu;\\n    letter-spacing: 0.05em;\\n    margin-bottom: 0.1em;\\n  }\\n\\n  .question-subheader {\\n    font-family: Apercu-Light;\\n    font-size: 12px;\\n    letter-spacing: 0.05em;\\n    margin-bottom: 1em;\\n  }\\n\\n  .madlibs {\\n    overflow-x: auto;\\n    overflow-y: hidden;\\n    display: flex;\\n    align-items: center;\\n    flex-wrap: wrap;\\n  }\\n\\n  .madlibs > div {\\n    display: inline-block;\\n    margin-top: 0.3em;\\n    margin-right: 0.5em;\\n  }\\n\\n  .profile-text-area {\\n    text-align: left;\\n    width: 300px;\\n    height: 75px;\\n    color: #545353;\\n    background: #f4f2f2;\\n    border: 0px;\\n  }\\n\\n  .text-area-container {\\n    display: inline-block;\\n  }\\n\\n  .save-button {\\n    margin-left: 210px;\\n    width: 300px;\\n  }\\n\\n  .incomplete-message {\\n    margin-top: 5px;\\n    margin-left: 210px;\\n    color: red;\\n  }\\n\\n  .react-toggle--checked .react-toggle-track {\\n    background-color: #bd574e;\\n  }\\n\\n  .react-toggle--checked:hover:not(.react-toggle--disabled)\\n    .react-toggle-track {\\n    background-color: #6c2c2c;\\n  }\\n\\n  .react-toggle--checked .react-toggle-thumb {\\n    border-color: #bd574e;\\n  }\\n\\n  .autocomplete-menu {\\n    border-radius: 3px;\\n    box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);\\n    background: white;\\n    padding: 2px 0;\\n    font-size: 90%;\\n    position: absolute;\\n    width: 100%;\\n    overflow: auto;\\n    z-index: 100;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { Link } from 'react-router-dom';\nimport Toggle from 'react-toggle';\nimport 'react-toggle/style.css';\nimport { USTerritoryList, CountryList } from 'constants/Countries';\nimport Checkboxes from 'components/Checkboxes';\nimport Header from 'components/Header';\nimport Input from 'components/Input';\nimport PicUpload from 'components/PicUpload';\nimport Select from 'components/Select';\nimport SelectAutocomplete from 'components/SelectAutocomplete';\nimport Textarea from 'components/Textarea';\nvar pageProfileLayoutStyle = css(_templateObject());\nvar mandatoryStateSelect = 'United States of America';\n\nvar PageProfile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PageProfile, _Component);\n\n  function PageProfile(props) {\n    var _this;\n\n    _classCallCheck(this, PageProfile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PageProfile).call(this, props));\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleLocationChange = function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      _this.setState(function (_ref) {\n        var location = _ref.location;\n        return {\n          location: _objectSpread({}, location, _defineProperty({}, name, value))\n        };\n      });\n    };\n\n    _this.handleLocationSelect = function (value, type) {\n      var location = _this.state.location;\n\n      if (type === 'country') {\n        _this.setState({\n          location: {\n            country: value,\n            state: value === mandatoryStateSelect ? '' : null\n          }\n        });\n      } else if (type === 'state' && location.country === mandatoryStateSelect) {\n        _this.setState({\n          location: _objectSpread({}, location, {\n            state: value\n          })\n        });\n      }\n    };\n\n    _this.handleLocationReset = function (e) {\n      var name = e.target.name;\n      var location = _this.state.location; // don't reset if valid name\n\n      if (CountryList.includes(location[name]) || USTerritoryList.includes(location[name])) {\n        return;\n      }\n\n      _this.setState(function (_ref2) {\n        var location = _ref2.location;\n        return {\n          location: _objectSpread({}, location, _defineProperty({}, name, ''))\n        };\n      });\n    };\n\n    _this.handleOptionAsObject = function (event) {\n      var _event$target2 = event.target,\n          name = _event$target2.name,\n          value = _event$target2.value;\n      var selected = value.split(',').reduce(function (result, item) {\n        result[item] = true;\n        return result;\n      }, {});\n\n      _this.setState(_defineProperty({}, name, selected));\n    };\n\n    _this.handleCheckboxChange = function (name, response) {\n      var values = _this.state[name];\n      var bool = values ? !values[response] : true;\n\n      var newValues = _objectSpread({}, values, _defineProperty({}, response, bool));\n\n      _this.setState(_defineProperty({}, name, newValues));\n    };\n\n    _this.handleRadioChange = function (name, response) {\n      _this.setState(_defineProperty({}, name, response));\n    };\n\n    _this.handleToggleChange = function () {\n      _this.setState({\n        show: !_this.state.show\n      });\n    };\n\n    _this.checkRequired = function () {\n      var required = ['dorm', 'gender', 'matchType', 'name', 'year'];\n      var completed = required.every(function (requirement) {\n        return _this.state[requirement];\n      });\n      var _this$state = _this.state,\n          lookingForGender = _this$state.lookingForGender,\n          location = _this$state.location;\n\n      var _ref3 = lookingForGender || {},\n          Male = _ref3.Male,\n          Female = _ref3.Female,\n          Nonbinary = _ref3.Nonbinary;\n\n      var lookingFor = _this.state.lookingFor || {};\n      var locationComplete = location.country && (location.country !== mandatoryStateSelect || location.state); // Using bracket notation as 'true love' is not a valid identifier\n\n      var truelove = lookingFor['true love'];\n      var bestie = lookingFor['bestie'];\n      completed = completed && locationComplete && (Male || Female || Nonbinary) && (truelove || bestie);\n      return completed;\n    };\n\n    _this.checkChanged = function () {\n      var profile = _this.props.profile;\n\n      var _ref4 = _this.state.lookingForGender || {},\n          Male = _ref4.Male,\n          Female = _ref4.Female,\n          Nonbinary = _ref4.Nonbinary;\n\n      var lookingForGender = profile.lookingForGender || {};\n      var lookingFor = profile.lookingFor || {};\n      var lookingForState = _this.state.lookingFor || {};\n      var harvardMIT = profile.harvardMIT || false;\n      var Yes = _this.state.harvardMIT.Yes;\n\n      var _ref5 = profile.location || {},\n          _ref5$country = _ref5.country,\n          country = _ref5$country === void 0 ? '' : _ref5$country,\n          _ref5$state = _ref5.state,\n          state = _ref5$state === void 0 ? '' : _ref5$state;\n\n      var location = _this.state.location; // Using bracket notation as 'true love' is not a valid identifier\n\n      var truelove = lookingForState['true love'];\n      var bestie = lookingForState['bestie'];\n      var needCheck = ['description', 'dorm', 'gender', 'matchType', 'name', 'show', 'year'];\n      var same = needCheck.every(function (input) {\n        return _this.state[input] === profile[input];\n      }); // ^ is XOR. We need it to deal with undefined === false cases.\n\n      same = same && !(Male ^ lookingForGender['Male']) && !(Female ^ lookingForGender['Female']) && !(Nonbinary ^ lookingForGender['Nonbinary']) && !(truelove ^ lookingFor['true love']) && !(bestie ^ lookingFor['bestie']) && harvardMIT === Yes && country === (location.country || '') && state === (location.state || '');\n      return same;\n    };\n\n    _this.saveProfile = function () {\n      if (_this.checkRequired()) {\n        var _this$props = _this.props,\n            college = _this$props.college,\n            updateProfile = _this$props.updateProfile;\n\n        var lowerCaseName = _this.state.name.toLowerCase();\n\n        var _this$state2 = _this.state,\n            harvardMIT = _this$state2.harvardMIT,\n            show = _this$state2.show;\n        updateProfile(_objectSpread({}, _this.state, {\n          harvardMIT: college === 'Harvard' || college === 'MIT' ? harvardMIT && harvardMIT.Yes : null,\n          last: show ? lowerCaseName.split(' ').slice(-1)[0] : null,\n          searchName: show ? lowerCaseName : null\n        }));\n        alert('Info saved!');\n      }\n    };\n\n    _this.parseObject = function (obj) {\n      var result = Object.keys(obj).filter(function (key) {\n        return obj[key] === true;\n      }).sort(function (a, b) {\n        return a < b ? -1 : 1;\n      }).join();\n      return result;\n    };\n\n    var _props$profile = props.profile,\n        _props$profile$descri = _props$profile.description,\n        description = _props$profile$descri === void 0 ? '' : _props$profile$descri,\n        _props$profile$dorm = _props$profile.dorm,\n        dorm = _props$profile$dorm === void 0 ? '' : _props$profile$dorm,\n        _props$profile$gender = _props$profile.gender,\n        gender = _props$profile$gender === void 0 ? '' : _props$profile$gender,\n        _props$profile$locati = _props$profile.location,\n        _location = _props$profile$locati === void 0 ? {} : _props$profile$locati,\n        _props$profile$lookin = _props$profile.lookingFor,\n        _lookingFor = _props$profile$lookin === void 0 ? {} : _props$profile$lookin,\n        _props$profile$lookin2 = _props$profile.lookingForGender,\n        _lookingForGender = _props$profile$lookin2 === void 0 ? {} : _props$profile$lookin2,\n        _props$profile$matchT = _props$profile.matchType,\n        matchType = _props$profile$matchT === void 0 ? '' : _props$profile$matchT,\n        _props$profile$name = _props$profile.name,\n        _name = _props$profile$name === void 0 ? '' : _props$profile$name,\n        _props$profile$show = _props$profile.show,\n        _show = _props$profile$show === void 0 ? true : _props$profile$show,\n        _props$profile$year = _props$profile.year,\n        year = _props$profile$year === void 0 ? '' : _props$profile$year;\n\n    var _harvardMIT;\n\n    if (props.profile.harvardMIT) {\n      _harvardMIT = {\n        Yes: true\n      };\n    } else {\n      _harvardMIT = {\n        Yes: false\n      };\n    }\n\n    _this.state = {\n      description: description,\n      dorm: dorm,\n      gender: gender,\n      harvardMIT: _harvardMIT,\n      location: _location,\n      lookingFor: _lookingFor,\n      lookingForGender: _lookingForGender,\n      matchType: matchType,\n      name: _name,\n      show: _show,\n      year: year\n    };\n    return _this;\n  }\n\n  _createClass(PageProfile, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          college = _this$props2.college,\n          dorms = _this$props2.dorms,\n          email = _this$props2.email,\n          profile_pic = _this$props2.profile_pic,\n          updateProfile = _this$props2.updateProfile;\n      var _this$state3 = this.state,\n          description = _this$state3.description,\n          dorm = _this$state3.dorm,\n          gender = _this$state3.gender,\n          harvardMIT = _this$state3.harvardMIT,\n          location = _this$state3.location,\n          lookingFor = _this$state3.lookingFor,\n          lookingForGender = _this$state3.lookingForGender,\n          matchType = _this$state3.matchType,\n          name = _this$state3.name,\n          show = _this$state3.show,\n          year = _this$state3.year;\n      var filled = this.checkRequired();\n      var changed = !this.checkChanged();\n      var lookingForSelect = this.parseObject(lookingFor);\n      var lookingForGenderSelect = this.parseObject(lookingForGender);\n      var showStateSelect = location.country === mandatoryStateSelect;\n      return jsx(\"div\", {\n        className: \"PageProfile\",\n        css: pageProfileLayoutStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, jsx(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, \"PROFILE\"), jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }), jsx(\"div\", {\n        className: \"profile-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, jsx(\"div\", {\n        className: \"profile-pic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }, jsx(PicUpload, {\n        name: email,\n        original_pic: profile_pic,\n        path: \"/profile_pics\",\n        size: 200,\n        updateURL: updateProfile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      })), jsx(Input, {\n        className: \"profile-input\",\n        handleInputChange: this.handleInputChange,\n        name: \"name\",\n        placeholder: \"Your name\",\n        type: \"text\",\n        value: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }), jsx(Select, {\n        className: \"profile-select\",\n        handleInputChange: this.handleInputChange,\n        name: \"dorm\",\n        placeholder: \"Dorm\",\n        value: dorm,\n        values: dorms,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }), jsx(Select, {\n        className: \"profile-select\",\n        handleInputChange: this.handleInputChange,\n        name: \"year\",\n        placeholder: \"Year\",\n        value: year,\n        values: ['First Year', 'Sophomore', 'Junior', 'Senior', 'Grad student'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }), jsx(\"div\", {\n        className: \"text-area-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }, jsx(Textarea, {\n        className: \"profile-text-area\",\n        handleInputChange: this.handleInputChange,\n        name: \"description\",\n        placeholder: \"Write a bit about yourself!\",\n        rows: 2,\n        type: \"text\",\n        value: description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      })), jsx(\"div\", {\n        className: \"bottom-elements\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }, jsx(\"div\", {\n        className: \"question-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444\n        },\n        __self: this\n      }, \"WHAT DO YOU WANT FROM DATAMATCH? (BE HONEST.)\"), jsx(\"div\", {\n        className: \"question-subheader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      }, \"Read our \", jsx(Link, {\n        to: \"/app/gender_policy\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }, \"gender policy\"), \".\"), jsx(\"div\", {\n        className: \"madlibs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }, jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }, \"I'm looking for\"), jsx(Select, {\n        className: \"profile-select looking-for-select\",\n        handleInputChange: this.handleOptionAsObject,\n        labels: ['love', 'friendship', 'anything, really'],\n        name: \"lookingFor\",\n        placeholder: \"Select\",\n        value: lookingForSelect,\n        values: ['true love', 'bestie', 'bestie,true love'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }), jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }, \"with someone who is\"), jsx(Select, {\n        className: \"profile-select match-type-select\",\n        handleInputChange: this.handleInputChange,\n        labels: ['similar to me', 'different from me'],\n        name: \"matchType\",\n        placeholder: \"Select\",\n        value: matchType,\n        values: ['similar', 'different'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      })), jsx(\"div\", {\n        className: \"madlibs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }, jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }, \"I identify as\"), jsx(Select, {\n        className: \"profile-select gender-select\",\n        handleInputChange: this.handleInputChange,\n        labels: ['male', 'female', 'nonbinary'],\n        name: \"gender\",\n        placeholder: \"Select\",\n        value: gender,\n        values: ['Male', 'Female', 'Nonbinary'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }), jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, \"and I want to be matched with\"), jsx(Select, {\n        className: \"profile-select looking-for-gender-select\",\n        handleInputChange: this.handleOptionAsObject,\n        labels: ['males', 'females', 'nonbinary people', 'males & females', 'males & nonbinary people', 'females & nonbinary people', 'people of any gender'],\n        name: \"lookingForGender\",\n        placeholder: \"Select\",\n        value: lookingForGenderSelect,\n        values: ['Male', 'Female', 'Nonbinary', 'Female,Male', 'Male,Nonbinary', 'Female,Nonbinary', 'Female,Male,Nonbinary'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }))), jsx(\"div\", {\n        className: \"bottom-elements\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511\n        },\n        __self: this\n      }, jsx(\"div\", {\n        className: \"question-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512\n        },\n        __self: this\n      }, \"WHERE DO YOU CALL HOME?\"), jsx(\"div\", {\n        className: \"question-subheader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }, \"Our stats team is visualizing the home countries of all Datamatch participants. Check out their work\", ' ', jsx(Link, {\n        to: \"/app/stats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516\n        },\n        __self: this\n      }, \"here\"), \".\"), jsx(SelectAutocomplete, {\n        inputClass: \"profile-input\",\n        inputName: \"country\",\n        items: CountryList,\n        menuClass: \"autocomplete-menu\",\n        onBlur: this.handleLocationReset,\n        onChange: this.handleLocationChange,\n        onSelect: function onSelect(value) {\n          return _this2.handleLocationSelect(value, 'country');\n        },\n        placeholder: \"Type Home Country\",\n        value: location.country || '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }), showStateSelect && jsx(SelectAutocomplete, {\n        inputClass: \"profile-input\",\n        inputName: \"state\",\n        items: USTerritoryList,\n        menuClass: \"autocomplete-menu\",\n        onBlur: this.handleLocationReset,\n        onChange: this.handleLocationChange,\n        onSelect: function onSelect(value) {\n          return _this2.handleLocationSelect(value, 'state');\n        },\n        placeholder: \"Type State\",\n        value: location.state || '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530\n        },\n        __self: this\n      })), (college === 'Harvard' || college === 'MIT') && jsx(\"div\", {\n        className: \"bottom-elements\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544\n        },\n        __self: this\n      }, jsx(\"div\", {\n        className: \"question-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545\n        },\n        __self: this\n      }, \"HARVARD-MIT MATCHES\"), jsx(Checkboxes, {\n        handleClick: this.handleCheckboxChange,\n        labels: ['I want to opt in to cross Harvard-MIT matches!'],\n        name: \"harvardMIT\",\n        responses: ['Yes'],\n        values: harvardMIT,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546\n        },\n        __self: this\n      })), jsx(\"div\", {\n        className: \"bottom-elements\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555\n        },\n        __self: this\n      }, jsx(\"div\", {\n        className: \"question-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556\n        },\n        __self: this\n      }, \"SHOW IN SEARCH\"), jsx(Toggle, {\n        defaultChecked: show,\n        onChange: this.handleToggleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557\n        },\n        __self: this\n      }))), jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563\n        },\n        __self: this\n      }), jsx(\"div\", {\n        className: \"save-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564\n        },\n        __self: this\n      }, jsx(\"button\", {\n        onClick: this.saveProfile,\n        style: {\n          opacity: filled ? 1 : 0.8,\n          margin: '0 auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565\n        },\n        __self: this\n      }, \"Save Changes\")), !filled && jsx(\"div\", {\n        className: \"incomplete-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576\n        },\n        __self: this\n      }, \"Please fully complete profile before saving.\"), changed && jsx(\"div\", {\n        className: \"incomplete-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581\n        },\n        __self: this\n      }, \"You have unsaved changes.\")));\n    }\n  }]);\n\n  return PageProfile;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, props) {\n  return {\n    email: state.firebase.auth.email,\n    profile: state.firebase.profile,\n    profile_pic: state.firebase.profile.profile_pic,\n    updateProfile: props.firebase.updateProfile\n  };\n};\n\nexport default compose(firebaseConnect(), connect(mapStateToProps))(PageProfile);","map":{"version":3,"sources":["/Users/melissa/datamatch/src/pages/PageProfile.js"],"names":["jsx","css","Component","connect","compose","firebaseConnect","Link","Toggle","USTerritoryList","CountryList","Checkboxes","Header","Input","PicUpload","Select","SelectAutocomplete","Textarea","pageProfileLayoutStyle","mandatoryStateSelect","PageProfile","props","handleInputChange","event","target","name","value","setState","handleLocationChange","e","location","handleLocationSelect","type","state","country","handleLocationReset","includes","handleOptionAsObject","selected","split","reduce","result","item","handleCheckboxChange","response","values","bool","newValues","handleRadioChange","handleToggleChange","show","checkRequired","required","completed","every","requirement","lookingForGender","Male","Female","Nonbinary","lookingFor","locationComplete","truelove","bestie","checkChanged","profile","lookingForState","harvardMIT","Yes","needCheck","same","input","saveProfile","college","updateProfile","lowerCaseName","toLowerCase","last","slice","searchName","alert","parseObject","obj","Object","keys","filter","key","sort","a","b","join","description","dorm","gender","matchType","year","dorms","email","profile_pic","filled","changed","lookingForSelect","lookingForGenderSelect","showStateSelect","opacity","margin","mapStateToProps","firebase","auth"],"mappings":"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","sourcesContent":["/** @jsx jsx */\n\nimport { jsx, css } from '@emotion/core';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { Link } from 'react-router-dom';\nimport Toggle from 'react-toggle';\nimport 'react-toggle/style.css';\n\nimport { USTerritoryList, CountryList } from 'constants/Countries';\nimport Checkboxes from 'components/Checkboxes';\nimport Header from 'components/Header';\nimport Input from 'components/Input';\nimport PicUpload from 'components/PicUpload';\nimport Select from 'components/Select';\nimport SelectAutocomplete from 'components/SelectAutocomplete';\nimport Textarea from 'components/Textarea';\n\nconst pageProfileLayoutStyle = css`\n  .profile-container {\n    margin-top: 10px;\n  }\n\n  .profile-pic {\n    float: left;\n    margin-right: 10px;\n  }\n\n  .profile-input {\n    text-align: left;\n    width: 300px;\n    height: 43px;\n    margin-bottom: 9px;\n    color: #545353;\n    background: #f4f2f2;\n    border: 0px;\n  }\n\n  .profile-select {\n    background: #f4f2f2;\n    background-image: url(https://image.flaticon.com/icons/svg/60/60781.svg);\n    background-position: 95% 50%;\n    background-repeat: no-repeat;\n    background-size: 16px;\n    border: 0px;\n    width: 300px;\n    height: 43px;\n    margin-bottom: 9px;\n    color: #545353;\n  }\n\n  .looking-for-select {\n    width: 150px !important;\n    margin-bottom: 0px !important;\n  }\n\n  .match-type-select {\n    width: 170px !important;\n    margin-bottom: 0px !important;\n  }\n\n  .gender-select {\n    width: 120px !important;\n    margin-bottom: 0px !important;\n  }\n\n  .looking-for-gender-select {\n    width: 250px !important;\n    margin-bottom: 0px !important;\n  }\n\n  .bottom-elements {\n    margin-top: 20px;\n    margin-bottom: 20px;\n  }\n\n  .question-header {\n    font-family: Apercu;\n    letter-spacing: 0.05em;\n    margin-bottom: 0.1em;\n  }\n\n  .question-subheader {\n    font-family: Apercu-Light;\n    font-size: 12px;\n    letter-spacing: 0.05em;\n    margin-bottom: 1em;\n  }\n\n  .madlibs {\n    overflow-x: auto;\n    overflow-y: hidden;\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n  }\n\n  .madlibs > div {\n    display: inline-block;\n    margin-top: 0.3em;\n    margin-right: 0.5em;\n  }\n\n  .profile-text-area {\n    text-align: left;\n    width: 300px;\n    height: 75px;\n    color: #545353;\n    background: #f4f2f2;\n    border: 0px;\n  }\n\n  .text-area-container {\n    display: inline-block;\n  }\n\n  .save-button {\n    margin-left: 210px;\n    width: 300px;\n  }\n\n  .incomplete-message {\n    margin-top: 5px;\n    margin-left: 210px;\n    color: red;\n  }\n\n  .react-toggle--checked .react-toggle-track {\n    background-color: #bd574e;\n  }\n\n  .react-toggle--checked:hover:not(.react-toggle--disabled)\n    .react-toggle-track {\n    background-color: #6c2c2c;\n  }\n\n  .react-toggle--checked .react-toggle-thumb {\n    border-color: #bd574e;\n  }\n\n  .autocomplete-menu {\n    border-radius: 3px;\n    box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);\n    background: white;\n    padding: 2px 0;\n    font-size: 90%;\n    position: absolute;\n    width: 100%;\n    overflow: auto;\n    z-index: 100;\n  }\n`;\n\nconst mandatoryStateSelect = 'United States of America';\n\nclass PageProfile extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      description = '',\n      dorm = '',\n      gender = '',\n      location = {},\n      lookingFor = {},\n      lookingForGender = {},\n      matchType = '',\n      name = '',\n      show = true,\n      year = '',\n    } = props.profile;\n\n    let harvardMIT;\n    if (props.profile.harvardMIT) {\n      harvardMIT = { Yes: true };\n    } else {\n      harvardMIT = { Yes: false };\n    }\n\n    this.state = {\n      description,\n      dorm,\n      gender,\n      harvardMIT,\n      location,\n      lookingFor,\n      lookingForGender,\n      matchType,\n      name,\n      show,\n      year,\n    };\n  }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleLocationChange = e => {\n    const { name, value } = e.target;\n    this.setState(({ location }) => ({\n      location: { ...location, [name]: value },\n    }));\n  };\n\n  handleLocationSelect = (value, type) => {\n    const { location } = this.state;\n    if (type === 'country') {\n      this.setState({\n        location: {\n          country: value,\n          state: value === mandatoryStateSelect ? '' : null,\n        },\n      });\n    } else if (type === 'state' && location.country === mandatoryStateSelect) {\n      this.setState({ location: { ...location, state: value } });\n    }\n  };\n\n  handleLocationReset = e => {\n    const { name } = e.target;\n    const { location } = this.state;\n\n    // don't reset if valid name\n    if (\n      CountryList.includes(location[name]) ||\n      USTerritoryList.includes(location[name])\n    ) {\n      return;\n    }\n\n    this.setState(({ location }) => ({\n      location: { ...location, [name]: '' },\n    }));\n  };\n\n  handleOptionAsObject = event => {\n    const { name, value } = event.target;\n    const selected = value.split(',').reduce((result, item) => {\n      result[item] = true;\n      return result;\n    }, {});\n    this.setState({ [name]: selected });\n  };\n\n  handleCheckboxChange = (name, response) => {\n    const values = this.state[name];\n    const bool = values ? !values[response] : true;\n    const newValues = {\n      ...values,\n      [response]: bool,\n    };\n    this.setState({ [name]: newValues });\n  };\n\n  handleRadioChange = (name, response) => {\n    this.setState({ [name]: response });\n  };\n\n  handleToggleChange = () => {\n    this.setState({ show: !this.state.show });\n  };\n\n  checkRequired = () => {\n    const required = ['dorm', 'gender', 'matchType', 'name', 'year'];\n\n    let completed = required.every(requirement => this.state[requirement]);\n\n    const { lookingForGender, location } = this.state;\n    const { Male, Female, Nonbinary } = lookingForGender || {};\n    const lookingFor = this.state.lookingFor || {};\n\n    const locationComplete =\n      location.country &&\n      (location.country !== mandatoryStateSelect || location.state);\n\n    // Using bracket notation as 'true love' is not a valid identifier\n    const truelove = lookingFor['true love'];\n    const bestie = lookingFor['bestie'];\n\n    completed =\n      completed &&\n      locationComplete &&\n      (Male || Female || Nonbinary) &&\n      (truelove || bestie);\n\n    return completed;\n  };\n\n  checkChanged = () => {\n    const { profile } = this.props;\n    const { Male, Female, Nonbinary } = this.state.lookingForGender || {};\n    const lookingForGender = profile.lookingForGender || {};\n    const lookingFor = profile.lookingFor || {};\n    const lookingForState = this.state.lookingFor || {};\n\n    const harvardMIT = profile.harvardMIT || false;\n    const { Yes } = this.state.harvardMIT;\n\n    const { country = '', state = '' } = profile.location || {};\n    const { location } = this.state;\n\n    // Using bracket notation as 'true love' is not a valid identifier\n    const truelove = lookingForState['true love'];\n    const bestie = lookingForState['bestie'];\n\n    const needCheck = [\n      'description',\n      'dorm',\n      'gender',\n      'matchType',\n      'name',\n      'show',\n      'year',\n    ];\n\n    let same = needCheck.every(input => this.state[input] === profile[input]);\n\n    // ^ is XOR. We need it to deal with undefined === false cases.\n    same =\n      same &&\n      !(Male ^ lookingForGender['Male']) &&\n      !(Female ^ lookingForGender['Female']) &&\n      !(Nonbinary ^ lookingForGender['Nonbinary']) &&\n      !(truelove ^ lookingFor['true love']) &&\n      !(bestie ^ lookingFor['bestie']) &&\n      harvardMIT === Yes &&\n      country === (location.country || '') &&\n      state === (location.state || '');\n\n    return same;\n  };\n\n  saveProfile = () => {\n    if (this.checkRequired()) {\n      const { college, updateProfile } = this.props;\n      const lowerCaseName = this.state.name.toLowerCase();\n      const { harvardMIT, show } = this.state;\n\n      updateProfile({\n        ...this.state,\n        harvardMIT:\n          college === 'Harvard' || college === 'MIT'\n            ? harvardMIT && harvardMIT.Yes\n            : null,\n        last: show ? lowerCaseName.split(' ').slice(-1)[0] : null,\n        searchName: show ? lowerCaseName : null,\n      });\n      alert('Info saved!');\n    }\n  };\n\n  // Parses object like {'true love': true, 'bestie': false} as 'true love'\n  parseObject = obj => {\n    const result = Object.keys(obj)\n      .filter(key => obj[key] === true)\n      .sort((a, b) => (a < b ? -1 : 1))\n      .join();\n    return result;\n  };\n\n  render() {\n    const { college, dorms, email, profile_pic, updateProfile } = this.props;\n    const {\n      description,\n      dorm,\n      gender,\n      harvardMIT,\n      location,\n      lookingFor,\n      lookingForGender,\n      matchType,\n      name,\n      show,\n      year,\n    } = this.state;\n\n    var filled = this.checkRequired();\n    var changed = !this.checkChanged();\n\n    const lookingForSelect = this.parseObject(lookingFor);\n    const lookingForGenderSelect = this.parseObject(lookingForGender);\n    const showStateSelect = location.country === mandatoryStateSelect;\n\n    return (\n      <div className=\"PageProfile\" css={pageProfileLayoutStyle}>\n        <Header>PROFILE</Header>\n        <br />\n        <div className=\"profile-container\">\n          <div>\n            <div className=\"profile-pic\">\n              <PicUpload\n                name={email}\n                original_pic={profile_pic}\n                path=\"/profile_pics\"\n                size={200}\n                updateURL={updateProfile}\n              />\n            </div>\n            <Input\n              className=\"profile-input\"\n              handleInputChange={this.handleInputChange}\n              name=\"name\"\n              placeholder=\"Your name\"\n              type=\"text\"\n              value={name}\n            />\n            <Select\n              className=\"profile-select\"\n              handleInputChange={this.handleInputChange}\n              name=\"dorm\"\n              placeholder=\"Dorm\"\n              value={dorm}\n              values={dorms}\n            />\n            <Select\n              className=\"profile-select\"\n              handleInputChange={this.handleInputChange}\n              name=\"year\"\n              placeholder=\"Year\"\n              value={year}\n              values={[\n                'First Year',\n                'Sophomore',\n                'Junior',\n                'Senior',\n                'Grad student',\n              ]}\n            />\n            <div className=\"text-area-container\">\n              <Textarea\n                className=\"profile-text-area\"\n                handleInputChange={this.handleInputChange}\n                name=\"description\"\n                placeholder=\"Write a bit about yourself!\"\n                rows={2}\n                type=\"text\"\n                value={description}\n              />\n            </div>\n            <div className=\"bottom-elements\">\n              <div className=\"question-header\">\n                WHAT DO YOU WANT FROM DATAMATCH? (BE HONEST.)\n              </div>\n              <div className=\"question-subheader\">\n                Read our <Link to=\"/app/gender_policy\">gender policy</Link>.\n              </div>\n              <div className=\"madlibs\">\n                <div>I'm looking for</div>\n                <Select\n                  className=\"profile-select looking-for-select\"\n                  handleInputChange={this.handleOptionAsObject}\n                  labels={['love', 'friendship', 'anything, really']}\n                  name=\"lookingFor\"\n                  placeholder=\"Select\"\n                  value={lookingForSelect}\n                  values={['true love', 'bestie', 'bestie,true love']}\n                />\n                <div>with someone who is</div>\n                <Select\n                  className=\"profile-select match-type-select\"\n                  handleInputChange={this.handleInputChange}\n                  labels={['similar to me', 'different from me']}\n                  name=\"matchType\"\n                  placeholder=\"Select\"\n                  value={matchType}\n                  values={['similar', 'different']}\n                />\n              </div>\n              <div className=\"madlibs\">\n                <div>I identify as</div>\n                <Select\n                  className=\"profile-select gender-select\"\n                  handleInputChange={this.handleInputChange}\n                  labels={['male', 'female', 'nonbinary']}\n                  name=\"gender\"\n                  placeholder=\"Select\"\n                  value={gender}\n                  values={['Male', 'Female', 'Nonbinary']}\n                />\n                <div>and I want to be matched with</div>\n                <Select\n                  className=\"profile-select looking-for-gender-select\"\n                  handleInputChange={this.handleOptionAsObject}\n                  labels={[\n                    'males',\n                    'females',\n                    'nonbinary people',\n                    'males & females',\n                    'males & nonbinary people',\n                    'females & nonbinary people',\n                    'people of any gender',\n                  ]}\n                  name=\"lookingForGender\"\n                  placeholder=\"Select\"\n                  value={lookingForGenderSelect}\n                  values={[\n                    'Male',\n                    'Female',\n                    'Nonbinary',\n                    'Female,Male',\n                    'Male,Nonbinary',\n                    'Female,Nonbinary',\n                    'Female,Male,Nonbinary',\n                  ]}\n                />\n              </div>\n            </div>\n            <div className=\"bottom-elements\">\n              <div className=\"question-header\">WHERE DO YOU CALL HOME?</div>\n              <div className=\"question-subheader\">\n                Our stats team is visualizing the home countries of all\n                Datamatch participants. Check out their work{' '}\n                <Link to=\"/app/stats\">here</Link>.\n              </div>\n              <SelectAutocomplete\n                inputClass=\"profile-input\"\n                inputName=\"country\"\n                items={CountryList}\n                menuClass=\"autocomplete-menu\"\n                onBlur={this.handleLocationReset}\n                onChange={this.handleLocationChange}\n                onSelect={value => this.handleLocationSelect(value, 'country')}\n                placeholder=\"Type Home Country\"\n                value={location.country || ''}\n              />\n              {showStateSelect && (\n                <SelectAutocomplete\n                  inputClass=\"profile-input\"\n                  inputName=\"state\"\n                  items={USTerritoryList}\n                  menuClass=\"autocomplete-menu\"\n                  onBlur={this.handleLocationReset}\n                  onChange={this.handleLocationChange}\n                  onSelect={value => this.handleLocationSelect(value, 'state')}\n                  placeholder=\"Type State\"\n                  value={location.state || ''}\n                />\n              )}\n            </div>\n            {(college === 'Harvard' || college === 'MIT') && (\n              <div className=\"bottom-elements\">\n                <div className=\"question-header\">HARVARD-MIT MATCHES</div>\n                <Checkboxes\n                  handleClick={this.handleCheckboxChange}\n                  labels={['I want to opt in to cross Harvard-MIT matches!']}\n                  name=\"harvardMIT\"\n                  responses={['Yes']}\n                  values={harvardMIT}\n                />\n              </div>\n            )}\n            <div className=\"bottom-elements\">\n              <div className=\"question-header\">SHOW IN SEARCH</div>\n              <Toggle\n                defaultChecked={show}\n                onChange={this.handleToggleChange}\n              />\n            </div>\n          </div>\n          <br />\n          <div className=\"save-button\">\n            <button\n              onClick={this.saveProfile}\n              style={{\n                opacity: filled ? 1 : 0.8,\n                margin: '0 auto',\n              }}\n            >\n              Save Changes\n            </button>\n          </div>\n          {!filled && (\n            <div className=\"incomplete-message\">\n              Please fully complete profile before saving.\n            </div>\n          )}\n          {changed && (\n            <div className=\"incomplete-message\">You have unsaved changes.</div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n    email: state.firebase.auth.email,\n    profile: state.firebase.profile,\n    profile_pic: state.firebase.profile.profile_pic,\n    updateProfile: props.firebase.updateProfile,\n  };\n};\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps),\n)(PageProfile);\n"]},"metadata":{},"sourceType":"module"}