{"ast":null,"code":"import _defineProperty from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/melissa/datamatch/src/pages/SchoolPortal/Team.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  .description {\\n    font-family: Apercu-light;\\n    font-size: 16px;\\n    margin-bottom: 10px;\\n  }\\n\\n  .button-symbol {\\n    line-height: 29px;\\n  }\\n\\n  .round-button {\\n    background: rgba(249, 198, 195, 0.8);\\n    border: 3px solid #bd574e;\\n    border-radius: 50%;\\n    color: #bd574e;\\n    cursor: pointer;\\n    display: inline-block;\\n    height: 35px;\\n    text-align: center;\\n    vertical-align: middle;\\n    width: 35px;\\n  }\\n\\n  .input-container {\\n    align-items: center;\\n    display: grid;\\n    grid-column-gap: 7px;\\n    grid-template-columns: 135px 300px 35px;\\n    grid-template-rows: 45px 45px 45px;\\n    grid-row-gap: 2px;\\n    margin-bottom: 10px;\\n  }\\n\\n  .input {\\n    background: #f4f2f2;\\n    border: 0px;\\n    height: 40px;\\n  }\\n\\n  .image-input {\\n    grid-column-start: 1;\\n    grid-column-end: 2;\\n    grid-row-start: 1;\\n    grid-row-end: 4;\\n  }\\n\\n  .name-input {\\n    grid-column-start: 2;\\n    grid-column-end: 3;\\n    grid-row-start: 1;\\n    grid-row-end: 2;\\n  }\\n\\n  .position-input {\\n    grid-column-start: 2;\\n    grid-column-end: 3;\\n    grid-row-start: 2;\\n    grid-row-end: 3;\\n  }\\n\\n  .phrase-input {\\n    grid-column-start: 2;\\n    grid-column-end: 3;\\n    grid-row-start: 3;\\n    grid-row-end: 4;\\n  }\\n\\n  .remove-button {\\n    grid-column-start: 3;\\n    grid-column-end: 4;\\n    grid-row-start: 2;\\n    grid-row-end: 3;\\n  }\\n\\n  .save-changes {\\n    align-items: center;\\n    background: #bd574e;\\n    color: #ffffff;\\n    font-family: Apercu;\\n    font-size: 18px;\\n    height: 38px;\\n    letter-spacing: 0.05em;\\n    margin-top: 20px;\\n    width: 170px;\\n  }\\n\\n  .checkmark {\\n    margin-right: 4px;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsx jsx */\nimport { Component } from 'react';\nimport { jsx, css } from '@emotion/core';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect, firebaseConnect, isLoaded } from 'react-redux-firebase';\nimport uuidv1 from 'uuid/v1';\nimport Header from 'components/Header';\nimport Loading from 'components/Loading';\nimport PicUpload from 'components/PicUpload';\nvar teamStyle = css(_templateObject());\n\nvar Team =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Team, _Component);\n\n  function Team(props) {\n    var _this;\n\n    _classCallCheck(this, Team);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Team).call(this, props));\n\n    _this.dictToArray = function (dict) {\n      var newArray = [];\n\n      for (var key in dict) {\n        newArray.push(dict[key]);\n      }\n\n      return newArray;\n    };\n\n    _this.addInput = function () {\n      // append empty string to end of array\n      var empty = {\n        image_url: '',\n        name: '',\n        phrase: '',\n        position: ''\n      };\n\n      _this.setState({\n        teams: [].concat(_toConsumableArray(_this.state.teams.slice()), [empty])\n      });\n    };\n\n    _this.removeInput = function (index, inputs) {\n      var newInputs = inputs.slice();\n      delete newInputs[index];\n\n      _this.setState({\n        teams: _this.dictToArray(newInputs)\n      });\n    };\n\n    _this.editInput = function (index, value, inputs, name) {\n      var newInputs = _objectSpread({}, inputs, _defineProperty({}, index, _objectSpread({}, inputs[index], _defineProperty({}, name, value))));\n\n      _this.setState({\n        teams: _this.dictToArray(newInputs)\n      });\n    };\n\n    _this.assignTeam = function () {\n      var _this$props = _this.props,\n          school = _this$props.school,\n          updateBoard = _this$props.updateBoard,\n          updateTeam = _this$props.updateTeam;\n      var teams = _this.state.teams;\n      updateTeam({\n        data: teams\n      });\n\n      if (school === 'Harvard') {\n        updateBoard({\n          boardMembers: teams\n        });\n      }\n\n      alert('Team saved!');\n    };\n\n    _this.state = {\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(Team, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var team = this.props.team;\n\n      if (isLoaded(team) && this.state.loading) {\n        this.setState({\n          loading: false,\n          teams: (team || {}).data || []\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loading = _this$state.loading,\n          teams = _this$state.teams;\n      var school = this.props.school;\n\n      if (loading) {\n        return jsx(\"div\", {\n          style: {\n            height: 200\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, jsx(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }));\n      }\n\n      return jsx(\"div\", {\n        css: teamStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, jsx(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"TEAM\"), jsx(\"div\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"For each team member, add a name, a square image, a position, and a 30-character phrase (e.g. I'm feeling lucky). Make sure to hit Save Changes even with headshot/profile picture changes!\"), jsx(\"div\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Team members will be displayed in the exact order shown below.\"), jsx(InputList, {\n        addInput: this.addInput,\n        editInput: this.editInput,\n        inputs: teams,\n        removeInput: this.removeInput,\n        school: school,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), jsx(\"button\", {\n        className: \"save-changes\",\n        onClick: this.assignTeam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, jsx(\"i\", {\n        className: \"fas fa-check checkmark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }), \"Save Changes\"));\n    }\n  }]);\n\n  return Team;\n}(Component);\n\nvar InputList =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(InputList, _Component2);\n\n  function InputList() {\n    var _getPrototypeOf2;\n\n    var _this2;\n\n    _classCallCheck(this, InputList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(InputList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this2.onClick = function () {\n      var _this2$props = _this2.props,\n          addInput = _this2$props.addInput,\n          name = _this2$props.name;\n      addInput(name);\n    };\n\n    return _this2;\n  }\n\n  _createClass(InputList, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var inputs = this.props.inputs;\n      var dict = {};\n\n      for (var i = 0; i < inputs.length; i++) {\n        dict[i] = inputs[i];\n      }\n\n      return jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, Object.keys(dict).map(function (index) {\n        return jsx(Input, Object.assign({\n          index: index,\n          inputs: dict,\n          key: index\n        }, _this3.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }));\n      })), jsx(\"div\", {\n        className: \"round-button\",\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, jsx(\"i\", {\n        className: \"fas fa-plus button-symbol\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return InputList;\n}(Component);\n\nvar Input =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(Input, _Component3);\n\n  function Input() {\n    var _getPrototypeOf3;\n\n    var _this4;\n\n    _classCallCheck(this, Input);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this4 = _possibleConstructorReturn(this, (_getPrototypeOf3 = _getPrototypeOf(Input)).call.apply(_getPrototypeOf3, [this].concat(args)));\n\n    _this4.onClick = function () {\n      var _this4$props = _this4.props,\n          index = _this4$props.index,\n          inputs = _this4$props.inputs,\n          removeInput = _this4$props.removeInput;\n      removeInput(index, inputs);\n    };\n\n    _this4.onChange = function (name) {\n      return function (event) {\n        var _this4$props2 = _this4.props,\n            editInput = _this4$props2.editInput,\n            index = _this4$props2.index,\n            inputs = _this4$props2.inputs;\n        editInput(index, event.target.value, inputs, name);\n      };\n    };\n\n    _this4.updateImage = function (img) {\n      var _this4$props3 = _this4.props,\n          editInput = _this4$props3.editInput,\n          index = _this4$props3.index,\n          inputs = _this4$props3.inputs;\n      editInput(index, img.profile_pic, inputs, 'image_url');\n    };\n\n    return _this4;\n  }\n\n  _createClass(Input, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          index = _this$props2.index,\n          inputs = _this$props2.inputs,\n          school = _this$props2.school;\n      return jsx(\"div\", {\n        className: \"input-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, jsx(\"div\", {\n        className: \"image-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, jsx(PicUpload, {\n        name: uuidv1(),\n        original_pic: inputs[index].image_url || require('assets/empty.png'),\n        path: '/team_pics/' + school,\n        size: 135,\n        updateURL: this.updateImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      })), jsx(\"input\", {\n        className: \"input name-input\",\n        onChange: this.onChange('name'),\n        placeholder: \"Name\",\n        type: \"text\",\n        value: inputs[index].name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }), jsx(\"input\", {\n        className: \"input position-input\",\n        onChange: this.onChange('position'),\n        placeholder: \"Position\",\n        type: \"text\",\n        value: inputs[index].position,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }), jsx(\"input\", {\n        className: \"input phrase-input\",\n        maxLength: \"30\",\n        onChange: this.onChange('phrase'),\n        placeholder: \"Phrase (max 30 chars)\",\n        type: \"text\",\n        value: inputs[index].phrase,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }), jsx(\"div\", {\n        className: \"round-button remove-button\",\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, jsx(\"i\", {\n        className: \"fas fa-minus button-symbol\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Input;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, props) {\n  return {\n    team: state.firestore.data.team,\n    updateBoard: function updateBoard(team) {\n      return props.firestore.update({\n        collection: 'settings',\n        doc: 'config'\n      }, team);\n    },\n    updateTeam: function updateTeam(team) {\n      return props.firestore.update({\n        collection: 'team',\n        doc: props.school\n      }, team);\n    }\n  };\n};\n\nexport default compose(firebaseConnect(), firestoreConnect(function (_ref) {\n  var school = _ref.school;\n  return [{\n    collection: 'team',\n    doc: school,\n    storeAs: 'team'\n  }];\n}), connect(mapStateToProps))(Team);","map":{"version":3,"sources":["/Users/melissa/datamatch/src/pages/SchoolPortal/Team.js"],"names":["Component","jsx","css","connect","compose","firestoreConnect","firebaseConnect","isLoaded","uuidv1","Header","Loading","PicUpload","teamStyle","Team","props","dictToArray","dict","newArray","key","push","addInput","empty","image_url","name","phrase","position","setState","teams","state","slice","removeInput","index","inputs","newInputs","editInput","value","assignTeam","school","updateBoard","updateTeam","data","boardMembers","alert","loading","team","height","InputList","onClick","i","length","Object","keys","map","Input","onChange","event","target","updateImage","img","profile_pic","require","mapStateToProps","firestore","update","collection","doc","storeAs"],"mappings":"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","sourcesContent":["/** @jsx jsx */\n\nimport { Component } from 'react';\nimport { jsx, css } from '@emotion/core';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport {\n  firestoreConnect,\n  firebaseConnect,\n  isLoaded,\n} from 'react-redux-firebase';\nimport uuidv1 from 'uuid/v1';\n\nimport Header from 'components/Header';\nimport Loading from 'components/Loading';\nimport PicUpload from 'components/PicUpload';\n\nconst teamStyle = css`\n  .description {\n    font-family: Apercu-light;\n    font-size: 16px;\n    margin-bottom: 10px;\n  }\n\n  .button-symbol {\n    line-height: 29px;\n  }\n\n  .round-button {\n    background: rgba(249, 198, 195, 0.8);\n    border: 3px solid #bd574e;\n    border-radius: 50%;\n    color: #bd574e;\n    cursor: pointer;\n    display: inline-block;\n    height: 35px;\n    text-align: center;\n    vertical-align: middle;\n    width: 35px;\n  }\n\n  .input-container {\n    align-items: center;\n    display: grid;\n    grid-column-gap: 7px;\n    grid-template-columns: 135px 300px 35px;\n    grid-template-rows: 45px 45px 45px;\n    grid-row-gap: 2px;\n    margin-bottom: 10px;\n  }\n\n  .input {\n    background: #f4f2f2;\n    border: 0px;\n    height: 40px;\n  }\n\n  .image-input {\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 1;\n    grid-row-end: 4;\n  }\n\n  .name-input {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 1;\n    grid-row-end: 2;\n  }\n\n  .position-input {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 2;\n    grid-row-end: 3;\n  }\n\n  .phrase-input {\n    grid-column-start: 2;\n    grid-column-end: 3;\n    grid-row-start: 3;\n    grid-row-end: 4;\n  }\n\n  .remove-button {\n    grid-column-start: 3;\n    grid-column-end: 4;\n    grid-row-start: 2;\n    grid-row-end: 3;\n  }\n\n  .save-changes {\n    align-items: center;\n    background: #bd574e;\n    color: #ffffff;\n    font-family: Apercu;\n    font-size: 18px;\n    height: 38px;\n    letter-spacing: 0.05em;\n    margin-top: 20px;\n    width: 170px;\n  }\n\n  .checkmark {\n    margin-right: 4px;\n  }\n`;\n\nclass Team extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loading: true };\n  }\n\n  componentDidUpdate() {\n    const { team } = this.props;\n\n    if (isLoaded(team) && this.state.loading) {\n      this.setState({\n        loading: false,\n        teams: (team || {}).data || [],\n      });\n    }\n  }\n\n  dictToArray = dict => {\n    let newArray = [];\n    for (var key in dict) {\n      newArray.push(dict[key]);\n    }\n    return newArray;\n  };\n\n  addInput = () => {\n    // append empty string to end of array\n    const empty = {\n      image_url: '',\n      name: '',\n      phrase: '',\n      position: '',\n    };\n    this.setState({ teams: [...this.state.teams.slice(), empty] });\n  };\n\n  removeInput = (index, inputs) => {\n    const newInputs = inputs.slice();\n    delete newInputs[index];\n    this.setState({ teams: this.dictToArray(newInputs) });\n  };\n\n  editInput = (index, value, inputs, name) => {\n    let newInputs = {\n      ...inputs,\n      [index]: {\n        ...inputs[index],\n        [name]: value,\n      },\n    };\n    this.setState({ teams: this.dictToArray(newInputs) });\n  };\n\n  assignTeam = () => {\n    const { school, updateBoard, updateTeam } = this.props;\n    const { teams } = this.state;\n\n    updateTeam({ data: teams });\n    if (school === 'Harvard') {\n      updateBoard({ boardMembers: teams });\n    }\n\n    alert('Team saved!');\n  };\n\n  render() {\n    const { loading, teams } = this.state;\n    const { school } = this.props;\n\n    if (loading) {\n      return (\n        <div style={{ height: 200 }}>\n          <Loading />\n        </div>\n      );\n    }\n\n    return (\n      <div css={teamStyle}>\n        <Header>TEAM</Header>\n        <div className=\"description\">\n          For each team member, add a name, a square image, a position, and a\n          30-character phrase (e.g. I'm feeling lucky). Make sure to hit Save\n          Changes even with headshot/profile picture changes!\n        </div>\n        <div className=\"description\">\n          Team members will be displayed in the exact order shown below.\n        </div>\n        <InputList\n          addInput={this.addInput}\n          editInput={this.editInput}\n          inputs={teams}\n          removeInput={this.removeInput}\n          school={school}\n        />\n        <button className=\"save-changes\" onClick={this.assignTeam}>\n          <i className=\"fas fa-check checkmark\"></i>Save Changes\n        </button>\n      </div>\n    );\n  }\n}\n\nclass InputList extends Component {\n  onClick = () => {\n    const { addInput, name } = this.props;\n    addInput(name);\n  };\n\n  render() {\n    let { inputs } = this.props;\n\n    let dict = {};\n    for (var i = 0; i < inputs.length; i++) {\n      dict[i] = inputs[i];\n    }\n\n    return (\n      <div>\n        <div>\n          {Object.keys(dict).map(index => (\n            <Input index={index} inputs={dict} key={index} {...this.props} />\n          ))}\n        </div>\n        <div className=\"round-button\" onClick={this.onClick}>\n          <i className=\"fas fa-plus button-symbol\"></i>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Input extends Component {\n  onClick = () => {\n    const { index, inputs, removeInput } = this.props;\n    removeInput(index, inputs);\n  };\n\n  onChange = name => {\n    return event => {\n      const { editInput, index, inputs } = this.props;\n      editInput(index, event.target.value, inputs, name);\n    };\n  };\n\n  updateImage = img => {\n    const { editInput, index, inputs } = this.props;\n    editInput(index, img.profile_pic, inputs, 'image_url');\n  };\n\n  render() {\n    const { index, inputs, school } = this.props;\n\n    return (\n      <div className=\"input-container\">\n        <div className=\"image-input\">\n          <PicUpload\n            name={uuidv1()}\n            original_pic={\n              inputs[index].image_url || require('assets/empty.png')\n            }\n            path={'/team_pics/' + school}\n            size={135}\n            updateURL={this.updateImage}\n          />\n        </div>\n        <input\n          className=\"input name-input\"\n          onChange={this.onChange('name')}\n          placeholder=\"Name\"\n          type=\"text\"\n          value={inputs[index].name}\n        />\n        <input\n          className=\"input position-input\"\n          onChange={this.onChange('position')}\n          placeholder=\"Position\"\n          type=\"text\"\n          value={inputs[index].position}\n        />\n        <input\n          className=\"input phrase-input\"\n          maxLength=\"30\"\n          onChange={this.onChange('phrase')}\n          placeholder=\"Phrase (max 30 chars)\"\n          type=\"text\"\n          value={inputs[index].phrase}\n        />\n        <div className=\"round-button remove-button\" onClick={this.onClick}>\n          <i className=\"fas fa-minus button-symbol\"></i>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n    team: state.firestore.data.team,\n    updateBoard: team =>\n      props.firestore.update({ collection: 'settings', doc: 'config' }, team),\n    updateTeam: team =>\n      props.firestore.update(\n        {\n          collection: 'team',\n          doc: props.school,\n        },\n        team,\n      ),\n  };\n};\n\nexport default compose(\n  firebaseConnect(),\n  firestoreConnect(({ school }) => [\n    {\n      collection: 'team',\n      doc: school,\n      storeAs: 'team',\n    },\n  ]),\n  connect(mapStateToProps),\n)(Team);\n"]},"metadata":{},"sourceType":"module"}