{"ast":null,"code":"import _defineProperty from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/melissa/datamatch/src/pages/SchoolPortal/Survey.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  .modal-container {\\n    text-align: center;\\n    padding: 40px;\\n  }\\n\\n  .modal-question {\\n    font-size: 22px;\\n  }\\n\\n  .modal-cancel {\\n    cursor: pointer;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  .radio {\\n    border-radius: 50%;\\n    border: 2px solid #bd574e;\\n    min-width: 20px;\\n    height: 20px;\\n    background: #dd8078;\\n    margin-right: 11px;\\n  }\\n\\n  .answer {\\n    padding: 0px 10px;\\n    font-family: 'apercu-light';\\n    height: 40px;\\n    text-align: left;\\n    color: #222222;\\n    display: flex;\\n    align-items: center;\\n    cursor: pointer;\\n    &:hover {\\n      background: rgba(196, 196, 196, 0.1);\\n    }\\n  }\\n\\n  .answer-input {\\n    border-width: 0px;\\n    padding: 0px;\\n  }\\n\\n  .question {\\n    margin-bottom: 15px;\\n    position: relative;\\n  }\\n\\n  .question-input {\\n    color: #545353;\\n    border-width: 0;\\n    font-family: apercu;\\n    font-size: 1.25rem;\\n    padding: 0px;\\n    height: 30px;\\n    &:hover {\\n      background: rgba(196, 196, 196, 0.1);\\n    }\\n  }\\n\\n  .question:hover > .removeButton {\\n    visibility: visible;\\n  }\\n\\n  .removeButton {\\n    height: 20px;\\n    width: 20px;\\n    color: #bd574e;\\n    border-radius: 50%;\\n    background: rgba(249, 198, 195, 0.8);\\n    border: 2px solid #bd574e;\\n    position: absolute;\\n    right: 0px;\\n    top: 5px;\\n    visibility: hidden;\\n    font-size: 13px;\\n    cursor: pointer;\\n    line-height: 18px;\\n    text-align: center;\\n    &:hover {\\n      visibility: visible;\\n    }\\n  }\\n\\n  .button-symbol {\\n    line-height: 29px;\\n  }\\n\\n  .round-button {\\n    background: rgba(249, 198, 195, 0.8);\\n    border: 3px solid #bd574e;\\n    border-radius: 50%;\\n    color: #bd574e;\\n    cursor: pointer;\\n    display: inline-block;\\n    height: 35px;\\n    text-align: center;\\n    vertical-align: middle;\\n    width: 35px;\\n  }\\n\\n  .save-changes {\\n    align-items: center;\\n    background: #bd574e;\\n    color: #ffffff;\\n    font-family: Apercu;\\n    font-size: 18px;\\n    height: 38px;\\n    letter-spacing: 0.05em;\\n    margin-top: 20px;\\n    margin-bottom: 20px;\\n    width: 170px;\\n  }\\n\\n  .checkmark {\\n    margin-right: 4px;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsx jsx **/\nimport { Component } from 'react';\nimport { jsx, css } from '@emotion/core';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { isLoaded } from 'react-redux-firebase';\nimport Modal from 'react-bootstrap/Modal';\nimport Header from 'components/Header';\nimport Loading from 'components/Loading';\nvar surveyStyle = css(_templateObject());\nvar surveyModalStyle = css(_templateObject2());\n\nvar Survey =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Survey, _Component);\n\n  function Survey(props) {\n    var _this;\n\n    _classCallCheck(this, Survey);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Survey).call(this, props));\n\n    _this.editQuestion = function (index) {\n      return function (event) {\n        var survey = _this.state.survey;\n\n        var newQuestion = _objectSpread({}, survey[index], {\n          text: event.target.value\n        });\n\n        var newSurvey = survey.slice();\n        newSurvey[index] = newQuestion;\n\n        _this.setState({\n          survey: newSurvey\n        });\n      };\n    };\n\n    _this.editAnswer = function (index, answerKey) {\n      return function (event) {\n        var newSurvey = _this.state.survey.slice();\n\n        var newQuestion = _objectSpread({}, newSurvey[index], {\n          answers: _objectSpread({}, newSurvey[index].answers, _defineProperty({}, answerKey, event.target.value))\n        });\n\n        newSurvey[index] = newQuestion;\n\n        _this.setState({\n          survey: newSurvey\n        });\n      };\n    };\n\n    _this.addQuestion = function () {\n      var newSurvey = _this.state.survey.slice();\n\n      var newQuestion = {\n        text: 'Question ' + (newSurvey.length + 1),\n        answers: {\n          0: 'Option 1',\n          1: 'Option 2',\n          2: 'Option 3',\n          3: 'Option 4',\n          4: 'Option 5'\n        }\n      };\n      newSurvey.push(newQuestion);\n\n      _this.setState({\n        survey: newSurvey\n      });\n    };\n\n    _this.deleteQuestion = function (index) {\n      var newSurvey = _this.state.survey.slice();\n\n      newSurvey.splice(index, 1);\n\n      _this.setState({\n        survey: newSurvey,\n        show: false\n      });\n    };\n\n    _this.saveSurvey = function () {\n      var survey = _this.state.survey;\n      var questionsDict = {};\n      survey.forEach(function (question, index) {\n        questionsDict[index] = question;\n      });\n\n      _this.props.updateSurvey(questionsDict);\n\n      alert('Changes saved!');\n    };\n\n    _this.confirm = function (modalIndex) {\n      return _this.setState({\n        modalIndex: modalIndex,\n        show: true\n      });\n    };\n\n    _this.state = {\n      loading: true,\n      modalIndex: 0,\n      show: false,\n      survey: []\n    };\n    return _this;\n  }\n\n  _createClass(Survey, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var survey = this.props.survey;\n\n      if (prevProps.survey !== survey) {\n        var questions = survey || {};\n        var surveyList = Object.keys(questions).sort().map(function (key) {\n          return questions[key];\n        });\n        this.setState({\n          loading: false,\n          survey: surveyList\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!isLoaded(this.props.survey)) {\n        return jsx(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        });\n      }\n\n      var _this$state = this.state,\n          modalIndex = _this$state.modalIndex,\n          survey = _this$state.survey,\n          show = _this$state.show;\n      return jsx(\"div\", {\n        className: \"SchoolPortalSurvey\",\n        css: surveyStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, jsx(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"SURVEY\"), jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }), \"Questions will be displayed in the actual survey in the order shown below.\", jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }), jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }), jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, survey.map(function (question, index) {\n        var answers = question.answers || {};\n        var answerKeys = Object.keys(answers).sort();\n        return jsx(\"div\", {\n          className: \"question\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, jsx(\"input\", {\n          className: \"question-input\",\n          onChange: _this2.editQuestion(index),\n          type: \"text\",\n          value: question.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }), jsx(\"div\", {\n          className: \"removeButton\",\n          onClick: function onClick() {\n            return _this2.confirm(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, jsx(\"i\", {\n          className: \"fas fa-times\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251\n          },\n          __self: this\n        })), answerKeys.map(function (answerKey) {\n          var answer = question.answers[answerKey];\n          return jsx(\"div\", {\n            key: answerKey,\n            className: \"answer\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 258\n            },\n            __self: this\n          }, jsx(\"div\", {\n            className: \"radio\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 259\n            },\n            __self: this\n          }), jsx(\"input\", {\n            className: \"answer-input\",\n            onChange: _this2.editAnswer(index, answerKey),\n            type: \"text\",\n            value: answer,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 260\n            },\n            __self: this\n          }));\n        }));\n      })), jsx(Modal, {\n        css: surveyModalStyle,\n        onHide: function onHide() {\n          return _this2.setState({\n            show: false\n          });\n        },\n        show: show,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, jsx(Modal.Body, {\n        className: \"modal-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, jsx(\"div\", {\n        className: \"modal-question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, \"Are you sure you want to delete this question?\"), jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }), jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }), jsx(\"button\", {\n        onClick: function onClick() {\n          return _this2.deleteQuestion(modalIndex);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, \"I'm sure.\"), jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }), jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }), jsx(\"div\", {\n        className: \"modal-cancel\",\n        onClick: function onClick() {\n          return _this2.setState({\n            show: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, \"Just kidding!\"))), jsx(\"div\", {\n        className: \"round-button\",\n        onClick: this.addQuestion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, jsx(\"i\", {\n        className: \"fas fa-plus button-symbol\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      })), jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }), jsx(\"button\", {\n        className: \"save-changes\",\n        onClick: this.saveSurvey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, jsx(\"i\", {\n        className: \"fas fa-check checkmark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }), \"Save Changes\"), jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Survey;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, props) {\n  return {\n    survey: state.firebase.data.survey,\n    updateSurvey: function updateSurvey(data) {\n      props.firebase.set(\"/surveys/\".concat(props.school), data);\n    }\n  };\n};\n\nexport default compose(withRouter, firebaseConnect(function (props) {\n  return [{\n    path: \"/surveys/\".concat(props.school),\n    storeAs: 'survey'\n  }];\n}), connect(mapStateToProps))(Survey);","map":{"version":3,"sources":["/Users/melissa/datamatch/src/pages/SchoolPortal/Survey.js"],"names":["Component","jsx","css","withRouter","connect","compose","firebaseConnect","isLoaded","Modal","Header","Loading","surveyStyle","surveyModalStyle","Survey","props","editQuestion","index","event","survey","state","newQuestion","text","target","value","newSurvey","slice","setState","editAnswer","answerKey","answers","addQuestion","length","push","deleteQuestion","splice","show","saveSurvey","questionsDict","forEach","question","updateSurvey","alert","confirm","modalIndex","loading","prevProps","questions","surveyList","Object","keys","sort","map","key","answerKeys","answer","mapStateToProps","firebase","data","set","school","path","storeAs"],"mappings":"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","sourcesContent":["/** @jsx jsx **/\n\nimport { Component } from 'react';\nimport { jsx, css } from '@emotion/core';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { isLoaded } from 'react-redux-firebase';\nimport Modal from 'react-bootstrap/Modal';\n\nimport Header from 'components/Header';\nimport Loading from 'components/Loading';\n\nconst surveyStyle = css`\n  .radio {\n    border-radius: 50%;\n    border: 2px solid #bd574e;\n    min-width: 20px;\n    height: 20px;\n    background: #dd8078;\n    margin-right: 11px;\n  }\n\n  .answer {\n    padding: 0px 10px;\n    font-family: 'apercu-light';\n    height: 40px;\n    text-align: left;\n    color: #222222;\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    &:hover {\n      background: rgba(196, 196, 196, 0.1);\n    }\n  }\n\n  .answer-input {\n    border-width: 0px;\n    padding: 0px;\n  }\n\n  .question {\n    margin-bottom: 15px;\n    position: relative;\n  }\n\n  .question-input {\n    color: #545353;\n    border-width: 0;\n    font-family: apercu;\n    font-size: 1.25rem;\n    padding: 0px;\n    height: 30px;\n    &:hover {\n      background: rgba(196, 196, 196, 0.1);\n    }\n  }\n\n  .question:hover > .removeButton {\n    visibility: visible;\n  }\n\n  .removeButton {\n    height: 20px;\n    width: 20px;\n    color: #bd574e;\n    border-radius: 50%;\n    background: rgba(249, 198, 195, 0.8);\n    border: 2px solid #bd574e;\n    position: absolute;\n    right: 0px;\n    top: 5px;\n    visibility: hidden;\n    font-size: 13px;\n    cursor: pointer;\n    line-height: 18px;\n    text-align: center;\n    &:hover {\n      visibility: visible;\n    }\n  }\n\n  .button-symbol {\n    line-height: 29px;\n  }\n\n  .round-button {\n    background: rgba(249, 198, 195, 0.8);\n    border: 3px solid #bd574e;\n    border-radius: 50%;\n    color: #bd574e;\n    cursor: pointer;\n    display: inline-block;\n    height: 35px;\n    text-align: center;\n    vertical-align: middle;\n    width: 35px;\n  }\n\n  .save-changes {\n    align-items: center;\n    background: #bd574e;\n    color: #ffffff;\n    font-family: Apercu;\n    font-size: 18px;\n    height: 38px;\n    letter-spacing: 0.05em;\n    margin-top: 20px;\n    margin-bottom: 20px;\n    width: 170px;\n  }\n\n  .checkmark {\n    margin-right: 4px;\n  }\n`;\n\nconst surveyModalStyle = css`\n  .modal-container {\n    text-align: center;\n    padding: 40px;\n  }\n\n  .modal-question {\n    font-size: 22px;\n  }\n\n  .modal-cancel {\n    cursor: pointer;\n  }\n`;\n\nclass Survey extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      modalIndex: 0,\n      show: false,\n      survey: [],\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const { survey } = this.props;\n    if (prevProps.survey !== survey) {\n      const questions = survey || {};\n      const surveyList = Object.keys(questions)\n        .sort()\n        .map(key => questions[key]);\n      this.setState({ loading: false, survey: surveyList });\n    }\n  }\n\n  editQuestion = index => {\n    return event => {\n      const { survey } = this.state;\n      const newQuestion = {\n        ...survey[index],\n        text: event.target.value,\n      };\n      let newSurvey = survey.slice();\n      newSurvey[index] = newQuestion;\n      this.setState({ survey: newSurvey });\n    };\n  };\n\n  editAnswer = (index, answerKey) => {\n    return event => {\n      let newSurvey = this.state.survey.slice();\n      const newQuestion = {\n        ...newSurvey[index],\n        answers: {\n          ...newSurvey[index].answers,\n          [answerKey]: event.target.value,\n        },\n      };\n      newSurvey[index] = newQuestion;\n      this.setState({ survey: newSurvey });\n    };\n  };\n\n  addQuestion = () => {\n    let newSurvey = this.state.survey.slice();\n    const newQuestion = {\n      text: 'Question ' + (newSurvey.length + 1),\n      answers: {\n        0: 'Option 1',\n        1: 'Option 2',\n        2: 'Option 3',\n        3: 'Option 4',\n        4: 'Option 5',\n      },\n    };\n    newSurvey.push(newQuestion);\n    this.setState({ survey: newSurvey });\n  };\n\n  deleteQuestion = index => {\n    let newSurvey = this.state.survey.slice();\n    newSurvey.splice(index, 1);\n    this.setState({ survey: newSurvey, show: false });\n  };\n\n  saveSurvey = () => {\n    const { survey } = this.state;\n    let questionsDict = {};\n    survey.forEach((question, index) => {\n      questionsDict[index] = question;\n    });\n    this.props.updateSurvey(questionsDict);\n    alert('Changes saved!');\n  };\n\n  confirm = modalIndex => this.setState({ modalIndex, show: true });\n\n  render() {\n    if (!isLoaded(this.props.survey)) {\n      return <Loading />;\n    }\n\n    const { modalIndex, survey, show } = this.state;\n\n    return (\n      <div className=\"SchoolPortalSurvey\" css={surveyStyle}>\n        <Header>SURVEY</Header>\n        <br />\n        Questions will be displayed in the actual survey in the order shown\n        below.\n        <br />\n        <br />\n        <div>\n          {survey.map((question, index) => {\n            const answers = question.answers || {};\n            const answerKeys = Object.keys(answers).sort();\n\n            return (\n              <div className=\"question\" key={index}>\n                <input\n                  className=\"question-input\"\n                  onChange={this.editQuestion(index)}\n                  type=\"text\"\n                  value={question.text}\n                />\n                <div\n                  className=\"removeButton\"\n                  onClick={() => this.confirm(index)}\n                >\n                  <i className=\"fas fa-times\" />\n                </div>\n\n                {answerKeys.map(answerKey => {\n                  const answer = question.answers[answerKey];\n\n                  return (\n                    <div key={answerKey} className=\"answer\">\n                      <div className=\"radio\" />\n                      <input\n                        className=\"answer-input\"\n                        onChange={this.editAnswer(index, answerKey)}\n                        type=\"text\"\n                        value={answer}\n                      />\n                    </div>\n                  );\n                })}\n              </div>\n            );\n          })}\n        </div>\n        <Modal\n          css={surveyModalStyle}\n          onHide={() => this.setState({ show: false })}\n          show={show}\n        >\n          <Modal.Body className=\"modal-container\">\n            <div className=\"modal-question\">\n              Are you sure you want to delete this question?\n            </div>\n            <br />\n            <br />\n            <button onClick={() => this.deleteQuestion(modalIndex)}>\n              I'm sure.\n            </button>\n            <br />\n            <br />\n            <div\n              className=\"modal-cancel\"\n              onClick={() => this.setState({ show: false })}\n            >\n              Just kidding!\n            </div>\n          </Modal.Body>\n        </Modal>\n        <div className=\"round-button\" onClick={this.addQuestion}>\n          <i className=\"fas fa-plus button-symbol\"></i>\n        </div>\n        <br />\n        <button className=\"save-changes\" onClick={this.saveSurvey}>\n          <i className=\"fas fa-check checkmark\"></i>Save Changes\n        </button>\n        <br />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n    survey: state.firebase.data.survey,\n    updateSurvey: data => {\n      props.firebase.set(`/surveys/${props.school}`, data);\n    },\n  };\n};\n\nexport default compose(\n  withRouter,\n  firebaseConnect(props => [\n    {\n      path: `/surveys/${props.school}`,\n      storeAs: 'survey',\n    },\n  ]),\n  connect(mapStateToProps),\n)(Survey);\n"]},"metadata":{},"sourceType":"module"}