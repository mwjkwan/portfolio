{"ast":null,"code":"import _classCallCheck from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/melissa/datamatch/src/pages/PageResults/components/Chat.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { bindActionCreators } from 'redux';\nimport { firestoreConnect, firebaseConnect } from 'react-redux-firebase';\n\nvar Chat =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chat, _Component);\n\n  function Chat() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Chat)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      message: '',\n      hide: true\n    };\n\n    _this.scrollToBottom = function () {\n      _this.messagesEnd.scrollIntoView({// behavior: \"smooth\"\n      });\n    };\n\n    _this.sendMessage = function () {\n      if (_this.state.message.length > 0) {\n        _this.props.updateMessages(_this.state.message);\n\n        _this.props.unreadMessage(_this.props.otherUid, true);\n\n        _this.props.unreadMessage(_this.props.uid, false);\n\n        _this.setState({\n          message: ''\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.scrollToBottom();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.scrollToBottom();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.hide) {\n        return React.createElement(\"div\", {\n          style: {\n            width: '100%',\n            position: 'relative'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, this.props.matchObject[this.props.uid] && React.createElement(\"div\", {\n          style: {\n            position: 'absolute',\n            top: -10,\n            right: -10,\n            width: 25,\n            height: 25,\n            background: '#EC4E55',\n            borderRadius: '50%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: function onClick() {\n            _this2.setState({\n              hide: false\n            });\n\n            _this2.props.unreadMessage(_this2.props.uid, false);\n          },\n          style: {\n            fontFamily: 'apercu-light'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \"open chat\"), React.createElement(\"div\", {\n          style: {\n            float: 'left',\n            clear: 'both'\n          },\n          ref: function ref(el) {\n            _this2.messagesEnd = el;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        style: {\n          background: 'white',\n          boxShadow: '0 1px 4px rgba(0, 0, 0, .3)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          height: 40,\n          width: '100%',\n          background: 'grey'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        style: {\n          float: 'right',\n          fontFamily: 'apercu-light'\n        },\n        onClick: function onClick() {\n          return _this2.setState({\n            hide: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"close chat\")), React.createElement(\"div\", {\n        style: {\n          height: 400,\n          width: '100%',\n          overflow: 'auto',\n          border: '1px solid #DADDE1'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          textAlign: 'center',\n          padding: 20,\n          borderBottom: '1px solid #DADDE1',\n          fontFamily: 'apercu-light'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Plan your hangout! Or chat about life!\"), this.props.messages && this.props.messages.map(function (message, index) {\n        return React.createElement(\"div\", {\n          key: message.key,\n          style: {\n            padding: 10,\n            borderBottom: '1px solid #DADDE1',\n            flexWrap: 'wrap',\n            fontFamily: 'apercu-light' // textAlign: this.props.name === message.value.name ? \"left\" : \"right\"\n\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: {\n            fontSize: 10,\n            opacity: 0.8\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, message.value.name), React.createElement(\"div\", {\n          style: {\n            fontFamily: 'apercu-light'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, message.value.text));\n      }), React.createElement(\"div\", {\n        style: {\n          float: 'left',\n          clear: 'both'\n        },\n        ref: function ref(el) {\n          _this2.messagesEnd = el;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: 'Type a message',\n        value: this.state.message,\n        onKeyDown: function onKeyDown(e) {\n          if (e.key === 'Enter') {\n            _this2.sendMessage();\n          }\n        },\n        onChange: function onChange(event) {\n          _this2.setState({\n            message: event.target.value\n          });\n        },\n        style: {\n          fontFamily: 'apercu-light'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        style: {\n          width: 100,\n          height: 50,\n          background: '#EC4E55',\n          fontFamily: 'apercu-light'\n        },\n        onClick: this.sendMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"send\")));\n    }\n  }]);\n\n  return Chat;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, props) {\n  var name = state.firebase.profile.name; // + \" \" + state.firebase.profile.last;\n\n  var messages = state.firebase.ordered.messages;\n  var actualmessages = messages && messages[props.match]; // var actualmessages = messages && messages[props.survey] && messages[props.survey][props.match]\n\n  return {\n    messages: actualmessages,\n    updateMessages: function updateMessages(text) {\n      props.firebase.push('/messages/' + props.match, {\n        text: text,\n        name: name,\n        time: actualmessages && actualmessages.length && actualmessages[actualmessages.length - 1].value.time + 1 || 0\n      }); //Timestamps for reason don't work for time, idk why\n    }\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({}, dispatch);\n}\n\nexport default compose(firebaseConnect(function (props) {\n  return [{\n    path: '/messages/' + props.match,\n    // path: props.match,\n    // storeAs: \"messages\",\n    queryParams: ['orderByChild=time', 'limitToLast=100']\n  }];\n}), firestoreConnect(), connect(mapStateToProps, mapDispatchToProps))(Chat);","map":{"version":3,"sources":["/Users/melissa/datamatch/src/pages/PageResults/components/Chat.js"],"names":["React","Component","connect","compose","bindActionCreators","firestoreConnect","firebaseConnect","Chat","state","message","hide","scrollToBottom","messagesEnd","scrollIntoView","sendMessage","length","props","updateMessages","unreadMessage","otherUid","uid","setState","width","position","matchObject","top","right","height","background","borderRadius","fontFamily","float","clear","el","boxShadow","overflow","border","textAlign","padding","borderBottom","messages","map","index","key","flexWrap","fontSize","opacity","value","name","text","display","e","event","target","mapStateToProps","firebase","profile","ordered","actualmessages","match","push","time","mapDispatchToProps","dispatch","path","queryParams"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,gBAAT,EAA2BC,eAA3B,QAAkD,sBAAlD;;IAEMC,I;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AAAEC,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,IAAI,EAAE;AAArB,K;;UAERC,c,GAAiB,YAAM;AACrB,YAAKC,WAAL,CAAiBC,cAAjB,CAAgC,CAC9B;AAD8B,OAAhC;AAGD,K;;UAUDC,W,GAAc,YAAM;AAClB,UAAI,MAAKN,KAAL,CAAWC,OAAX,CAAmBM,MAAnB,GAA4B,CAAhC,EAAmC;AACjC,cAAKC,KAAL,CAAWC,cAAX,CAA0B,MAAKT,KAAL,CAAWC,OAArC;;AACA,cAAKO,KAAL,CAAWE,aAAX,CAAyB,MAAKF,KAAL,CAAWG,QAApC,EAA8C,IAA9C;;AACA,cAAKH,KAAL,CAAWE,aAAX,CAAyB,MAAKF,KAAL,CAAWI,GAApC,EAAyC,KAAzC;;AACA,cAAKC,QAAL,CAAc;AAAEZ,UAAAA,OAAO,EAAE;AAAX,SAAd;AACD;AACF,K;;;;;;;wCAfmB;AAClB,WAAKE,cAAL;AACD;;;yCAEoB;AACnB,WAAKA,cAAL;AACD;;;6BAWQ;AAAA;;AACP,UAAI,KAAKH,KAAL,CAAWE,IAAf,EAAqB;AACnB,eACE;AAAK,UAAA,KAAK,EAAE;AAAEY,YAAAA,KAAK,EAAE,MAAT;AAAiBC,YAAAA,QAAQ,EAAE;AAA3B,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAKP,KAAL,CAAWQ,WAAX,CAAuB,KAAKR,KAAL,CAAWI,GAAlC,KACC;AACE,UAAA,KAAK,EAAE;AACLG,YAAAA,QAAQ,EAAE,UADL;AAELE,YAAAA,GAAG,EAAE,CAAC,EAFD;AAGLC,YAAAA,KAAK,EAAE,CAAC,EAHH;AAILJ,YAAAA,KAAK,EAAE,EAJF;AAKLK,YAAAA,MAAM,EAAE,EALH;AAMLC,YAAAA,UAAU,EAAE,SANP;AAOLC,YAAAA,YAAY,EAAE;AAPT,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAcE;AACE,UAAA,OAAO,EAAE,mBAAM;AACb,YAAA,MAAI,CAACR,QAAL,CAAc;AAAEX,cAAAA,IAAI,EAAE;AAAR,aAAd;;AACA,YAAA,MAAI,CAACM,KAAL,CAAWE,aAAX,CAAyB,MAAI,CAACF,KAAL,CAAWI,GAApC,EAAyC,KAAzC;AACD,WAJH;AAKE,UAAA,KAAK,EAAE;AAAEU,YAAAA,UAAU,EAAE;AAAd,WALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAdF,EAuBE;AACE,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE,MAAT;AAAiBC,YAAAA,KAAK,EAAE;AAAxB,WADT;AAEE,UAAA,GAAG,EAAE,aAAAC,EAAE,EAAI;AACT,YAAA,MAAI,CAACrB,WAAL,GAAmBqB,EAAnB;AACD,WAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAvBF,CADF;AAgCD;;AAED,aACE;AACE,QAAA,KAAK,EAAE;AACLL,UAAAA,UAAU,EAAE,OADP;AAELM,UAAAA,SAAS,EAAE;AAFN,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME;AAAK,QAAA,KAAK,EAAE;AAAEP,UAAAA,MAAM,EAAE,EAAV;AAAcL,UAAAA,KAAK,EAAE,MAArB;AAA6BM,UAAAA,UAAU,EAAE;AAAzC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,KAAK,EAAE;AAAEG,UAAAA,KAAK,EAAE,OAAT;AAAkBD,UAAAA,UAAU,EAAE;AAA9B,SADT;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACT,QAAL,CAAc;AAAEX,YAAAA,IAAI,EAAE;AAAR,WAAd,CAAN;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CANF,EAcE;AACE,QAAA,KAAK,EAAE;AACLiB,UAAAA,MAAM,EAAE,GADH;AAELL,UAAAA,KAAK,EAAE,MAFF;AAGLa,UAAAA,QAAQ,EAAE,MAHL;AAILC,UAAAA,MAAM,EAAE;AAJH,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,SAAS,EAAE,QADN;AAELC,UAAAA,OAAO,EAAE,EAFJ;AAGLC,UAAAA,YAAY,EAAE,mBAHT;AAILT,UAAAA,UAAU,EAAE;AAJP,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDARF,EAkBG,KAAKd,KAAL,CAAWwB,QAAX,IACC,KAAKxB,KAAL,CAAWwB,QAAX,CAAoBC,GAApB,CAAwB,UAAChC,OAAD,EAAUiC,KAAV,EAAoB;AAC1C,eACE;AACE,UAAA,GAAG,EAAEjC,OAAO,CAACkC,GADf;AAEE,UAAA,KAAK,EAAE;AACLL,YAAAA,OAAO,EAAE,EADJ;AAELC,YAAAA,YAAY,EAAE,mBAFT;AAGLK,YAAAA,QAAQ,EAAE,MAHL;AAILd,YAAAA,UAAU,EAAE,cAJP,CAKL;;AALK,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAUE;AAAK,UAAA,KAAK,EAAE;AAAEe,YAAAA,QAAQ,EAAE,EAAZ;AAAgBC,YAAAA,OAAO,EAAE;AAAzB,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGrC,OAAO,CAACsC,KAAR,CAAcC,IADjB,CAVF,EAaE;AAAK,UAAA,KAAK,EAAE;AAAElB,YAAAA,UAAU,EAAE;AAAd,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGrB,OAAO,CAACsC,KAAR,CAAcE,IADjB,CAbF,CADF;AAmBD,OApBD,CAnBJ,EAwCE;AACE,QAAA,KAAK,EAAE;AAAElB,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,KAAK,EAAE;AAAxB,SADT;AAEE,QAAA,GAAG,EAAE,aAAAC,EAAE,EAAI;AACT,UAAA,MAAI,CAACrB,WAAL,GAAmBqB,EAAnB;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAxCF,CAdF,EA6DE;AAAK,QAAA,KAAK,EAAE;AAAEiB,UAAAA,OAAO,EAAE;AAAX,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,WAAW,EAAE,gBADf;AAEE,QAAA,KAAK,EAAE,KAAK1C,KAAL,CAAWC,OAFpB;AAGE,QAAA,SAAS,EAAE,mBAAA0C,CAAC,EAAI;AACd,cAAIA,CAAC,CAACR,GAAF,KAAU,OAAd,EAAuB;AACrB,YAAA,MAAI,CAAC7B,WAAL;AACD;AACF,SAPH;AAQE,QAAA,QAAQ,EAAE,kBAAAsC,KAAK,EAAI;AACjB,UAAA,MAAI,CAAC/B,QAAL,CAAc;AACZZ,YAAAA,OAAO,EAAE2C,KAAK,CAACC,MAAN,CAAaN;AADV,WAAd;AAGD,SAZH;AAaE,QAAA,KAAK,EAAE;AAAEjB,UAAAA,UAAU,EAAE;AAAd,SAbT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAgBE;AACE,QAAA,KAAK,EAAE;AACLR,UAAAA,KAAK,EAAE,GADF;AAELK,UAAAA,MAAM,EAAE,EAFH;AAGLC,UAAAA,UAAU,EAAE,SAHP;AAILE,UAAAA,UAAU,EAAE;AAJP,SADT;AAOE,QAAA,OAAO,EAAE,KAAKhB,WAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF,CA7DF,CADF;AA4FD;;;;EA1JgBb,S;;AA6JnB,IAAMqD,eAAe,GAAG,SAAlBA,eAAkB,CAAC9C,KAAD,EAAQQ,KAAR,EAAkB;AACxC,MAAIgC,IAAI,GAAGxC,KAAK,CAAC+C,QAAN,CAAeC,OAAf,CAAuBR,IAAlC,CADwC,CACA;;AACxC,MAAIR,QAAQ,GAAGhC,KAAK,CAAC+C,QAAN,CAAeE,OAAf,CAAuBjB,QAAtC;AACA,MAAIkB,cAAc,GAAGlB,QAAQ,IAAIA,QAAQ,CAACxB,KAAK,CAAC2C,KAAP,CAAzC,CAHwC,CAIxC;;AACA,SAAO;AACLnB,IAAAA,QAAQ,EAAEkB,cADL;AAELzC,IAAAA,cAAc,EAAE,wBAAAgC,IAAI,EAAI;AACtBjC,MAAAA,KAAK,CAACuC,QAAN,CAAeK,IAAf,CAAoB,eAAe5C,KAAK,CAAC2C,KAAzC,EAAgD;AAC9CV,QAAAA,IAAI,EAAEA,IADwC;AAE9CD,QAAAA,IAAI,EAAEA,IAFwC;AAG9Ca,QAAAA,IAAI,EACDH,cAAc,IACbA,cAAc,CAAC3C,MADhB,IAEC2C,cAAc,CAACA,cAAc,CAAC3C,MAAf,GAAwB,CAAzB,CAAd,CAA0CgC,KAA1C,CAAgDc,IAAhD,GAAuD,CAFzD,IAGA;AAP4C,OAAhD,EADsB,CAUtB;AACD;AAbI,GAAP;AAeD,CApBD;;AAsBA,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO3D,kBAAkB,CAAC,EAAD,EAAK2D,QAAL,CAAzB;AACD;;AAED,eAAe5D,OAAO,CACpBG,eAAe,CAAC,UAAAU,KAAK;AAAA,SAAI,CACvB;AACEgD,IAAAA,IAAI,EAAE,eAAehD,KAAK,CAAC2C,KAD7B;AAEE;AACA;AACAM,IAAAA,WAAW,EAAE,CAAC,mBAAD,EAAsB,iBAAtB;AAJf,GADuB,CAAJ;AAAA,CAAN,CADK,EASpB5D,gBAAgB,EATI,EAUpBH,OAAO,CAACoD,eAAD,EAAkBQ,kBAAlB,CAVa,CAAP,CAWbvD,IAXa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { bindActionCreators } from 'redux';\nimport { firestoreConnect, firebaseConnect } from 'react-redux-firebase';\n\nclass Chat extends Component {\n  state = { message: '', hide: true };\n\n  scrollToBottom = () => {\n    this.messagesEnd.scrollIntoView({\n      // behavior: \"smooth\"\n    });\n  };\n\n  componentDidMount() {\n    this.scrollToBottom();\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  sendMessage = () => {\n    if (this.state.message.length > 0) {\n      this.props.updateMessages(this.state.message);\n      this.props.unreadMessage(this.props.otherUid, true);\n      this.props.unreadMessage(this.props.uid, false);\n      this.setState({ message: '' });\n    }\n  };\n\n  render() {\n    if (this.state.hide) {\n      return (\n        <div style={{ width: '100%', position: 'relative' }}>\n          {this.props.matchObject[this.props.uid] && (\n            <div\n              style={{\n                position: 'absolute',\n                top: -10,\n                right: -10,\n                width: 25,\n                height: 25,\n                background: '#EC4E55',\n                borderRadius: '50%',\n              }}\n            />\n          )}\n          <button\n            onClick={() => {\n              this.setState({ hide: false });\n              this.props.unreadMessage(this.props.uid, false);\n            }}\n            style={{ fontFamily: 'apercu-light' }}\n          >\n            open chat\n          </button>\n          <div\n            style={{ float: 'left', clear: 'both' }}\n            ref={el => {\n              this.messagesEnd = el;\n            }}\n          ></div>\n        </div>\n      );\n    }\n\n    return (\n      <div\n        style={{\n          background: 'white',\n          boxShadow: '0 1px 4px rgba(0, 0, 0, .3)',\n        }}\n      >\n        <div style={{ height: 40, width: '100%', background: 'grey' }}>\n          <button\n            style={{ float: 'right', fontFamily: 'apercu-light' }}\n            onClick={() => this.setState({ hide: true })}\n          >\n            close chat\n          </button>\n        </div>\n        <div\n          style={{\n            height: 400,\n            width: '100%',\n            overflow: 'auto',\n            border: '1px solid #DADDE1',\n          }}\n        >\n          <div\n            style={{\n              textAlign: 'center',\n              padding: 20,\n              borderBottom: '1px solid #DADDE1',\n              fontFamily: 'apercu-light',\n            }}\n          >\n            Plan your hangout! Or chat about life!\n          </div>\n          {this.props.messages &&\n            this.props.messages.map((message, index) => {\n              return (\n                <div\n                  key={message.key}\n                  style={{\n                    padding: 10,\n                    borderBottom: '1px solid #DADDE1',\n                    flexWrap: 'wrap',\n                    fontFamily: 'apercu-light',\n                    // textAlign: this.props.name === message.value.name ? \"left\" : \"right\"\n                  }}\n                >\n                  <div style={{ fontSize: 10, opacity: 0.8 }}>\n                    {message.value.name}\n                  </div>\n                  <div style={{ fontFamily: 'apercu-light' }}>\n                    {message.value.text}\n                  </div>\n                </div>\n              );\n            })}\n          <div\n            style={{ float: 'left', clear: 'both' }}\n            ref={el => {\n              this.messagesEnd = el;\n            }}\n          ></div>\n        </div>\n        <div style={{ display: 'flex' }}>\n          <input\n            placeholder={'Type a message'}\n            value={this.state.message}\n            onKeyDown={e => {\n              if (e.key === 'Enter') {\n                this.sendMessage();\n              }\n            }}\n            onChange={event => {\n              this.setState({\n                message: event.target.value,\n              });\n            }}\n            style={{ fontFamily: 'apercu-light' }}\n          />\n          <button\n            style={{\n              width: 100,\n              height: 50,\n              background: '#EC4E55',\n              fontFamily: 'apercu-light',\n            }}\n            onClick={this.sendMessage}\n          >\n            send\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  var name = state.firebase.profile.name; // + \" \" + state.firebase.profile.last;\n  var messages = state.firebase.ordered.messages;\n  var actualmessages = messages && messages[props.match];\n  // var actualmessages = messages && messages[props.survey] && messages[props.survey][props.match]\n  return {\n    messages: actualmessages,\n    updateMessages: text => {\n      props.firebase.push('/messages/' + props.match, {\n        text: text,\n        name: name,\n        time:\n          (actualmessages &&\n            actualmessages.length &&\n            actualmessages[actualmessages.length - 1].value.time + 1) ||\n          0,\n      });\n      //Timestamps for reason don't work for time, idk why\n    },\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({}, dispatch);\n}\n\nexport default compose(\n  firebaseConnect(props => [\n    {\n      path: '/messages/' + props.match,\n      // path: props.match,\n      // storeAs: \"messages\",\n      queryParams: ['orderByChild=time', 'limitToLast=100'],\n    },\n  ]),\n  firestoreConnect(),\n  connect(mapStateToProps, mapDispatchToProps),\n)(Chat);\n"]},"metadata":{},"sourceType":"module"}