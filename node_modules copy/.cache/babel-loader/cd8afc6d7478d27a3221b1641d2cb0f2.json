{"ast":null,"code":"import _defineProperty from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/melissa/datamatch/src/pages/PageResults/routes/MatchSidebar.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  overflow-y: scroll;\\n  position: fixed;\\n  width: 361px;\\n  height: 100vh;\\n  right: 0px;\\n  bottom: 0px;\\n  background: #f3f2f2;\\n  padding-left: 20px;\\n  padding-top: 50px;\\n\\n  @media (max-width: 650px) {\\n    height: calc(100vh - 58px);\\n  }\\n\\n  @media (max-width: 500px) {\\n    width: 100%;\\n  }\\n\\n  .user-image {\\n    width: 80px;\\n    height: 80px;\\n    background: url(\", \");\\n    background-repeat: no-repeat;\\n    background-size: contain;\\n    background-position: center;\\n    margin-bottom: 10px;\\n    object-fit: cover;\\n  }\\n\\n  .first-image {\\n    float: left;\\n    margin-right: 10px;\\n  }\\n\\n  .heading {\\n    font-family: 'Apercu';\\n    font-size: 24px;\\n    line-height: 29px;\\n    color: #545353;\\n    margin-right: 20px;\\n  }\\n\\n  .description {\\n    font-size: 16px;\\n    line-height: 19px;\\n    color: #545353;\\n    margin-bottom: 10px;\\n    margin-right: 20px;\\n  }\\n\\n  .close-button {\\n    font-size: 20px;\\n    position: absolute;\\n    top: 20px;\\n    right: 20px;\\n    cursor: pointer;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsx jsx **/\nimport { Component } from 'react';\nimport { jsx, css } from '@emotion/core';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport Loading from 'components/Loading';\nvar matchSidebarStyle = css(_templateObject(), require('assets/loading.svg'));\n\nvar MatchSidebar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MatchSidebar, _Component);\n\n  function MatchSidebar() {\n    _classCallCheck(this, MatchSidebar);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MatchSidebar).apply(this, arguments));\n  }\n\n  _createClass(MatchSidebar, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this$props = this.props,\n          firebase = _this$props.firebase,\n          matched = _this$props.matched,\n          matchedUser = _this$props.matchedUser,\n          matchId = _this$props.matchId,\n          meUser = _this$props.meUser,\n          requested = _this$props.requested;\n\n      if (!requested) {\n        return;\n      }\n\n      if (!matched || !matched[meUser.id]) {\n        firebase.update('/matches/' + matchId + '/matched', _defineProperty({}, meUser.id, true));\n\n        if (matched && matched[matchedUser.id]) {\n          firebase.functions().httpsCallable('email-notifyMatched')({\n            meUser: meUser,\n            matchedUser: matchedUser,\n            matchId: matchId\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          close = _this$props2.close,\n          matched = _this$props2.matched,\n          matchedUser = _this$props2.matchedUser,\n          meUser = _this$props2.meUser,\n          requested = _this$props2.requested;\n\n      if (!requested) {\n        return jsx(\"div\", {\n          css: matchSidebarStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, jsx(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }));\n      }\n\n      var bothMatched = matched && matched[matchedUser.id] && matched[meUser.id];\n      return jsx(\"div\", {\n        css: matchSidebarStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, jsx(\"i\", {\n        className: \"fas fa-times close-button\",\n        onClick: close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), jsx(\"img\", {\n        alt: \"profile\",\n        className: \"user-image first-image\",\n        src: matchedUser.profile_pic || require('assets/empty.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), jsx(\"img\", {\n        alt: \"profile\",\n        className: \"user-image\",\n        src: meUser.profile_pic || require('assets/empty.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), bothMatched ? jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, jsx(\"div\", {\n        className: \"heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"YOU AND \", matchedUser.name.split(' ')[0].toUpperCase(), \" MATCHED!\"), jsx(\"div\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"You guys can hang out and stuff.\")) : jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, jsx(\"div\", {\n        className: \"heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"YOU MATCHED \", matchedUser.name.split(' ')[0].toUpperCase(), \"!\"), jsx(\"div\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"You\\u2019ll both get notified if you match each other.\")));\n    }\n  }]);\n\n  return MatchSidebar;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, _ref) {\n  var matchId = _ref.matchId;\n  var matched = state.firebase.data.matched;\n  var requested = state.firebase.requested;\n  return {\n    matched: matched,\n    requested: requested.matched\n  };\n};\n\nexport default compose(firebaseConnect(function (_ref2) {\n  var matchId = _ref2.matchId;\n  return [{\n    path: \"/matches/\".concat(matchId, \"/matched\"),\n    storeAs: 'matched'\n  }];\n}), connect(mapStateToProps))(MatchSidebar);","map":{"version":3,"sources":["/Users/melissa/datamatch/src/pages/PageResults/routes/MatchSidebar.js"],"names":["Component","jsx","css","connect","compose","firebaseConnect","Loading","matchSidebarStyle","require","MatchSidebar","props","firebase","matched","matchedUser","matchId","meUser","requested","id","update","functions","httpsCallable","close","bothMatched","profile_pic","name","split","toUpperCase","mapStateToProps","state","data","path","storeAs"],"mappings":"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","sourcesContent":["/** @jsx jsx **/\n\nimport { Component } from 'react';\nimport { jsx, css } from '@emotion/core';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\n\nimport Loading from 'components/Loading';\n\nconst matchSidebarStyle = css`\n  overflow-y: scroll;\n  position: fixed;\n  width: 361px;\n  height: 100vh;\n  right: 0px;\n  bottom: 0px;\n  background: #f3f2f2;\n  padding-left: 20px;\n  padding-top: 50px;\n\n  @media (max-width: 650px) {\n    height: calc(100vh - 58px);\n  }\n\n  @media (max-width: 500px) {\n    width: 100%;\n  }\n\n  .user-image {\n    width: 80px;\n    height: 80px;\n    background: url(${require('assets/loading.svg')});\n    background-repeat: no-repeat;\n    background-size: contain;\n    background-position: center;\n    margin-bottom: 10px;\n    object-fit: cover;\n  }\n\n  .first-image {\n    float: left;\n    margin-right: 10px;\n  }\n\n  .heading {\n    font-family: 'Apercu';\n    font-size: 24px;\n    line-height: 29px;\n    color: #545353;\n    margin-right: 20px;\n  }\n\n  .description {\n    font-size: 16px;\n    line-height: 19px;\n    color: #545353;\n    margin-bottom: 10px;\n    margin-right: 20px;\n  }\n\n  .close-button {\n    font-size: 20px;\n    position: absolute;\n    top: 20px;\n    right: 20px;\n    cursor: pointer;\n  }\n`;\n\nclass MatchSidebar extends Component {\n  componentDidUpdate() {\n    const {\n      firebase,\n      matched,\n      matchedUser,\n      matchId,\n      meUser,\n      requested,\n    } = this.props;\n\n    if (!requested) {\n      return;\n    }\n\n    if (!matched || !matched[meUser.id]) {\n      firebase.update('/matches/' + matchId + '/matched', {\n        [meUser.id]: true,\n      });\n\n      if (matched && matched[matchedUser.id]) {\n        firebase.functions().httpsCallable('email-notifyMatched')({\n          meUser,\n          matchedUser,\n          matchId,\n        });\n      }\n    }\n  }\n\n  render() {\n    const { close, matched, matchedUser, meUser, requested } = this.props;\n\n    if (!requested) {\n      return (\n        <div css={matchSidebarStyle}>\n          <Loading />\n        </div>\n      );\n    }\n\n    const bothMatched =\n      matched && matched[matchedUser.id] && matched[meUser.id];\n\n    return (\n      <div css={matchSidebarStyle}>\n        <i className=\"fas fa-times close-button\" onClick={close} />\n        <img\n          alt=\"profile\"\n          className=\"user-image first-image\"\n          src={matchedUser.profile_pic || require('assets/empty.png')}\n        />\n        <img\n          alt=\"profile\"\n          className=\"user-image\"\n          src={meUser.profile_pic || require('assets/empty.png')}\n        />\n        {bothMatched ? (\n          <div>\n            <div className=\"heading\">\n              YOU AND {matchedUser.name.split(' ')[0].toUpperCase()} MATCHED!\n            </div>\n            <div className=\"description\">You guys can hang out and stuff.</div>\n          </div>\n        ) : (\n          <div>\n            <div className=\"heading\">\n              YOU MATCHED {matchedUser.name.split(' ')[0].toUpperCase()}!\n            </div>\n            <div className=\"description\">\n              You’ll both get notified if you match each other.\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, { matchId }) => {\n  const { matched } = state.firebase.data;\n  const { requested } = state.firebase;\n\n  return {\n    matched,\n    requested: requested.matched,\n  };\n};\n\nexport default compose(\n  firebaseConnect(({ matchId }) => [\n    {\n      path: `/matches/${matchId}/matched`,\n      storeAs: 'matched',\n    },\n  ]),\n  connect(mapStateToProps),\n)(MatchSidebar);\n"]},"metadata":{},"sourceType":"module"}