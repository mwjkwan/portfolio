{"ast":null,"code":"var _jsxFileName = \"/Users/melissa/datamatch/src/components/PrivateRoute.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { Redirect, Route } from 'react-router-dom';\n\nvar PrivateRouteImpl = function PrivateRouteImpl(_ref) {\n  var Component = _ref.component,\n      exact = _ref.exact,\n      isLoggedIn = _ref.isLoggedIn,\n      path = _ref.path;\n  return React.createElement(Route, {\n    exact: exact,\n    path: path,\n    render: function render(props) {\n      return isLoggedIn ? React.createElement(Component, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }) : React.createElement(Redirect, {\n        to: {\n          pathname: '/login',\n          state: {\n            from: props.location\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  });\n};\n\nvar PublicRouteImpl = function PublicRouteImpl(_ref2) {\n  var Component = _ref2.component,\n      exact = _ref2.exact,\n      isLoggedIn = _ref2.isLoggedIn,\n      path = _ref2.path;\n  return React.createElement(Route, {\n    exact: exact,\n    path: path,\n    render: function render(props) {\n      return !isLoggedIn ? React.createElement(Component, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }) : React.createElement(Redirect, {\n        to: {\n          pathname: '/app',\n          state: {\n            from: props.location\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  });\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoggedIn: !!state.firebase.auth.uid\n  };\n};\n\nexport var PrivateRoute = compose(firebaseConnect(), connect(mapStateToProps))(PrivateRouteImpl);\nexport var PublicRoute = compose(firebaseConnect(), connect(mapStateToProps))(PublicRouteImpl);\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/melissa/datamatch/src/components/PrivateRoute.js"],"names":["React","connect","compose","firebaseConnect","Redirect","Route","PrivateRouteImpl","Component","component","exact","isLoggedIn","path","props","pathname","state","from","location","PublicRouteImpl","mapStateToProps","firebase","auth","uid","PrivateRoute","PublicRoute"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,eAAT,QAAgC,sBAAhC;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAKnB;AAAA,MAJOC,SAIP,QAJJC,SAII;AAAA,MAHJC,KAGI,QAHJA,KAGI;AAAA,MAFJC,UAEI,QAFJA,UAEI;AAAA,MADJC,IACI,QADJA,IACI;AACJ,SACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEF,KADT;AAEE,IAAA,IAAI,EAAEE,IAFR;AAGE,IAAA,MAAM,EAAE,gBAAAC,KAAK;AAAA,aACXF,UAAU,GACR,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADQ,GAGR,oBAAC,QAAD;AACE,QAAA,EAAE,EAAE;AAAEG,UAAAA,QAAQ,EAAE,QAAZ;AAAsBC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAA7B,SADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJS;AAAA,KAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAeD,CArBD;;AAuBA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,QAAuD;AAAA,MAAzCV,SAAyC,SAApDC,SAAoD;AAAA,MAA9BC,KAA8B,SAA9BA,KAA8B;AAAA,MAAvBC,UAAuB,SAAvBA,UAAuB;AAAA,MAAXC,IAAW,SAAXA,IAAW;AAC7E,SACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEF,KADT;AAEE,IAAA,IAAI,EAAEE,IAFR;AAGE,IAAA,MAAM,EAAE,gBAAAC,KAAK;AAAA,aACX,CAACF,UAAD,GACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,GAGE,oBAAC,QAAD;AACE,QAAA,EAAE,EAAE;AAAEG,UAAAA,QAAQ,EAAE,MAAZ;AAAoBC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAA3B,SADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJS;AAAA,KAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAeD,CAhBD;;AAkBA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAJ,KAAK,EAAI;AAC/B,SAAO;AAAEJ,IAAAA,UAAU,EAAE,CAAC,CAACI,KAAK,CAACK,QAAN,CAAeC,IAAf,CAAoBC;AAApC,GAAP;AACD,CAFD;;AAIA,OAAO,IAAMC,YAAY,GAAGpB,OAAO,CACjCC,eAAe,EADkB,EAEjCF,OAAO,CAACiB,eAAD,CAF0B,CAAP,CAG1BZ,gBAH0B,CAArB;AAKP,OAAO,IAAMiB,WAAW,GAAGrB,OAAO,CAChCC,eAAe,EADiB,EAEhCF,OAAO,CAACiB,eAAD,CAFyB,CAAP,CAGzBD,eAHyB,CAApB;AAKP,eAAeK,YAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { Redirect, Route } from 'react-router-dom';\n\nconst PrivateRouteImpl = ({\n  component: Component,\n  exact,\n  isLoggedIn,\n  path,\n}) => {\n  return (\n    <Route\n      exact={exact}\n      path={path}\n      render={props =>\n        isLoggedIn ? (\n          <Component />\n        ) : (\n          <Redirect\n            to={{ pathname: '/login', state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n};\n\nconst PublicRouteImpl = ({ component: Component, exact, isLoggedIn, path }) => {\n  return (\n    <Route\n      exact={exact}\n      path={path}\n      render={props =>\n        !isLoggedIn ? (\n          <Component />\n        ) : (\n          <Redirect\n            to={{ pathname: '/app', state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n};\n\nconst mapStateToProps = state => {\n  return { isLoggedIn: !!state.firebase.auth.uid };\n};\n\nexport const PrivateRoute = compose(\n  firebaseConnect(),\n  connect(mapStateToProps),\n)(PrivateRouteImpl);\n\nexport const PublicRoute = compose(\n  firebaseConnect(),\n  connect(mapStateToProps),\n)(PublicRouteImpl);\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}