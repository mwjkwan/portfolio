{"ast":null,"code":"import _regeneratorRuntime from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/melissa/datamatch/src/pages/PagePasswordReset.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { withRouter } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport queryString from 'query-string';\nimport AuthWrapper from 'components/AuthWrapper';\nimport Loading from 'components/Loading';\n\nvar PagePasswordReset =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PagePasswordReset, _Component);\n\n  function PagePasswordReset(props) {\n    var _this;\n\n    _classCallCheck(this, PagePasswordReset);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PagePasswordReset).call(this, props));\n\n    _this.onFormSubmit = function _callee(event) {\n      var email, _this$props, auth, loginPath;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              email = _this.refs.email.value;\n\n              _this.setState({\n                loading: true\n              });\n\n              _this$props = _this.props, auth = _this$props.auth, loginPath = _this$props.loginPath;\n              _context.prev = 4;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(auth().sendPasswordResetEmail(email, {\n                url: \"\".concat(process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT).concat(loginPath)\n              }));\n\n            case 7:\n              _this.setState({\n                loading: false,\n                sent: true\n              });\n\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](4);\n\n              _this.setState({\n                loading: false,\n                message: _context.t0.message\n              });\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[4, 10]]);\n    };\n\n    _this.renderForm = function () {\n      var _this$state = _this.state,\n          loading = _this$state.loading,\n          message = _this$state.message,\n          sent = _this$state.sent;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(AuthWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: _this.onFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Reset Password\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), !sent ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"Email\",\n        ref: \"email\",\n        type: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), loading ? React.createElement(Loading, {\n        style: {\n          height: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }) : React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Reset\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), message && React.createElement(\"div\", {\n        className: \"Warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), message), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Sent reset link! Check your email! \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })))));\n    };\n\n    _this.onFormSubmitConfirm = function _callee2(event, oobCode, continueUrl) {\n      var password, confirmPassword, _this$props2, confirmPasswordReset, history, continuePath;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              event.preventDefault();\n\n              _this.setState({\n                loading: true\n              });\n\n              password = _this.refs.password.value;\n              confirmPassword = _this.refs.confirmPassword.value;\n              _this$props2 = _this.props, confirmPasswordReset = _this$props2.confirmPasswordReset, history = _this$props2.history;\n              continuePath = '/login';\n\n              if (continueUrl) {\n                continuePath = continueUrl.split(process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT)[1];\n              }\n\n              if (!(password === confirmPassword)) {\n                _context2.next = 21;\n                break;\n              }\n\n              _context2.prev = 8;\n              _context2.next = 11;\n              return _regeneratorRuntime.awrap(confirmPasswordReset(oobCode, password));\n\n            case 11:\n              alert('Password reset confirmed!');\n\n              _this.setState({\n                loading: false\n              });\n\n              history.push(continuePath);\n              _context2.next = 19;\n              break;\n\n            case 16:\n              _context2.prev = 16;\n              _context2.t0 = _context2[\"catch\"](8);\n\n              _this.setState({\n                loading: false,\n                message: _context2.t0.message\n              });\n\n            case 19:\n              _context2.next = 22;\n              break;\n\n            case 21:\n              _this.setState({\n                loading: false,\n                message: 'Passwords do not match'\n              });\n\n            case 22:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[8, 16]]);\n    };\n\n    _this.renderConfirm = function (oobCode, continueUrl) {\n      var _this$state2 = _this.state,\n          loading = _this$state2.loading,\n          message = _this$state2.message;\n      return React.createElement(AuthWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          return _this.onFormSubmitConfirm(event, oobCode, continueUrl);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Reset Password\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        placeholder: \"Password\",\n        ref: \"password\",\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        placeholder: \"Confirm Password\",\n        ref: \"confirmPassword\",\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), loading ? React.createElement(Loading, {\n        style: {\n          height: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }) : React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Reset\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), message && React.createElement(\"div\", {\n        className: \"Warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), message, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      })));\n    };\n\n    _this.state = {\n      loading: false,\n      message: '',\n      sent: false\n    };\n    return _this;\n  }\n\n  _createClass(PagePasswordReset, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props3 = this.props,\n          appPath = _this$props3.appPath,\n          isLoggedIn = _this$props3.isLoggedIn,\n          history = _this$props3.history;\n\n      if (isLoggedIn) {\n        history.push(appPath);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          location = _this$props4.location,\n          loginPath = _this$props4.loginPath,\n          registerPath = _this$props4.registerPath;\n\n      var _queryString$parse = queryString.parse(location.search, {\n        ignoreQueryPrefix: true\n      }),\n          continueUrl = _queryString$parse.continueUrl,\n          oobCode = _queryString$parse.oobCode;\n\n      return React.createElement(\"div\", {\n        className: \"PagePasswordReset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, oobCode ? this.renderConfirm(oobCode, continueUrl) : this.renderForm(), React.createElement(\"div\", {\n        className: \"AuthLinks\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: loginPath,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Already have an account? Log in\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          height: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(Link, {\n        to: registerPath,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Create an account\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return PagePasswordReset;\n}(Component);\n\nPagePasswordReset.defaultProps = {\n  appPath: '/app',\n  loginPath: '/login',\n  registerPath: '/register'\n};\n\nfunction mapStateToProps(state, props) {\n  var _props$firebase = props.firebase,\n      auth = _props$firebase.auth,\n      confirmPasswordReset = _props$firebase.confirmPasswordReset;\n  return {\n    auth: auth,\n    confirmPasswordReset: confirmPasswordReset,\n    isLoggedIn: !!state.firebase.auth.uid\n  };\n}\n\nexport default compose(firebaseConnect(), withRouter, connect(mapStateToProps))(PagePasswordReset);","map":{"version":3,"sources":["/Users/melissa/datamatch/src/pages/PagePasswordReset.js"],"names":["React","Component","connect","compose","firebaseConnect","withRouter","Link","queryString","AuthWrapper","Loading","PagePasswordReset","props","onFormSubmit","event","preventDefault","email","refs","value","setState","loading","auth","loginPath","sendPasswordResetEmail","url","process","env","REACT_APP_CONFIRMATION_EMAIL_REDIRECT","sent","message","renderForm","state","height","onFormSubmitConfirm","oobCode","continueUrl","password","confirmPassword","confirmPasswordReset","history","continuePath","split","alert","push","renderConfirm","appPath","isLoggedIn","location","registerPath","parse","search","ignoreQueryPrefix","defaultProps","mapStateToProps","firebase","uid"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { withRouter } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport queryString from 'query-string';\n\nimport AuthWrapper from 'components/AuthWrapper';\nimport Loading from 'components/Loading';\n\nclass PagePasswordReset extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loading: false, message: '', sent: false };\n  }\n\n  onFormSubmit = async event => {\n    event.preventDefault();\n\n    const email = this.refs.email.value;\n    this.setState({ loading: true });\n\n    const { auth, loginPath } = this.props;\n\n    try {\n      await auth().sendPasswordResetEmail(email, {\n        url: `${process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT}${loginPath}`,\n      });\n      this.setState({ loading: false, sent: true });\n    } catch (error) {\n      this.setState({ loading: false, message: error.message });\n    }\n  };\n\n  renderForm = () => {\n    const { loading, message, sent } = this.state;\n    return (\n      <div>\n        <AuthWrapper>\n          <form onSubmit={this.onFormSubmit}>\n            <h1>Reset Password</h1>\n            <br />\n            {!sent ? (\n              <div>\n                <input placeholder=\"Email\" ref=\"email\" type=\"email\" />\n                <br />\n                <br />\n                {loading ? (\n                  <Loading style={{ height: 50 }} />\n                ) : (\n                  <button type=\"submit\">Reset</button>\n                )}\n                <br />\n                {message && (\n                  <div className=\"Warning\">\n                    <br />\n                    {message}\n                  </div>\n                )}\n                <br />\n              </div>\n            ) : (\n              <div>\n                Sent reset link! Check your email! <br />\n                <br />\n              </div>\n            )}\n          </form>\n        </AuthWrapper>\n      </div>\n    );\n  };\n\n  onFormSubmitConfirm = async (event, oobCode, continueUrl) => {\n    event.preventDefault();\n\n    this.setState({ loading: true });\n    const password = this.refs.password.value;\n    const confirmPassword = this.refs.confirmPassword.value;\n\n    const { confirmPasswordReset, history } = this.props;\n\n    let continuePath = '/login';\n    if (continueUrl) {\n      continuePath = continueUrl.split(\n        process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT,\n      )[1];\n    }\n\n    if (password === confirmPassword) {\n      try {\n        await confirmPasswordReset(oobCode, password);\n        alert('Password reset confirmed!');\n        this.setState({ loading: false });\n        history.push(continuePath);\n      } catch (error) {\n        this.setState({ loading: false, message: error.message });\n      }\n    } else {\n      this.setState({ loading: false, message: 'Passwords do not match' });\n    }\n  };\n\n  renderConfirm = (oobCode, continueUrl) => {\n    const { loading, message } = this.state;\n\n    return (\n      <AuthWrapper>\n        <form\n          onSubmit={event =>\n            this.onFormSubmitConfirm(event, oobCode, continueUrl)\n          }\n        >\n          <h1>Reset Password</h1>\n          <br />\n          <input placeholder=\"Password\" ref=\"password\" type=\"password\" />\n          <br />\n          <br />\n          <input\n            placeholder=\"Confirm Password\"\n            ref=\"confirmPassword\"\n            type=\"password\"\n          />\n          <br />\n          <br />\n          {loading ? (\n            <Loading style={{ height: 50 }} />\n          ) : (\n            <button type=\"submit\">Reset</button>\n          )}\n          <br />\n          {message && (\n            <div className=\"Warning\">\n              <br />\n              {message}\n              <br />\n            </div>\n          )}\n          <br />\n        </form>\n      </AuthWrapper>\n    );\n  };\n\n  componentDidMount() {\n    const { appPath, isLoggedIn, history } = this.props;\n    if (isLoggedIn) {\n      history.push(appPath);\n    }\n  }\n\n  render() {\n    const { location, loginPath, registerPath } = this.props;\n    const { continueUrl, oobCode } = queryString.parse(location.search, {\n      ignoreQueryPrefix: true,\n    });\n\n    return (\n      <div className=\"PagePasswordReset\">\n        {oobCode ? this.renderConfirm(oobCode, continueUrl) : this.renderForm()}\n        <div className=\"AuthLinks\">\n          <Link to={loginPath}>Already have an account? Log in</Link>\n          <br />\n          <div style={{ height: 10 }} />\n          <Link to={registerPath}>Create an account</Link>\n          <br />\n        </div>\n      </div>\n    );\n  }\n}\n\nPagePasswordReset.defaultProps = {\n  appPath: '/app',\n  loginPath: '/login',\n  registerPath: '/register',\n};\n\nfunction mapStateToProps(state, props) {\n  const { auth, confirmPasswordReset } = props.firebase;\n  return { auth, confirmPasswordReset, isLoggedIn: !!state.firebase.auth.uid };\n}\n\nexport default compose(\n  firebaseConnect(),\n  withRouter,\n  connect(mapStateToProps),\n)(PagePasswordReset);\n"]},"metadata":{},"sourceType":"module"}