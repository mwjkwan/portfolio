{"ast":null,"code":"import _toConsumableArray from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/melissa/datamatch/src/pages/PageAdmin/routes/PageAdminSurveys.js\";\nimport React, { Component } from 'react';\nimport { deepCompare } from 'utils/helpers';\n\nvar uuidv1 = require('uuid/v1');\n\nvar _ = require('lodash');\n\nvar PageAdminSurveys =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PageAdminSurveys, _Component);\n\n  function PageAdminSurveys(props) {\n    var _this;\n\n    _classCallCheck(this, PageAdminSurveys);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PageAdminSurveys).call(this, props));\n\n    _this.updateQuestion = function (event, question_key, survey_key, param) {\n      var target = event.target;\n      var value = target.value;\n\n      _this.setState(_objectSpread({}, _this.state, {\n        surveys: _objectSpread({}, _this.state.surveys, _defineProperty({}, survey_key, _objectSpread({}, _this.state.surveys[survey_key], {\n          questions: _objectSpread({}, _this.state.surveys[survey_key].questions, _defineProperty({}, question_key, _objectSpread({}, _this.state.surveys[survey_key].questions[question_key], _defineProperty({}, param, value))))\n        })))\n      }));\n    };\n\n    _this.updateAnswer = function (event, question_key, survey_key, answer_key, param) {\n      var target = event.target;\n      var value = target.value;\n\n      _this.setState(_objectSpread({}, _this.state, {\n        surveys: _objectSpread({}, _this.state.surveys, _defineProperty({}, survey_key, _objectSpread({}, _this.state.surveys[survey_key], {\n          questions: _objectSpread({}, _this.state.surveys[survey_key].questions, _defineProperty({}, question_key, _objectSpread({}, _this.state.surveys[survey_key].questions[question_key], {\n            answers: _objectSpread({}, _this.state.surveys[survey_key].questions[question_key].answers, _defineProperty({}, answer_key, _objectSpread({}, _this.state.surveys[survey_key].questions[question_key].answers[answer_key], _defineProperty({}, param, value))))\n          })))\n        })))\n      }));\n    };\n\n    _this.addQuestion = function (survey_key) {\n      var question_key = uuidv1();\n\n      _this.setState(_objectSpread({}, _this.state, {\n        surveys: _objectSpread({}, _this.state.surveys, _defineProperty({}, survey_key, _objectSpread({}, _this.state.surveys[survey_key], {\n          questions: _objectSpread({}, _this.state.surveys[survey_key].questions, _defineProperty({}, question_key, {\n            text: '',\n            order: 0,\n            answers: {}\n          }))\n        })))\n      }));\n    };\n\n    _this.addResponse = function (survey_key, question_key) {\n      var answer_key = uuidv1();\n\n      _this.setState(_objectSpread({}, _this.state, {\n        surveys: _objectSpread({}, _this.state.surveys, _defineProperty({}, survey_key, _objectSpread({}, _this.state.surveys[survey_key], {\n          questions: _objectSpread({}, _this.state.surveys[survey_key].questions, _defineProperty({}, question_key, _objectSpread({}, _this.state.surveys[survey_key].questions[question_key], {\n            answers: _objectSpread({}, _this.state.surveys[survey_key].questions[question_key].answers, _defineProperty({}, answer_key, {\n              order: 0,\n              text: ''\n            }))\n          })))\n        })))\n      }));\n    };\n\n    _this.deleteQuestion = function (survey_key, question_key) {\n      _this.setState(_objectSpread({}, _this.state, {\n        surveys: _objectSpread({}, _this.state.surveys, _defineProperty({}, survey_key, _objectSpread({}, _this.state.surveys[survey_key], {\n          questions: _.omit(_this.state.surveys[survey_key].questions, question_key)\n        })))\n      }));\n    };\n\n    _this.deleteResponse = function (survey_key, question_key, response_key) {\n      _this.setState(_objectSpread({}, _this.state, {\n        surveys: _objectSpread({}, _this.state.surveys, _defineProperty({}, survey_key, _objectSpread({}, _this.state.surveys[survey_key], {\n          questions: _objectSpread({}, _this.state.surveys[survey_key].questions, _defineProperty({}, question_key, _objectSpread({}, _this.state.surveys[survey_key].questions[question_key], {\n            answers: _.omit(_this.state.surveys[survey_key].questions[question_key].answers, response_key)\n          })))\n        })))\n      }));\n    };\n\n    _this.updateSurvey = function (event, survey_key, param) {\n      var target = event.target;\n      var value = target.value;\n\n      _this.setState(_objectSpread({}, _this.state, {\n        surveys: _objectSpread({}, _this.state.surveys, _defineProperty({}, survey_key, _objectSpread({}, _this.state.surveys[survey_key], _defineProperty({}, param, value))))\n      }));\n    };\n\n    _this.addSurvey = function _callee() {\n      var survey_key;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(_this.props.addSurvey());\n\n            case 2:\n              survey_key = _context.sent;\n\n              _this.setState(_objectSpread({}, _this.state, {\n                surveys: _objectSpread({}, _this.state.surveys, _defineProperty({}, survey_key, {\n                  name: '',\n                  questions: {}\n                })),\n                survey: survey_key\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.state = {\n      surveys: _this.props.surveys,\n      survey: Object.keys(_this.props.surveys)[0],\n      modal: false,\n      propsSurveys: _this.props.surveys\n    };\n    return _this;\n  }\n\n  _createClass(PageAdminSurveys, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var equal = deepCompare(this.state.surveys, this.props.surveys);\n      return React.createElement(\"div\", {\n        className: \"PageAdminSurveys\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"Save ALL CHANGES by hitting the update survey button at the bottom\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Order of questions and responses goes from lowest to highest\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Updating order works, just not on Admin page for now\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        value: this.state.survey,\n        onChange: function onChange(event) {\n          _this2.setState({\n            survey: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, Object.keys(this.props.surveys).map(function (survey_key) {\n        if (_this2.props.surveys[survey_key] !== null) {\n          return React.createElement(\"option\", {\n            key: survey_key,\n            value: survey_key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 227\n            },\n            __self: this\n          }, _this2.props.surveys[survey_key].name);\n        }\n\n        return null;\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.addSurvey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"Add a Survey\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }), [this.state.survey].map(function (survey_key) {\n        var survey = _this2.state.surveys[survey_key];\n        var questions = survey.questions;\n        var items = Object.keys(questions).map(function (key) {\n          return [key, questions[key].order];\n        }); // items.sort(function(first, second) {\n        //   return first[1] - second[1];\n        // });\n\n        return React.createElement(\"div\", {\n          key: survey_key,\n          className: \"Box survey\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          placeholder: \"Survey Name\",\n          value: survey.name,\n          onChange: function onChange(event) {\n            _this2.updateSurvey(event, survey_key, 'name');\n          },\n          style: {\n            fontWeight: 'bold',\n            fontSize: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          style: {},\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263\n          },\n          __self: this\n        }, items.map(function (item) {\n          var question_key = item[0];\n          var question = survey.questions[question_key];\n          var answers = question.answers || {};\n          var items2 = Object.keys(answers).map(function (key) {\n            return [key, answers[key].order];\n          }); // items2.sort(function(first, second) {\n          //   return first[1] - second[1];\n          // });\n\n          return React.createElement(\"div\", {\n            key: question_key,\n            className: \"Box question\",\n            style: {\n              minWidth: 200\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 277\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"header\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 282\n            },\n            __self: this\n          }, \"QUESTION TEXT\"), React.createElement(\"input\", {\n            type: \"text\",\n            value: question.text,\n            onChange: function onChange(event) {\n              _this2.updateQuestion(event, question_key, survey_key, 'text');\n            },\n            style: {\n              fontWeight: 'bold',\n              fontSize: 20\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 283\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"header\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 296\n            },\n            __self: this\n          }, \"QUESTION ORDER\"), React.createElement(\"input\", {\n            type: \"number\",\n            value: question.order,\n            onChange: function onChange(event) {\n              _this2.updateQuestion(event, question_key, survey_key, 'order');\n            },\n            style: {\n              fontWeight: 'bold',\n              fontSize: 20\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 297\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 310\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 311\n            },\n            __self: this\n          }), items2.map(function (item2) {\n            var answer_key = item2[0];\n            var answer = question.answers[answer_key];\n            return React.createElement(\"div\", {\n              key: answer_key,\n              className: \"Box response\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 316\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"header\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 317\n              },\n              __self: this\n            }, \"RESPONSE TEXT\"), React.createElement(\"input\", {\n              type: \"text\",\n              value: answer.text,\n              onChange: function onChange(event) {\n                _this2.updateAnswer(event, question_key, survey_key, answer_key, 'text');\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 318\n              },\n              __self: this\n            }), React.createElement(\"div\", {\n              className: \"header\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 331\n              },\n              __self: this\n            }, \"RESPONSE ORDER\"), React.createElement(\"input\", {\n              type: \"number\",\n              value: answer.order,\n              onChange: function onChange(event) {\n                _this2.updateAnswer(event, question_key, survey_key, answer_key, 'order');\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 332\n              },\n              __self: this\n            }), React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 345\n              },\n              __self: this\n            }), React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 346\n              },\n              __self: this\n            }), React.createElement(\"button\", {\n              className: \"delete response\",\n              onClick: function onClick() {\n                _this2.deleteResponse(survey_key, question_key, answer_key);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 347\n              },\n              __self: this\n            }, \"delete response\"));\n          }), React.createElement(\"button\", {\n            onClick: function onClick() {\n              _this2.addResponse(survey_key, question_key);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 362\n            },\n            __self: this\n          }, \"add a response\"), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 369\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 370\n            },\n            __self: this\n          }), React.createElement(\"button\", {\n            className: \"delete question\",\n            onClick: function onClick() {\n              _this2.deleteQuestion(survey_key, question_key);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 371\n            },\n            __self: this\n          }, \"delete question\"));\n        })), React.createElement(\"button\", {\n          onClick: function onClick() {\n            _this2.addQuestion(survey_key);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383\n          },\n          __self: this\n        }, \"add a question\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 390\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 391\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: function onClick() {\n            _this2.props.updateSurvey(survey_key, _this2.state.surveys[survey_key]);\n\n            alert('Survey Updated');\n          },\n          style: {\n            opacity: !equal ? 1 : 0.7,\n            pointerEvents: !equal ? 'auto' : 'none'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 392\n          },\n          __self: this\n        }, \"update survey\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 407\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 408\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: function onClick() {\n            _this2.setState({\n              modal: true\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 409\n          },\n          __self: this\n        }, \"delete survey\"));\n      }), this.state.modal && React.createElement(\"div\", {\n        style: {\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          background: 'rgba(0,0,0,0.5)',\n          width: '100vw',\n          height: '100vh',\n          zIndex: 1000,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          width: '90%',\n          height: '90%',\n          background: 'white',\n          maxWidth: 500,\n          maxHeight: 500,\n          padding: 20,\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'space-between'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }, \"Are you sure you want to delete this survey?\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          var surveys = _toConsumableArray(Object.keys(_this2.props.surveys));\n\n          var survey = _this2.state.survey;\n\n          if (surveys.length > 1) {\n            _this2.setState({\n              survey: surveys[0] === survey ? surveys[1] : surveys[0],\n              modal: false\n            }, function () {\n              _this2.props.deleteSurvey(survey);\n\n              alert('Survey Deleted');\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }, \"Confirm Delete\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.setState({\n            modal: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }, \"Cancel\"))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      var equal = deepCompare(state.propssSurvey, props.surveys);\n\n      if (!equal) {\n        return _objectSpread({}, state, {\n          propsSurveys: props.surveys,\n          surveys: _objectSpread({}, props.surveys, _defineProperty({}, state.survey, state.surveys[state.survey]))\n        });\n      }\n\n      return null;\n    }\n  }]);\n\n  return PageAdminSurveys;\n}(Component);\n\nexport { PageAdminSurveys as default };","map":{"version":3,"sources":["/Users/melissa/datamatch/src/pages/PageAdmin/routes/PageAdminSurveys.js"],"names":["React","Component","deepCompare","uuidv1","require","_","PageAdminSurveys","props","updateQuestion","event","question_key","survey_key","param","target","value","setState","state","surveys","questions","updateAnswer","answer_key","answers","addQuestion","text","order","addResponse","deleteQuestion","omit","deleteResponse","response_key","updateSurvey","addSurvey","name","survey","Object","keys","modal","propsSurveys","equal","map","items","key","fontWeight","fontSize","item","question","items2","minWidth","item2","answer","alert","opacity","pointerEvents","position","top","left","background","width","height","zIndex","display","alignItems","justifyContent","maxWidth","maxHeight","padding","flexDirection","length","deleteSurvey","propssSurvey"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { deepCompare } from 'utils/helpers';\n\nconst uuidv1 = require('uuid/v1');\nvar _ = require('lodash');\n\nexport default class PageAdminSurveys extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      surveys: this.props.surveys,\n      survey: Object.keys(this.props.surveys)[0],\n      modal: false,\n      propsSurveys: this.props.surveys,\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    let equal = deepCompare(state.propssSurvey, props.surveys);\n\n    if (!equal) {\n      return {\n        ...state,\n        propsSurveys: props.surveys,\n        surveys: {\n          ...props.surveys,\n          [state.survey]: state.surveys[state.survey],\n        },\n      };\n    }\n    return null;\n  }\n\n  updateQuestion = (event, question_key, survey_key, param) => {\n    const target = event.target;\n    const value = target.value;\n\n    this.setState({\n      ...this.state,\n      surveys: {\n        ...this.state.surveys,\n        [survey_key]: {\n          ...this.state.surveys[survey_key],\n          questions: {\n            ...this.state.surveys[survey_key].questions,\n            [question_key]: {\n              ...this.state.surveys[survey_key].questions[question_key],\n              [param]: value,\n            },\n          },\n        },\n      },\n    });\n  };\n\n  updateAnswer = (event, question_key, survey_key, answer_key, param) => {\n    const target = event.target;\n    const value = target.value;\n\n    this.setState({\n      ...this.state,\n      surveys: {\n        ...this.state.surveys,\n        [survey_key]: {\n          ...this.state.surveys[survey_key],\n          questions: {\n            ...this.state.surveys[survey_key].questions,\n            [question_key]: {\n              ...this.state.surveys[survey_key].questions[question_key],\n              answers: {\n                ...this.state.surveys[survey_key].questions[question_key]\n                  .answers,\n                [answer_key]: {\n                  ...this.state.surveys[survey_key].questions[question_key]\n                    .answers[answer_key],\n                  [param]: value,\n                },\n              },\n            },\n          },\n        },\n      },\n    });\n  };\n\n  addQuestion = survey_key => {\n    let question_key = uuidv1();\n\n    this.setState({\n      ...this.state,\n      surveys: {\n        ...this.state.surveys,\n        [survey_key]: {\n          ...this.state.surveys[survey_key],\n          questions: {\n            ...this.state.surveys[survey_key].questions,\n            [question_key]: {\n              text: '',\n              order: 0,\n              answers: {},\n            },\n          },\n        },\n      },\n    });\n  };\n\n  addResponse = (survey_key, question_key) => {\n    let answer_key = uuidv1();\n\n    this.setState({\n      ...this.state,\n      surveys: {\n        ...this.state.surveys,\n        [survey_key]: {\n          ...this.state.surveys[survey_key],\n          questions: {\n            ...this.state.surveys[survey_key].questions,\n            [question_key]: {\n              ...this.state.surveys[survey_key].questions[question_key],\n              answers: {\n                ...this.state.surveys[survey_key].questions[question_key]\n                  .answers,\n                [answer_key]: {\n                  order: 0,\n                  text: '',\n                },\n              },\n            },\n          },\n        },\n      },\n    });\n  };\n\n  deleteQuestion = (survey_key, question_key) => {\n    this.setState({\n      ...this.state,\n      surveys: {\n        ...this.state.surveys,\n        [survey_key]: {\n          ...this.state.surveys[survey_key],\n          questions: _.omit(\n            this.state.surveys[survey_key].questions,\n            question_key,\n          ),\n        },\n      },\n    });\n  };\n\n  deleteResponse = (survey_key, question_key, response_key) => {\n    this.setState({\n      ...this.state,\n      surveys: {\n        ...this.state.surveys,\n        [survey_key]: {\n          ...this.state.surveys[survey_key],\n          questions: {\n            ...this.state.surveys[survey_key].questions,\n            [question_key]: {\n              ...this.state.surveys[survey_key].questions[question_key],\n              answers: _.omit(\n                this.state.surveys[survey_key].questions[question_key].answers,\n                response_key,\n              ),\n            },\n          },\n        },\n      },\n    });\n  };\n\n  updateSurvey = (event, survey_key, param) => {\n    const target = event.target;\n    const value = target.value;\n\n    this.setState({\n      ...this.state,\n      surveys: {\n        ...this.state.surveys,\n        [survey_key]: {\n          ...this.state.surveys[survey_key],\n          [param]: value,\n        },\n      },\n    });\n  };\n\n  addSurvey = async () => {\n    let survey_key = await this.props.addSurvey();\n\n    this.setState({\n      ...this.state,\n      surveys: {\n        ...this.state.surveys,\n        [survey_key]: {\n          name: '',\n          questions: {},\n        },\n      },\n      survey: survey_key,\n    });\n  };\n\n  render() {\n    var equal = deepCompare(this.state.surveys, this.props.surveys);\n    return (\n      <div className=\"PageAdminSurveys\">\n        <div>\n          Save ALL CHANGES by hitting the update survey button at the bottom\n        </div>\n        <br />\n        <div>Order of questions and responses goes from lowest to highest</div>\n        <br />\n        <div>Updating order works, just not on Admin page for now</div>\n        <br />\n        <select\n          value={this.state.survey}\n          onChange={event => {\n            this.setState({ survey: event.target.value });\n          }}\n        >\n          {Object.keys(this.props.surveys).map(survey_key => {\n            if (this.props.surveys[survey_key] !== null) {\n              return (\n                <option key={survey_key} value={survey_key}>\n                  {this.props.surveys[survey_key].name}\n                </option>\n              );\n            }\n            return null;\n          })}\n        </select>\n        <br />\n        <br />\n        <button onClick={this.addSurvey}>Add a Survey</button>\n        <br />\n        <br />\n        {[this.state.survey].map(survey_key => {\n          let survey = this.state.surveys[survey_key];\n          let questions = survey.questions;\n          var items = Object.keys(questions).map(function(key) {\n            return [key, questions[key].order];\n          });\n          // items.sort(function(first, second) {\n          //   return first[1] - second[1];\n          // });\n\n          return (\n            <div key={survey_key} className=\"Box survey\">\n              <input\n                type=\"text\"\n                placeholder=\"Survey Name\"\n                value={survey.name}\n                onChange={event => {\n                  this.updateSurvey(event, survey_key, 'name');\n                }}\n                style={{ fontWeight: 'bold', fontSize: 20 }}\n              />\n              <br />\n              <br />\n              <div style={{}}>\n                {items.map(item => {\n                  let question_key = item[0];\n                  let question = survey.questions[question_key];\n\n                  let answers = question.answers || {};\n                  var items2 = Object.keys(answers).map(function(key) {\n                    return [key, answers[key].order];\n                  });\n                  // items2.sort(function(first, second) {\n                  //   return first[1] - second[1];\n                  // });\n\n                  return (\n                    <div\n                      key={question_key}\n                      className=\"Box question\"\n                      style={{ minWidth: 200 }}\n                    >\n                      <div className=\"header\">QUESTION TEXT</div>\n                      <input\n                        type=\"text\"\n                        value={question.text}\n                        onChange={event => {\n                          this.updateQuestion(\n                            event,\n                            question_key,\n                            survey_key,\n                            'text',\n                          );\n                        }}\n                        style={{ fontWeight: 'bold', fontSize: 20 }}\n                      />\n                      <div className=\"header\">QUESTION ORDER</div>\n                      <input\n                        type=\"number\"\n                        value={question.order}\n                        onChange={event => {\n                          this.updateQuestion(\n                            event,\n                            question_key,\n                            survey_key,\n                            'order',\n                          );\n                        }}\n                        style={{ fontWeight: 'bold', fontSize: 20 }}\n                      />\n                      <br />\n                      <br />\n                      {items2.map(item2 => {\n                        let answer_key = item2[0];\n                        let answer = question.answers[answer_key];\n                        return (\n                          <div key={answer_key} className=\"Box response\">\n                            <div className=\"header\">RESPONSE TEXT</div>\n                            <input\n                              type=\"text\"\n                              value={answer.text}\n                              onChange={event => {\n                                this.updateAnswer(\n                                  event,\n                                  question_key,\n                                  survey_key,\n                                  answer_key,\n                                  'text',\n                                );\n                              }}\n                            />\n                            <div className=\"header\">RESPONSE ORDER</div>\n                            <input\n                              type=\"number\"\n                              value={answer.order}\n                              onChange={event => {\n                                this.updateAnswer(\n                                  event,\n                                  question_key,\n                                  survey_key,\n                                  answer_key,\n                                  'order',\n                                );\n                              }}\n                            />\n                            <br />\n                            <br />\n                            <button\n                              className=\"delete response\"\n                              onClick={() => {\n                                this.deleteResponse(\n                                  survey_key,\n                                  question_key,\n                                  answer_key,\n                                );\n                              }}\n                            >\n                              delete response\n                            </button>\n                          </div>\n                        );\n                      })}\n                      <button\n                        onClick={() => {\n                          this.addResponse(survey_key, question_key);\n                        }}\n                      >\n                        add a response\n                      </button>\n                      <br />\n                      <br />\n                      <button\n                        className=\"delete question\"\n                        onClick={() => {\n                          this.deleteQuestion(survey_key, question_key);\n                        }}\n                      >\n                        delete question\n                      </button>\n                    </div>\n                  );\n                })}\n              </div>\n              <button\n                onClick={() => {\n                  this.addQuestion(survey_key);\n                }}\n              >\n                add a question\n              </button>\n              <br />\n              <br />\n              <button\n                onClick={() => {\n                  this.props.updateSurvey(\n                    survey_key,\n                    this.state.surveys[survey_key],\n                  );\n                  alert('Survey Updated');\n                }}\n                style={{\n                  opacity: !equal ? 1 : 0.7,\n                  pointerEvents: !equal ? 'auto' : 'none',\n                }}\n              >\n                update survey\n              </button>\n              <br />\n              <br />\n              <button\n                onClick={() => {\n                  this.setState({ modal: true });\n                }}\n              >\n                delete survey\n              </button>\n            </div>\n          );\n        })}\n\n        {this.state.modal && (\n          <div\n            style={{\n              position: 'fixed',\n              top: 0,\n              left: 0,\n              background: 'rgba(0,0,0,0.5)',\n              width: '100vw',\n              height: '100vh',\n              zIndex: 1000,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <div\n              style={{\n                width: '90%',\n                height: '90%',\n                background: 'white',\n                maxWidth: 500,\n                maxHeight: 500,\n                padding: 20,\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'space-between',\n              }}\n            >\n              <div>Are you sure you want to delete this survey?</div>\n              <button\n                onClick={() => {\n                  let surveys = [...Object.keys(this.props.surveys)];\n                  let survey = this.state.survey;\n                  if (surveys.length > 1) {\n                    this.setState(\n                      {\n                        survey: surveys[0] === survey ? surveys[1] : surveys[0],\n                        modal: false,\n                      },\n                      () => {\n                        this.props.deleteSurvey(survey);\n                        alert('Survey Deleted');\n                      },\n                    );\n                  }\n                }}\n              >\n                Confirm Delete\n              </button>\n              <button onClick={() => this.setState({ modal: false })}>\n                Cancel\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}