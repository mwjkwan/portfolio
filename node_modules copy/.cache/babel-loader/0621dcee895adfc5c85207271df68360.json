{"ast":null,"code":"var _jsxFileName = \"/Users/melissa/datamatch/src/index.js\";\n\n/*\n\nFramework created by Ryan Lee, use only allowed with permission from Ryan Lee.\n\n*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'styles/styles.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport { createBrowserHistory } from 'history';\nimport createSagaMiddleware from 'redux-saga';\nimport { routerMiddleware } from 'connected-react-router';\nimport { getFirebase } from 'react-redux-firebase';\nimport { createFirestoreInstance } from 'redux-firestore';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/storage';\nimport 'firebase/database';\nimport 'firebase/firestore';\nimport 'firebase/functions';\nimport { FIREBASE_CONFIG } from 'constants/Firebase';\nimport './assets/fonts/apercu_regular_pro.otf';\nimport './assets/fonts/apercu_medium_pro.otf';\nimport './assets/fonts/apercu_bold_pro.otf';\nimport rootReducer from 'store/reducers';\nimport root from 'store/sagas';\n\nrequire('dotenv').config();\n\nfirebase.initializeApp(FIREBASE_CONFIG); // uncomment below to activate firebase functions locally\n// firebase.functions().useFunctionsEmulator('http://localhost:5000');\n\nvar history = createBrowserHistory();\nvar sagaMiddleware = createSagaMiddleware();\nvar middleware = [routerMiddleware(history), sagaMiddleware];\nvar rrfConfig = {\n  userProfile: 'users',\n  // useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\n  useFirestoreForStorageMeta: true,\n  dispatchRemoveAction: true\n};\nvar store = createStore(rootReducer, {}, compose(applyMiddleware.apply(void 0, middleware)));\nvar rrfProps = {\n  firebase: firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance: createFirestoreInstance // <- needed if using firestore\n\n};\nsagaMiddleware.run(root, getFirebase);\nReactDOM.render(React.createElement(App, {\n  store: store,\n  rrfProps: rrfProps,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n}), document.getElementById('root'));\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/melissa/datamatch/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","applyMiddleware","createStore","compose","createBrowserHistory","createSagaMiddleware","routerMiddleware","getFirebase","createFirestoreInstance","firebase","FIREBASE_CONFIG","rootReducer","root","require","config","initializeApp","history","sagaMiddleware","middleware","rrfConfig","userProfile","useFirestoreForStorageMeta","dispatchRemoveAction","store","rrfProps","dispatch","run","render","document","getElementById","unregister"],"mappings":";;AAAA;;;;;AAMA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,kCAAP;AACA,OAAO,oBAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AAEA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,uBAAT,QAAwC,iBAAxC;AAEA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,kBAAP;AACA,OAAO,mBAAP;AACA,OAAO,oBAAP;AACA,OAAO,oBAAP;AACA,SAASC,eAAT,QAAgC,oBAAhC;AAEA,OAAO,uCAAP;AACA,OAAO,sCAAP;AACA,OAAO,oCAAP;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAEAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEAL,QAAQ,CAACM,aAAT,CAAuBL,eAAvB,E,CAEA;AACA;;AAEA,IAAMM,OAAO,GAAGZ,oBAAoB,EAApC;AACA,IAAMa,cAAc,GAAGZ,oBAAoB,EAA3C;AAEA,IAAIa,UAAU,GAAG,CAACZ,gBAAgB,CAACU,OAAD,CAAjB,EAA4BC,cAA5B,CAAjB;AAEA,IAAME,SAAS,GAAG;AAChBC,EAAAA,WAAW,EAAE,OADG;AAEhB;AACAC,EAAAA,0BAA0B,EAAE,IAHZ;AAIhBC,EAAAA,oBAAoB,EAAE;AAJN,CAAlB;AAOA,IAAMC,KAAK,GAAGrB,WAAW,CACvBS,WADuB,EAEvB,EAFuB,EAGvBR,OAAO,CAACF,eAAe,MAAf,SAAmBiB,UAAnB,CAAD,CAHgB,CAAzB;AAMA,IAAMM,QAAQ,GAAG;AACff,EAAAA,QAAQ,EAAEA,QADK;AAEfK,EAAAA,MAAM,EAAEK,SAFO;AAGfM,EAAAA,QAAQ,EAAEF,KAAK,CAACE,QAHD;AAIfjB,EAAAA,uBAAuB,EAAvBA,uBAJe,CAIU;;AAJV,CAAjB;AAOAS,cAAc,CAACS,GAAf,CAAmBd,IAAnB,EAAyBL,WAAzB;AAEAT,QAAQ,CAAC6B,MAAT,CACE,oBAAC,GAAD;AAAK,EAAA,KAAK,EAAEJ,KAAZ;AAAmB,EAAA,QAAQ,EAAEC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEI,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF;AAKA7B,aAAa,CAAC8B,UAAd","sourcesContent":["/*\n\nFramework created by Ryan Lee, use only allowed with permission from Ryan Lee.\n\n*/\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'styles/styles.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport { createBrowserHistory } from 'history';\nimport createSagaMiddleware from 'redux-saga';\nimport { routerMiddleware } from 'connected-react-router';\n\nimport { getFirebase } from 'react-redux-firebase';\nimport { createFirestoreInstance } from 'redux-firestore';\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/storage';\nimport 'firebase/database';\nimport 'firebase/firestore';\nimport 'firebase/functions';\nimport { FIREBASE_CONFIG } from 'constants/Firebase';\n\nimport './assets/fonts/apercu_regular_pro.otf';\nimport './assets/fonts/apercu_medium_pro.otf';\nimport './assets/fonts/apercu_bold_pro.otf';\n\nimport rootReducer from 'store/reducers';\nimport root from 'store/sagas';\n\nrequire('dotenv').config();\n\nfirebase.initializeApp(FIREBASE_CONFIG);\n\n// uncomment below to activate firebase functions locally\n// firebase.functions().useFunctionsEmulator('http://localhost:5000');\n\nconst history = createBrowserHistory();\nconst sagaMiddleware = createSagaMiddleware();\n\nlet middleware = [routerMiddleware(history), sagaMiddleware];\n\nconst rrfConfig = {\n  userProfile: 'users',\n  // useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\n  useFirestoreForStorageMeta: true,\n  dispatchRemoveAction: true,\n};\n\nconst store = createStore(\n  rootReducer,\n  {},\n  compose(applyMiddleware(...middleware)),\n);\n\nconst rrfProps = {\n  firebase: firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance, // <- needed if using firestore\n};\n\nsagaMiddleware.run(root, getFirebase);\n\nReactDOM.render(\n  <App store={store} rrfProps={rrfProps} />,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}