{"ast":null,"code":"import _objectWithoutProperties from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/melissa/datamatch/src/components/PrivateRoute.js\";\nimport React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nexport var PrivateRoute = function PrivateRoute(_ref) {\n  var Component = _ref.component,\n      rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n  var isLoggedIn = rest.isLoggedIn;\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: function render(props) {\n      return isLoggedIn ? React.createElement(Component, Object.assign({}, props, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      })) : React.createElement(Redirect, {\n        to: {\n          pathname: '/login',\n          state: {\n            from: props.location\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }));\n};\nexport var PublicRoute = function PublicRoute(_ref2) {\n  var Component = _ref2.component,\n      rest = _objectWithoutProperties(_ref2, [\"component\"]);\n\n  var isLoggedIn = rest.isLoggedIn;\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: function render(props) {\n      return !isLoggedIn ? React.createElement(Component, Object.assign({}, props, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })) : React.createElement(Redirect, {\n        to: {\n          pathname: '/app',\n          state: {\n            from: props.location\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }));\n};\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/melissa/datamatch/src/components/PrivateRoute.js"],"names":["React","Redirect","Route","PrivateRoute","Component","component","rest","isLoggedIn","props","pathname","state","from","location","PublicRoute"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAuC;AAAA,MAAzBC,SAAyB,QAApCC,SAAoC;AAAA,MAAXC,IAAW;;AACjE,MAAMC,UAAU,GAAGD,IAAI,CAACC,UAAxB;AACA,SACE,oBAAC,KAAD,oBACMD,IADN;AAEE,IAAA,MAAM,EAAE,gBAAAE,KAAK;AAAA,aACXD,UAAU,GACR,oBAAC,SAAD,oBAAeC,KAAf,EAA0BF,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADQ,GAGR,oBAAC,QAAD;AACE,QAAA,EAAE,EAAE;AAAEG,UAAAA,QAAQ,EAAE,QAAZ;AAAsBC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAA7B,SADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJS;AAAA,KAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAcD,CAhBM;AAkBP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,QAAuC;AAAA,MAAzBT,SAAyB,SAApCC,SAAoC;AAAA,MAAXC,IAAW;;AAChE,MAAMC,UAAU,GAAGD,IAAI,CAACC,UAAxB;AACA,SACE,oBAAC,KAAD,oBACMD,IADN;AAEE,IAAA,MAAM,EAAE,gBAAAE,KAAK;AAAA,aACX,CAACD,UAAD,GACE,oBAAC,SAAD,oBAAeC,KAAf,EAA0BF,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,GAGE,oBAAC,QAAD;AACE,QAAA,EAAE,EAAE;AAAEG,UAAAA,QAAQ,EAAE,MAAZ;AAAoBC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAA3B,SADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJS;AAAA,KAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAcD,CAhBM;AAkBP,eAAeT,YAAf","sourcesContent":["import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\n  const isLoggedIn = rest.isLoggedIn;\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        isLoggedIn ? (\n          <Component {...props} {...rest} />\n        ) : (\n          <Redirect\n            to={{ pathname: '/login', state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport const PublicRoute = ({ component: Component, ...rest }) => {\n  const isLoggedIn = rest.isLoggedIn;\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        !isLoggedIn ? (\n          <Component {...props} {...rest} />\n        ) : (\n          <Redirect\n            to={{ pathname: '/app', state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}