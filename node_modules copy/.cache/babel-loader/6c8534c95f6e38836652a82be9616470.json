{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/melissa/datamatch/src/components/SurveyQuestion.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  max-width: 700px;\\n\\n  .answer {\\n    padding: 0px 10px;\\n    font-family: 'apercu-light';\\n    height: 40px;\\n    text-align: left;\\n    color: #222222;\\n    display: flex;\\n    align-items: center;\\n    cursor: pointer;\\n    &:hover {\\n      background: rgba(196, 196, 196, 0.1);\\n    }\\n  }\\n\\n  .answer-selected {\\n    background: #f3f2f2;\\n    &:hover {\\n      background: #f3f2f2;\\n    }\\n  }\\n\\n  .question {\\n    margin-bottom: 15px;\\n    font-size: 20px !important;\\n  }\\n\\n  .checkmark {\\n    margin-right: 4px;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { css } from '@emotion/core';\nimport React from 'react';\nvar pageArchivesStyle = css(_templateObject());\n\nfunction SurveyQuestion(props) {\n  var question = props.question;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"question\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, question.text), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, question.answers.map(function (answer) {\n    return React.createElement(\"li\", {\n      key: answer.order,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, answer);\n  })));\n}\n\nexport default SurveyQuestion;","map":{"version":3,"sources":["/Users/melissa/datamatch/src/components/SurveyQuestion.js"],"names":["css","React","pageArchivesStyle","SurveyQuestion","props","question","text","answers","map","answer","order"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,eAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,iBAAiB,GAAGF,GAAH,mBAAvB;;AAkCA,SAASG,cAAT,CAAwBC,KAAxB,EAA+B;AAAA,MACrBC,QADqB,GACRD,KADQ,CACrBC,QADqB;AAE7B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BA,QAAQ,CAACC,IAApC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,CAACE,OAAT,CAAiBC,GAAjB,CAAqB,UAAAC,MAAM;AAAA,WAC1B;AAAI,MAAA,GAAG,EAAEA,MAAM,CAACC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBD,MAAxB,CAD0B;AAAA,GAA3B,CADH,CAFF,CADF;AAUD;;AAED,eAAeN,cAAf","sourcesContent":["import { css } from '@emotion/core';\nimport React from 'react';\n\nconst pageArchivesStyle = css`\n  max-width: 700px;\n\n  .answer {\n    padding: 0px 10px;\n    font-family: 'apercu-light';\n    height: 40px;\n    text-align: left;\n    color: #222222;\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    &:hover {\n      background: rgba(196, 196, 196, 0.1);\n    }\n  }\n\n  .answer-selected {\n    background: #f3f2f2;\n    &:hover {\n      background: #f3f2f2;\n    }\n  }\n\n  .question {\n    margin-bottom: 15px;\n    font-size: 20px !important;\n  }\n\n  .checkmark {\n    margin-right: 4px;\n  }\n`;\n\nfunction SurveyQuestion(props) {\n  const { question } = props;\n  return (\n    <div>\n      <div className=\"question\">{question.text}</div>\n      <ul>\n        {question.answers.map(answer => (\n          <li key={answer.order}>{answer}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default SurveyQuestion;"]},"metadata":{},"sourceType":"module"}