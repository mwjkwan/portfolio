{"ast":null,"code":"import _defineProperty from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/melissa/datamatch/src/pages/PageResults/routes/Dates.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  .blue-button {\\n    background: #dedef0;\\n  }\\n\\n  .you-button {\\n    background: #e9c8c5;\\n  }\\n\\n  .both-button {\\n    background: #ffad87;\\n  }\\n\\n  .partner-button {\\n    background: #d3908a;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsx jsx **/\nimport { Component } from 'react';\nimport { jsx, css } from '@emotion/core';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport Loading from 'components/Loading';\nvar datesStyle = css(_templateObject());\n\nvar Dates =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dates, _Component);\n\n  function Dates(props) {\n    var _this;\n\n    _classCallCheck(this, Dates);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dates).call(this, props));\n\n    _this.processDates = function () {\n      var _this$props = _this.props,\n          meFinalized = _this$props.meFinalized,\n          otherFinalized = _this$props.otherFinalized,\n          requested = _this$props.requested;\n\n      if (!requested) {\n        return;\n      }\n\n      var availability = _this.props.availability || {};\n      var dates = _this.props.dates || {};\n      var sortedDates = Object.keys(dates).sort(function (a, b) {\n        var _dates$a$day$split$ma = dates[a].day.split('/').map(function (s) {\n          return parseInt(s);\n        }),\n            _dates$a$day$split$ma2 = _slicedToArray(_dates$a$day$split$ma, 2),\n            month1 = _dates$a$day$split$ma2[0],\n            day1 = _dates$a$day$split$ma2[1];\n\n        var _dates$b$day$split$ma = dates[b].day.split('/').map(function (s) {\n          return parseInt(s);\n        }),\n            _dates$b$day$split$ma2 = _slicedToArray(_dates$b$day$split$ma, 2),\n            month2 = _dates$b$day$split$ma2[0],\n            day2 = _dates$b$day$split$ma2[1];\n\n        return month1 !== month2 ? month1 - month2 : day1 - day2;\n      });\n      var now = new Date().getTime();\n      var processedDates = sortedDates.map(function (date) {\n        return _objectSpread({\n          id: date,\n          render: dates[date].datesAvailable > 0 && now < dates[date].unix\n        }, dates[date], {}, _this.getColor(availability[date]));\n      });\n\n      if (meFinalized && otherFinalized) {\n        processedDates = processedDates.map(function (date) {\n          return _objectSpread({}, date, {\n            render: date.render && date.btnClass === 'both-button',\n            btnClass: _this.getFinalizedColor(date.id)\n          });\n        });\n      }\n\n      _this.setState({\n        processedDates: processedDates\n      });\n\n      _this.checkFilled(processedDates);\n    };\n\n    _this.checkFilled = function (processedDates) {\n      var notFilled = processedDates.every(function (_ref) {\n        var btnClass = _ref.btnClass,\n            render = _ref.render;\n        return !render || btnClass === 'partner-button' || btnClass === 'blue-button';\n      });\n\n      _this.props.setFilled(!notFilled);\n    };\n\n    _this.updateAvailability = function (dateId, available) {\n      var _this$props2 = _this.props,\n          firebase = _this$props2.firebase,\n          matchId = _this$props2.matchId,\n          uid = _this$props2.uid;\n      firebase.update('/matches/' + matchId + '/availability/' + dateId, _defineProperty({}, uid, !available));\n    };\n\n    _this.onClick = function (dateId, available) {\n      var _this$props3 = _this.props,\n          meFinalized = _this$props3.meFinalized,\n          otherFinalized = _this$props3.otherFinalized,\n          setDateId = _this$props3.setDateId;\n\n      if (!meFinalized) {\n        _this.updateAvailability(dateId, available);\n      }\n\n      if (meFinalized && otherFinalized) {\n        setDateId(dateId);\n      }\n    };\n\n    _this.getColor = function (available) {\n      var _this$props4 = _this.props,\n          otherUid = _this$props4.otherUid,\n          uid = _this$props4.uid;\n      var btnClass = 'blue-button';\n      var currentAvailability = false;\n\n      if (available) {\n        if (available[otherUid] && available[uid]) {\n          btnClass = 'both-button';\n          currentAvailability = true;\n        } else if (!available[otherUid] && available[uid]) {\n          btnClass = 'you-button';\n          currentAvailability = true;\n        } else if (available[otherUid] && !available[uid]) {\n          btnClass = 'partner-button';\n          currentAvailability = false;\n        }\n      }\n\n      return {\n        btnClass: btnClass,\n        currentAvailability: currentAvailability\n      };\n    };\n\n    _this.getFinalizedColor = function (dateId) {\n      if (dateId === _this.props.dateId) {\n        return 'you-button';\n      }\n\n      return 'blue-button';\n    };\n\n    _this.state = {\n      processedDates: []\n    };\n    return _this;\n  }\n\n  _createClass(Dates, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props5 = this.props,\n          availability = _this$props5.availability,\n          claimingDate = _this$props5.claimingDate,\n          dateId = _this$props5.dateId,\n          dates = _this$props5.dates,\n          meFinalized = _this$props5.meFinalized,\n          otherFinalized = _this$props5.otherFinalized;\n\n      if (claimingDate) {\n        return;\n      }\n\n      if (availability !== prevProps.availability || dateId !== prevProps.dateId || dates !== prevProps.dates || meFinalized !== prevProps.meFinalized || otherFinalized !== prevProps.otherFinalized) {\n        this.processDates();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props6 = this.props,\n          meFinalized = _this$props6.meFinalized,\n          otherFinalized = _this$props6.otherFinalized,\n          requested = _this$props6.requested;\n\n      if (!requested) {\n        return jsx(\"div\", {\n          style: {\n            height: 200\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, jsx(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }));\n      }\n\n      var processedDates = this.state.processedDates;\n      var notRendered = processedDates.every(function (date) {\n        return !date.render;\n      });\n\n      if (notRendered) {\n        if (meFinalized && otherFinalized) {\n          return jsx(\"div\", {\n            style: {\n              color: 'red'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 166\n            },\n            __self: this\n          }, \"There are currently no dates both of you can make. Try changing your availability.\");\n        }\n\n        return jsx(\"div\", {\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, \"Unfortunately, there are no dates available at this time.\");\n      }\n\n      return jsx(\"div\", {\n        css: datesStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, processedDates.map(function (date) {\n        var btnClass = date.btnClass,\n            currentAvailability = date.currentAvailability,\n            day = date.day,\n            id = date.id,\n            place = date.place,\n            render = date.render;\n\n        if (!render) {\n          return null;\n        }\n\n        return jsx(\"button\", {\n          className: 'date ' + btnClass,\n          key: id,\n          onClick: function onClick() {\n            return _this2.onClick(id, currentAvailability);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, place.toUpperCase(), \" \", day);\n      }));\n    }\n  }]);\n\n  return Dates;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, _props) {\n  var _state$firebase$data = state.firebase.data,\n      availability = _state$firebase$data.availability,\n      dates = _state$firebase$data.dates;\n  var requested = state.firebase.requested;\n  return {\n    availability: availability,\n    dates: dates,\n    requested: requested.availability && requested.dates\n  };\n};\n\nexport default compose(firebaseConnect(function (props) {\n  return [{\n    path: '/dates',\n    storeAs: 'dates',\n    queryParams: ['orderByChild=involvedSchools', \"equalTo=\".concat(props.involvedSchools)]\n  }, {\n    path: \"/matches/\".concat(props.matchId, \"/availability\"),\n    storeAs: 'availability'\n  }];\n}), connect(mapStateToProps))(Dates);","map":{"version":3,"sources":["/Users/melissa/datamatch/src/pages/PageResults/routes/Dates.js"],"names":["Component","jsx","css","connect","compose","firebaseConnect","Loading","datesStyle","Dates","props","processDates","meFinalized","otherFinalized","requested","availability","dates","sortedDates","Object","keys","sort","a","b","day","split","map","s","parseInt","month1","day1","month2","day2","now","Date","getTime","processedDates","date","id","render","datesAvailable","unix","getColor","btnClass","getFinalizedColor","setState","checkFilled","notFilled","every","setFilled","updateAvailability","dateId","available","firebase","matchId","uid","update","onClick","setDateId","otherUid","currentAvailability","state","prevProps","claimingDate","height","notRendered","color","place","toUpperCase","mapStateToProps","_props","data","path","storeAs","queryParams","involvedSchools"],"mappings":"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","sourcesContent":["/** @jsx jsx **/\n\nimport { Component } from 'react';\nimport { jsx, css } from '@emotion/core';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\n\nimport Loading from 'components/Loading';\n\nconst datesStyle = css`\n  .blue-button {\n    background: #dedef0;\n  }\n\n  .you-button {\n    background: #e9c8c5;\n  }\n\n  .both-button {\n    background: #ffad87;\n  }\n\n  .partner-button {\n    background: #d3908a;\n  }\n`;\n\nclass Dates extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { processedDates: [] };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      availability,\n      claimingDate,\n      dateId,\n      dates,\n      meFinalized,\n      otherFinalized,\n    } = this.props;\n\n    if (claimingDate) {\n      return;\n    }\n\n    if (\n      availability !== prevProps.availability ||\n      dateId !== prevProps.dateId ||\n      dates !== prevProps.dates ||\n      meFinalized !== prevProps.meFinalized ||\n      otherFinalized !== prevProps.otherFinalized\n    ) {\n      this.processDates();\n    }\n  }\n\n  processDates = () => {\n    const { meFinalized, otherFinalized, requested } = this.props;\n    if (!requested) {\n      return;\n    }\n\n    const availability = this.props.availability || {};\n    const dates = this.props.dates || {};\n\n    const sortedDates = Object.keys(dates).sort((a, b) => {\n      const [month1, day1] = dates[a].day.split('/').map(s => parseInt(s));\n      const [month2, day2] = dates[b].day.split('/').map(s => parseInt(s));\n      return month1 !== month2 ? month1 - month2 : day1 - day2;\n    });\n\n    const now = new Date().getTime();\n    let processedDates = sortedDates.map(date => ({\n      id: date,\n      render: dates[date].datesAvailable > 0 && now < dates[date].unix,\n      ...dates[date],\n      ...this.getColor(availability[date]),\n    }));\n\n    if (meFinalized && otherFinalized) {\n      processedDates = processedDates.map(date => ({\n        ...date,\n        render: date.render && date.btnClass === 'both-button',\n        btnClass: this.getFinalizedColor(date.id),\n      }));\n    }\n\n    this.setState({ processedDates });\n    this.checkFilled(processedDates);\n  };\n\n  checkFilled = processedDates => {\n    const notFilled = processedDates.every(\n      ({ btnClass, render }) =>\n        !render || btnClass === 'partner-button' || btnClass === 'blue-button',\n    );\n    this.props.setFilled(!notFilled);\n  };\n\n  updateAvailability = (dateId, available) => {\n    const { firebase, matchId, uid } = this.props;\n    firebase.update('/matches/' + matchId + '/availability/' + dateId, {\n      [uid]: !available,\n    });\n  };\n\n  onClick = (dateId, available) => {\n    const { meFinalized, otherFinalized, setDateId } = this.props;\n\n    if (!meFinalized) {\n      this.updateAvailability(dateId, available);\n    }\n\n    if (meFinalized && otherFinalized) {\n      setDateId(dateId);\n    }\n  };\n\n  getColor = available => {\n    const { otherUid, uid } = this.props;\n    let btnClass = 'blue-button';\n    let currentAvailability = false;\n\n    if (available) {\n      if (available[otherUid] && available[uid]) {\n        btnClass = 'both-button';\n        currentAvailability = true;\n      } else if (!available[otherUid] && available[uid]) {\n        btnClass = 'you-button';\n        currentAvailability = true;\n      } else if (available[otherUid] && !available[uid]) {\n        btnClass = 'partner-button';\n        currentAvailability = false;\n      }\n    }\n    return { btnClass, currentAvailability };\n  };\n\n  getFinalizedColor = dateId => {\n    if (dateId === this.props.dateId) {\n      return 'you-button';\n    }\n    return 'blue-button';\n  };\n\n  render() {\n    const { meFinalized, otherFinalized, requested } = this.props;\n\n    if (!requested) {\n      return (\n        <div style={{ height: 200 }}>\n          <Loading />\n        </div>\n      );\n    }\n\n    const { processedDates } = this.state;\n    const notRendered = processedDates.every(date => !date.render);\n\n    if (notRendered) {\n      if (meFinalized && otherFinalized) {\n        return (\n          <div style={{ color: 'red' }}>\n            There are currently no dates both of you can make. Try changing your\n            availability.\n          </div>\n        );\n      }\n\n      return (\n        <div style={{ color: 'red' }}>\n          Unfortunately, there are no dates available at this time.\n        </div>\n      );\n    }\n\n    return (\n      <div css={datesStyle}>\n        {processedDates.map(date => {\n          const {\n            btnClass,\n            currentAvailability,\n            day,\n            id,\n            place,\n            render,\n          } = date;\n\n          if (!render) {\n            return null;\n          }\n\n          return (\n            <button\n              className={'date ' + btnClass}\n              key={id}\n              onClick={() => this.onClick(id, currentAvailability)}\n            >\n              {place.toUpperCase()} {day}\n            </button>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, _props) => {\n  const { availability, dates } = state.firebase.data;\n  const { requested } = state.firebase;\n\n  return {\n    availability,\n    dates,\n    requested: requested.availability && requested.dates,\n  };\n};\n\nexport default compose(\n  firebaseConnect(props => [\n    {\n      path: '/dates',\n      storeAs: 'dates',\n      queryParams: [\n        'orderByChild=involvedSchools',\n        `equalTo=${props.involvedSchools}`,\n      ],\n    },\n    {\n      path: `/matches/${props.matchId}/availability`,\n      storeAs: 'availability',\n    },\n  ]),\n  connect(mapStateToProps),\n)(Dates);\n"]},"metadata":{},"sourceType":"module"}