{"ast":null,"code":"import _classCallCheck from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/melissa/datamatch/src/pages/PageAuth/layout.js\";\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport PageLogin from 'components/Login';\nimport PageRegister from './routes/PageRegister';\nimport PagePasswordReset from './routes/PagePasswordReset';\nimport PageConfirmEmail from './routes/PageConfirmEmail';\nimport { PrivateRoute, PublicRoute } from 'components/PrivateRoute';\nimport queryString from 'query-string';\n\nvar PageAuthLayout =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PageAuthLayout, _React$Component);\n\n  function PageAuthLayout() {\n    _classCallCheck(this, PageAuthLayout);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PageAuthLayout).apply(this, arguments));\n  }\n\n  _createClass(PageAuthLayout, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var values = queryString.parse(this.props.location.search, {\n        ignoreQueryPrefix: true\n      });\n      return React.createElement(\"div\", {\n        className: 'PageAuth',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(PublicRoute, {\n        exact: true,\n        path: \"/login\",\n        component: PageLogin,\n        loginUser: this.props.loginUser,\n        title: \"Log In\",\n        isLoggedIn: this.props.isLoggedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }), React.createElement(PublicRoute, Object.assign({}, this.props, {\n        exact: true,\n        path: \"/register\",\n        component: PageRegister,\n        isLoggedIn: this.props.isLoggedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      })), React.createElement(PrivateRoute, Object.assign({}, this.props, {\n        exact: true,\n        path: \"/app\",\n        component: PageConfirmEmail,\n        isLoggedIn: this.props.isLoggedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      })), React.createElement(Route, {\n        path: \"/(auth|reset)\",\n        render: function render() {\n          if (values.mode === 'verifyEmail') {\n            // <PrivateRoute\n            //   {...this.props}\n            //   path=\"/auth\"\n            //   component={PageConfirmEmail}\n            //   isLoggedIn={\n            //     this.props.isLoggedIn && !this.props.emailVerified\n            //   }\n            //   oobCode={values.oobCode}\n            // />\n            return React.createElement(Route, {\n              path: \"/auth\",\n              render: function render() {\n                return React.createElement(PageConfirmEmail, Object.assign({}, _this.props, {\n                  oobCode: values.oobCode,\n                  isLoggedIn: _this.props.isLoggedIn // && !this.props.emailVerified\n                  ,\n                  emailVerified: _this.props.emailVerified,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 60\n                  },\n                  __self: this\n                }));\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 56\n              },\n              __self: this\n            });\n          } else {\n            //else if (values.mode === \"resetPassword\"){\n            return React.createElement(PublicRoute, Object.assign({}, _this.props, {\n              path: \"/(auth|reset)\",\n              component: PagePasswordReset,\n              isLoggedIn: _this.props.isLoggedIn,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 75\n              },\n              __self: this\n            }));\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return PageAuthLayout;\n}(React.Component);\n\nexport default PageAuthLayout;","map":{"version":3,"sources":["/Users/melissa/datamatch/src/pages/PageAuth/layout.js"],"names":["React","Route","Switch","PageLogin","PageRegister","PagePasswordReset","PageConfirmEmail","PrivateRoute","PublicRoute","queryString","PageAuthLayout","values","parse","props","location","search","ignoreQueryPrefix","loginUser","isLoggedIn","mode","oobCode","emailVerified","Component"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AAEA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AAEA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,yBAA1C;AACA,OAAOC,WAAP,MAAwB,cAAxB;;IAEMC,c;;;;;;;;;;;;;6BACK;AAAA;;AACP,UAAIC,MAAM,GAAGF,WAAW,CAACG,KAAZ,CAAkB,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,MAAtC,EAA8C;AACzDC,QAAAA,iBAAiB,EAAE;AADsC,OAA9C,CAAb;AAGA,aACE;AAAK,QAAA,SAAS,EAAE,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,SAAS,EAAEb,SAHb;AAIE,QAAA,SAAS,EAAE,KAAKU,KAAL,CAAWI,SAJxB;AAKE,QAAA,KAAK,EAAC,QALR;AAME,QAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWK,UANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EASE,oBAAC,WAAD,oBACM,KAAKL,KADX;AAEE,QAAA,KAAK,MAFP;AAGE,QAAA,IAAI,EAAC,WAHP;AAIE,QAAA,SAAS,EAAET,YAJb;AAKE,QAAA,UAAU,EAAE,KAAKS,KAAL,CAAWK,UALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SATF,EAgBE,oBAAC,YAAD,oBACM,KAAKL,KADX;AAEE,QAAA,KAAK,MAFP;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,SAAS,EAAEP,gBAJb;AAKE,QAAA,UAAU,EAAE,KAAKO,KAAL,CAAWK,UALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAhBF,EAuBE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,eADP;AAEE,QAAA,MAAM,EAAE,kBAAM;AACZ,cAAIP,MAAM,CAACQ,IAAP,KAAgB,aAApB,EAAmC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBACE,oBAAC,KAAD;AACE,cAAA,IAAI,EAAC,OADP;AAEE,cAAA,MAAM,EAAE,kBAAM;AACZ,uBACE,oBAAC,gBAAD,oBACM,KAAI,CAACN,KADX;AAEE,kBAAA,OAAO,EAAEF,MAAM,CAACS,OAFlB;AAGE,kBAAA,UAAU,EACR,KAAI,CAACP,KAAL,CAAWK,UADH,CACc;AAJ1B;AAME,kBAAA,aAAa,EAAE,KAAI,CAACL,KAAL,CAAWQ,aAN5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF;AAUD,eAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAiBD,WA3BD,MA2BO;AACL;AACA,mBACE,oBAAC,WAAD,oBACM,KAAI,CAACR,KADX;AAEE,cAAA,IAAI,EAAC,eAFP;AAGE,cAAA,SAAS,EAAER,iBAHb;AAIE,cAAA,UAAU,EAAE,KAAI,CAACQ,KAAL,CAAWK,UAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF;AAQD;AACF,SAzCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAvBF,CADF,CADF;AAuED;;;;EA5E0BlB,KAAK,CAACsB,S;;AA+EnC,eAAeZ,cAAf","sourcesContent":["import * as React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport PageLogin from 'components/Login';\nimport PageRegister from './routes/PageRegister';\nimport PagePasswordReset from './routes/PagePasswordReset';\nimport PageConfirmEmail from './routes/PageConfirmEmail';\n\nimport { PrivateRoute, PublicRoute } from 'components/PrivateRoute';\nimport queryString from 'query-string';\n\nclass PageAuthLayout extends React.Component {\n  render() {\n    let values = queryString.parse(this.props.location.search, {\n      ignoreQueryPrefix: true,\n    });\n    return (\n      <div className={'PageAuth'}>\n        <Switch>\n          <PublicRoute\n            exact\n            path=\"/login\"\n            component={PageLogin}\n            loginUser={this.props.loginUser}\n            title=\"Log In\"\n            isLoggedIn={this.props.isLoggedIn}\n          />\n          <PublicRoute\n            {...this.props}\n            exact\n            path=\"/register\"\n            component={PageRegister}\n            isLoggedIn={this.props.isLoggedIn}\n          />\n          <PrivateRoute\n            {...this.props}\n            exact\n            path=\"/app\"\n            component={PageConfirmEmail}\n            isLoggedIn={this.props.isLoggedIn}\n          />\n          <Route\n            path=\"/(auth|reset)\"\n            render={() => {\n              if (values.mode === 'verifyEmail') {\n                // <PrivateRoute\n                //   {...this.props}\n                //   path=\"/auth\"\n                //   component={PageConfirmEmail}\n                //   isLoggedIn={\n                //     this.props.isLoggedIn && !this.props.emailVerified\n                //   }\n                //   oobCode={values.oobCode}\n                // />\n                return (\n                  <Route\n                    path=\"/auth\"\n                    render={() => {\n                      return (\n                        <PageConfirmEmail\n                          {...this.props}\n                          oobCode={values.oobCode}\n                          isLoggedIn={\n                            this.props.isLoggedIn // && !this.props.emailVerified\n                          }\n                          emailVerified={this.props.emailVerified}\n                        />\n                      );\n                    }}\n                  />\n                );\n              } else {\n                //else if (values.mode === \"resetPassword\"){\n                return (\n                  <PublicRoute\n                    {...this.props}\n                    path=\"/(auth|reset)\"\n                    component={PagePasswordReset}\n                    isLoggedIn={this.props.isLoggedIn}\n                  />\n                );\n              }\n            }}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default PageAuthLayout;\n"]},"metadata":{},"sourceType":"module"}