{"ast":null,"code":"import _regeneratorRuntime from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/melissa/datamatch/src/pages/PageSettings.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  button {\\n    width: 300px;\\n  }\\n\\n  .Box {\\n    padding: 20px;\\n    border: 1px solid #f3f3f3;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsx jsx **/\nimport { Component } from 'react';\nimport { jsx, css } from '@emotion/core';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport Modal from 'react-bootstrap/Modal';\nimport Header from 'components/Header';\nimport Input from 'components/Input';\nimport PasswordReset from 'components/PasswordReset';\nvar pageSettingsStyle = css(_templateObject());\n\nvar PageSettings =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PageSettings, _Component);\n\n  function PageSettings(props) {\n    var _this;\n\n    _classCallCheck(this, PageSettings);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PageSettings).call(this, props));\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.onClick = function _callee(providerId) {\n      var _this$props, auth, firebase, currentUser, provider, credential;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(providerId === 'password')) {\n                _context.next = 4;\n                break;\n              }\n\n              _this.setState({\n                show: true\n              });\n\n              _context.next = 11;\n              break;\n\n            case 4:\n              if (!(providerId === 'google.com')) {\n                _context.next = 11;\n                break;\n              }\n\n              _this$props = _this.props, auth = _this$props.auth, firebase = _this$props.firebase;\n              currentUser = auth().currentUser;\n              provider = new firebase.auth.GoogleAuthProvider();\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(auth().signInWithPopup(provider).then(function (result) {\n                credential = result.credential;\n              }).catch(function () {\n                return alert('Reauthentication failed.');\n              }));\n\n            case 10:\n              // reauthenticate with credential\n              currentUser.reauthenticateWithCredential(credential).then(function () {\n                return _this.setState({\n                  show: true\n                });\n              }).catch(function () {\n                return alert('Reauthentication failed.');\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.deleteUser = function _callee2(providerId) {\n      var _this$props2, deleteUser, reauthenticate;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$props2 = _this.props, deleteUser = _this$props2.deleteUser, reauthenticate = _this$props2.reauthenticate;\n\n              if (providerId === 'password') {\n                reauthenticate(_this.state.password).then(function () {\n                  deleteUser();\n                  alert('Account Deleted :(');\n                }).catch(function () {\n                  alert('Incorrect password');\n\n                  _this.setState({\n                    password: ''\n                  });\n                });\n              } else if (providerId === 'google.com') {\n                deleteUser();\n                alert('Account Deleted :(');\n              }\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    _this.state = {\n      password: '',\n      show: false\n    };\n    return _this;\n  }\n\n  _createClass(PageSettings, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          auth = _this$props3.auth,\n          email = _this$props3.email,\n          reauthenticate = _this$props3.reauthenticate,\n          resetPassword = _this$props3.resetPassword;\n      var _this$state = this.state,\n          password = _this$state.password,\n          show = _this$state.show;\n      var currentUser = auth().currentUser;\n      var providerId = currentUser.providerData[0].providerId;\n      return jsx(\"div\", {\n        className: \"PageSettings\",\n        css: pageSettingsStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, jsx(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"SETTINGS\"), jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), jsx(\"div\", {\n        className: \"Box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, jsx(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Email\"), jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, email)), providerId === 'password' && jsx(PasswordReset, {\n        auth: auth,\n        reauthenticate: reauthenticate,\n        resetPassword: resetPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })), jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), jsx(\"div\", {\n        className: \"Box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, jsx(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Delete Account\"), jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), jsx(\"button\", {\n        onClick: function onClick() {\n          return _this2.onClick(providerId);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Delete Your Account\")), jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), jsx(Modal, {\n        onHide: function onHide() {\n          return _this2.setState({\n            show: false\n          });\n        },\n        show: show,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, jsx(Modal.Body, {\n        style: {\n          textAlign: 'center',\n          padding: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, jsx(\"div\", {\n        style: {\n          fontSize: 22\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Are you sure you want to delete your account? You will lose your survey results and matches.\"), jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), providerId === 'password' ? jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, jsx(Input, {\n        handleInputChange: this.handleInputChange,\n        name: \"password\",\n        placeholder: \"Confirm your password to delete account\",\n        type: \"password\",\n        value: password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })) : null, jsx(\"button\", {\n        onClick: function onClick() {\n          return _this2.deleteUser(providerId);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"I'm sure. Delete my account.\"), jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), jsx(\"div\", {\n        onClick: function onClick() {\n          return _this2.setState({\n            show: false,\n            password: ''\n          });\n        },\n        style: {\n          cursor: 'pointer'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Just kidding!\"))));\n    }\n  }]);\n\n  return PageSettings;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, props) {\n  var _props$firebase = props.firebase,\n      auth = _props$firebase.auth,\n      logout = _props$firebase.logout,\n      ref = _props$firebase.ref,\n      resetPassword = _props$firebase.resetPassword;\n  var _state$firebase$auth = state.firebase.auth,\n      email = _state$firebase$auth.email,\n      uid = _state$firebase$auth.uid;\n  var user = auth().currentUser;\n  return {\n    auth: auth,\n    deleteUser: function deleteUser() {\n      ref(\"/users/\".concat(uid)).remove();\n      user.delete();\n      logout();\n    },\n    email: email,\n    profile: state.firebase.profile,\n    reauthenticate: function reauthenticate(password) {\n      var credential = auth.EmailAuthProvider.credential(email, password);\n      return user.reauthenticateWithCredential(credential);\n    },\n    resetPassword: resetPassword\n  };\n};\n\nexport default compose(firebaseConnect(), connect(mapStateToProps))(PageSettings);","map":{"version":3,"sources":["/Users/melissa/datamatch/src/pages/PageSettings.js"],"names":["Component","jsx","css","connect","compose","firebaseConnect","Modal","Header","Input","PasswordReset","pageSettingsStyle","PageSettings","props","handleInputChange","event","target","name","value","setState","onClick","providerId","show","auth","firebase","currentUser","provider","GoogleAuthProvider","signInWithPopup","then","result","credential","catch","alert","reauthenticateWithCredential","deleteUser","reauthenticate","state","password","email","resetPassword","providerData","textAlign","padding","fontSize","cursor","mapStateToProps","logout","ref","uid","user","remove","delete","profile","EmailAuthProvider"],"mappings":"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","sourcesContent":["/** @jsx jsx **/\n\nimport { Component } from 'react';\nimport { jsx, css } from '@emotion/core';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport Modal from 'react-bootstrap/Modal';\n\nimport Header from 'components/Header';\nimport Input from 'components/Input';\nimport PasswordReset from 'components/PasswordReset';\n\nconst pageSettingsStyle = css`\n  button {\n    width: 300px;\n  }\n\n  .Box {\n    padding: 20px;\n    border: 1px solid #f3f3f3;\n  }\n`;\n\nclass PageSettings extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      password: '',\n      show: false,\n    };\n  }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  onClick = async providerId => {\n    if (providerId === 'password') {\n      this.setState({ show: true });\n    } else if (providerId === 'google.com') {\n      const { auth, firebase } = this.props;\n      const currentUser = auth().currentUser;\n      const provider = new firebase.auth.GoogleAuthProvider();\n      let credential;\n\n      // get credentials\n      await auth()\n        .signInWithPopup(provider)\n        .then(result => {\n          credential = result.credential;\n        })\n        .catch(() => alert('Reauthentication failed.'));\n\n      // reauthenticate with credential\n      currentUser\n        .reauthenticateWithCredential(credential)\n        .then(() => this.setState({ show: true }))\n        .catch(() => alert('Reauthentication failed.'));\n    }\n  };\n\n  deleteUser = async providerId => {\n    const { deleteUser, reauthenticate } = this.props;\n    if (providerId === 'password') {\n      reauthenticate(this.state.password)\n        .then(() => {\n          deleteUser();\n          alert('Account Deleted :(');\n        })\n        .catch(() => {\n          alert('Incorrect password');\n          this.setState({ password: '' });\n        });\n    } else if (providerId === 'google.com') {\n      deleteUser();\n      alert('Account Deleted :(');\n    }\n  };\n\n  render() {\n    const { auth, email, reauthenticate, resetPassword } = this.props;\n    const { password, show } = this.state;\n    const currentUser = auth().currentUser;\n    const providerId = currentUser.providerData[0].providerId;\n\n    return (\n      <div className=\"PageSettings\" css={pageSettingsStyle}>\n        <Header>SETTINGS</Header>\n        <br />\n        <div className=\"Box\">\n          <div>\n            <h5>Email</h5>\n            <div>{email}</div>\n          </div>\n          {providerId === 'password' && (\n            <PasswordReset\n              auth={auth}\n              reauthenticate={reauthenticate}\n              resetPassword={resetPassword}\n            />\n          )}\n        </div>\n        <br />\n        <div className=\"Box\">\n          <h5>Delete Account</h5>\n          <br />\n          <button onClick={() => this.onClick(providerId)}>\n            Delete Your Account\n          </button>\n        </div>\n        <br />\n\n        <Modal onHide={() => this.setState({ show: false })} show={show}>\n          <Modal.Body style={{ textAlign: 'center', padding: 40 }}>\n            <div style={{ fontSize: 22 }}>\n              Are you sure you want to delete your account? You will lose your\n              survey results and matches.\n            </div>\n            <br />\n            <br />\n            {providerId === 'password' ? (\n              <div>\n                <Input\n                  handleInputChange={this.handleInputChange}\n                  name=\"password\"\n                  placeholder=\"Confirm your password to delete account\"\n                  type=\"password\"\n                  value={password}\n                />\n                <br />\n              </div>\n            ) : null}\n            <button onClick={() => this.deleteUser(providerId)}>\n              I'm sure. Delete my account.\n            </button>\n            <br />\n            <br />\n            <div\n              onClick={() => this.setState({ show: false, password: '' })}\n              style={{ cursor: 'pointer' }}\n            >\n              Just kidding!\n            </div>\n          </Modal.Body>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  const { auth, logout, ref, resetPassword } = props.firebase;\n  const { email, uid } = state.firebase.auth;\n  const user = auth().currentUser;\n\n  return {\n    auth,\n    deleteUser: () => {\n      ref(`/users/${uid}`).remove();\n      user.delete();\n      logout();\n    },\n    email,\n    profile: state.firebase.profile,\n    reauthenticate: password => {\n      const credential = auth.EmailAuthProvider.credential(email, password);\n      return user.reauthenticateWithCredential(credential);\n    },\n    resetPassword,\n  };\n};\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps),\n)(PageSettings);\n"]},"metadata":{},"sourceType":"module"}