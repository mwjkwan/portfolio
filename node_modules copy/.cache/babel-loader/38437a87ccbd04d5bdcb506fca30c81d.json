{"ast":null,"code":"import _regeneratorRuntime from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/melissa/datamatch/src/pages/PageAdmin/index.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, compose } from 'redux';\nimport { finishOnboard } from 'store/actions/main_actions';\nimport { firestoreConnect, firebaseConnect } from 'react-redux-firebase';\nimport PageAdminLayout from './layout';\nimport { isLoaded, isEmpty } from 'react-redux-firebase';\nimport './styles.scss';\n\nvar PageAdmin =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PageAdmin, _Component);\n\n  function PageAdmin() {\n    _classCallCheck(this, PageAdmin);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PageAdmin).apply(this, arguments));\n  }\n\n  _createClass(PageAdmin, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// document.body.style.background = 'white';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!isLoaded(this.props.surveys)) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n\n      return React.createElement(PageAdminLayout, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PageAdmin;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, props) {\n  return {\n    // surveys: state.firestore.data.surveys,\n    surveys: state.firebase.data.surveys,\n    settings: props.settings,\n    updateSettings: function updateSettings(data) {\n      props.firestore.update({\n        collection: 'settings',\n        doc: 'config'\n      }, data); // props.firestore.update(\"\")\n    },\n    updateSurvey: function updateSurvey(survey, data) {\n      // props.firestore.update(\n      //   {\n      //     collection: 'surveys',\n      //     doc: survey,\n      //   },\n      //   data\n      // );\n      props.firebase.update('surveys/' + survey, data);\n    },\n    addSurvey: function addSurvey() {\n      var newRef;\n      return _regeneratorRuntime.async(function addSurvey$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(props.firebase.push('surveys', {\n                name: '',\n                questions: {}\n              }));\n\n            case 2:\n              newRef = _context.sent;\n              return _context.abrupt(\"return\", newRef.key);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    },\n    deleteSurvey: function deleteSurvey(survey) {\n      return _regeneratorRuntime.async(function deleteSurvey$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // props.firestore.delete({\n              //   collection: 'surveys',\n              //   doc: survey,\n              // });\n              props.firebase.remove('surveys/' + survey);\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    }\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({}, dispatch);\n}\n\nexport default compose(withRouter, firebaseConnect(function (props) {\n  return [{\n    path: '/surveys'\n  }];\n}), firestoreConnect(), connect(mapStateToProps, mapDispatchToProps))(PageAdmin);","map":{"version":3,"sources":["/Users/melissa/datamatch/src/pages/PageAdmin/index.js"],"names":["React","Component","withRouter","connect","bindActionCreators","compose","finishOnboard","firestoreConnect","firebaseConnect","PageAdminLayout","isLoaded","isEmpty","PageAdmin","props","surveys","mapStateToProps","state","firebase","data","settings","updateSettings","firestore","update","collection","doc","updateSurvey","survey","addSurvey","push","name","questions","newRef","key","deleteSurvey","remove","mapDispatchToProps","dispatch","path"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,EAA6BC,OAA7B,QAA4C,OAA5C;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,SAASC,gBAAT,EAA2BC,eAA3B,QAAkD,sBAAlD;AACA,OAAOC,eAAP,MAA4B,UAA5B;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,sBAAlC;AACA,OAAO,eAAP;;IAEMC,S;;;;;;;;;;;;;wCACgB,CAClB;AACD;;;6BAEQ;AACP,UAAI,CAACF,QAAQ,CAAC,KAAKG,KAAL,CAAWC,OAAZ,CAAb,EAAmC;AACjC,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD;;AAED,aAAO,oBAAC,eAAD,oBAAqB,KAAKD,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;;EAXqBZ,S;;AAcxB,IAAMc,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQH,KAAR,EAAkB;AACxC,SAAO;AACL;AACAC,IAAAA,OAAO,EAAEE,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBJ,OAFxB;AAGLK,IAAAA,QAAQ,EAAEN,KAAK,CAACM,QAHX;AAILC,IAAAA,cAAc,EAAE,wBAAAF,IAAI,EAAI;AACtBL,MAAAA,KAAK,CAACQ,SAAN,CAAgBC,MAAhB,CACE;AACEC,QAAAA,UAAU,EAAE,UADd;AAEEC,QAAAA,GAAG,EAAE;AAFP,OADF,EAKEN,IALF,EADsB,CAQtB;AACD,KAbI;AAcLO,IAAAA,YAAY,EAAE,sBAACC,MAAD,EAASR,IAAT,EAAkB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACAL,MAAAA,KAAK,CAACI,QAAN,CAAeK,MAAf,CAAsB,aAAaI,MAAnC,EAA2CR,IAA3C;AACD,KAvBI;AAwBLS,IAAAA,SAAS,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CASUd,KAAK,CAACI,QAAN,CAAeW,IAAf,CAAoB,SAApB,EAA+B;AAChDC,gBAAAA,IAAI,EAAE,EAD0C;AAEhDC,gBAAAA,SAAS,EAAE;AAFqC,eAA/B,CATV;;AAAA;AASLC,cAAAA,MATK;AAAA,+CAcFA,MAAM,CAACC,GAdL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAxBN;AAwCLC,IAAAA,YAAY,EAAE,sBAAMP,MAAN;AAAA;AAAA;AAAA;AAAA;AACZ;AACA;AACA;AACA;AACAb,cAAAA,KAAK,CAACI,QAAN,CAAeiB,MAAf,CAAsB,aAAaR,MAAnC;;AALY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAxCT,GAAP;AAgDD,CAjDD;;AAmDA,SAASS,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAOhC,kBAAkB,CAAC,EAAD,EAAKgC,QAAL,CAAzB;AACD;;AAED,eAAe/B,OAAO,CACpBH,UADoB,EAEpBM,eAAe,CAAC,UAAAK,KAAK;AAAA,SAAI,CACvB;AACEwB,IAAAA,IAAI,EAAE;AADR,GADuB,CAAJ;AAAA,CAAN,CAFK,EAOpB9B,gBAAgB,EAPI,EAYpBJ,OAAO,CAACY,eAAD,EAAkBoB,kBAAlB,CAZa,CAAP,CAabvB,SAba,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, compose } from 'redux';\nimport { finishOnboard } from 'store/actions/main_actions';\nimport { firestoreConnect, firebaseConnect } from 'react-redux-firebase';\nimport PageAdminLayout from './layout';\nimport { isLoaded, isEmpty } from 'react-redux-firebase';\nimport './styles.scss';\n\nclass PageAdmin extends Component {\n  componentDidMount() {\n    // document.body.style.background = 'white';\n  }\n\n  render() {\n    if (!isLoaded(this.props.surveys)) {\n      return <div>Loading...</div>;\n    }\n\n    return <PageAdminLayout {...this.props} />;\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n    // surveys: state.firestore.data.surveys,\n    surveys: state.firebase.data.surveys,\n    settings: props.settings,\n    updateSettings: data => {\n      props.firestore.update(\n        {\n          collection: 'settings',\n          doc: 'config',\n        },\n        data,\n      );\n      // props.firestore.update(\"\")\n    },\n    updateSurvey: (survey, data) => {\n      // props.firestore.update(\n      //   {\n      //     collection: 'surveys',\n      //     doc: survey,\n      //   },\n      //   data\n      // );\n      props.firebase.update('surveys/' + survey, data);\n    },\n    addSurvey: async () => {\n      // var newRef = await props.firestore.add(\n      //   {\n      //     collection: 'surveys',\n      //   },\n      //   { name: '', questions: {} }\n      // );\n\n      // return newRef.id;\n      var newRef = await props.firebase.push('surveys', {\n        name: '',\n        questions: {},\n      });\n\n      return newRef.key;\n    },\n    deleteSurvey: async survey => {\n      // props.firestore.delete({\n      //   collection: 'surveys',\n      //   doc: survey,\n      // });\n      props.firebase.remove('surveys/' + survey);\n    },\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({}, dispatch);\n}\n\nexport default compose(\n  withRouter,\n  firebaseConnect(props => [\n    {\n      path: '/surveys',\n    },\n  ]),\n  firestoreConnect(/*props => [\n    {\n      collection: 'surveys',\n    },\n  ]*/),\n  connect(mapStateToProps, mapDispatchToProps),\n)(PageAdmin);\n"]},"metadata":{},"sourceType":"module"}