{"ast":null,"code":"import _classCallCheck from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/melissa/datamatch/src/components/MatchView.js\";\nimport React, { Component } from 'react';\n\nvar MatchView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MatchView, _Component);\n\n  function MatchView(props) {\n    var _this;\n\n    _classCallCheck(this, MatchView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MatchView).call(this, props));\n\n    _this.onClick = function () {\n      _this.setState({\n        matched: true\n      });\n\n      _this.props.matchOnClick();\n    };\n\n    _this.state = {\n      matched: props.matched\n    };\n    return _this;\n  }\n\n  _createClass(MatchView, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          canDate = _this$props.canDate,\n          canDateOnClick = _this$props.canDateOnClick,\n          compatibility = _this$props.compatibility,\n          counter = _this$props.counter,\n          description = _this$props.description,\n          dorm = _this$props.dorm,\n          email = _this$props.email,\n          email_to_college = _this$props.email_to_college,\n          name = _this$props.name,\n          profile_pic = _this$props.profile_pic,\n          year = _this$props.year;\n      var matched = this.state.matched;\n      var emailSuffix = email.split('@')[1];\n      var school = email_to_college[emailSuffix];\n      return React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          marginBottom: 30,\n          maxWidth: 600,\n          position: 'relative'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"profile\",\n        src: profile_pic || require('assets/empty.png'),\n        style: {\n          width: 125,\n          height: 125,\n          objectFit: 'cover',\n          minWidth: 125,\n          background: \"url(\".concat(require('assets/loading.svg'), \")\"),\n          backgroundSize: 'contain',\n          backgroundRepeat: 'no-repeat',\n          backgroundPosition: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"basics\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, !compatibility ? \"\".concat(school.toUpperCase(), \", \").concat(year.toUpperCase(), \", \").concat(dorm.toUpperCase()) : \"\".concat(school.toUpperCase(), \", \").concat(year.toUpperCase(), \", \").concat(dorm.toUpperCase(), \", \").concat(compatibility, \"%\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, !compatibility ? name : \"\".concat(counter, \". \").concat(name))), React.createElement(\"div\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, description), !canDate ? React.createElement(\"button\", {\n        id: matched ? 'see-match' : 'match',\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, matched ? 'SEE MATCH' : 'MATCH') : React.createElement(\"button\", {\n        onClick: canDateOnClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"SCHEDULE FREE DATE\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MatchView;\n}(Component);\n\nexport { MatchView as default };","map":{"version":3,"sources":["/Users/melissa/datamatch/src/components/MatchView.js"],"names":["React","Component","MatchView","props","onClick","setState","matched","matchOnClick","state","canDate","canDateOnClick","compatibility","counter","description","dorm","email","email_to_college","name","profile_pic","year","emailSuffix","split","school","display","marginBottom","maxWidth","position","require","width","height","objectFit","minWidth","background","backgroundSize","backgroundRepeat","backgroundPosition","toUpperCase"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nexport default class MatchView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { matched: props.matched };\n  }\n\n  onClick = () => {\n    this.setState({ matched: true });\n    this.props.matchOnClick();\n  };\n\n  render() {\n    const {\n      canDate,\n      canDateOnClick,\n      compatibility,\n      counter,\n      description,\n      dorm,\n      email,\n      email_to_college,\n      name,\n      profile_pic,\n      year,\n    } = this.props;\n    const { matched } = this.state;\n\n    const emailSuffix = email.split('@')[1];\n    const school = email_to_college[emailSuffix];\n\n    return (\n      <div\n        style={{\n          display: 'flex',\n          marginBottom: 30,\n          maxWidth: 600,\n          position: 'relative',\n        }}\n      >\n        <img\n          alt=\"profile\"\n          src={profile_pic || require('assets/empty.png')}\n          style={{\n            width: 125,\n            height: 125,\n            objectFit: 'cover',\n            minWidth: 125,\n            background: `url(${require('assets/loading.svg')})`,\n            backgroundSize: 'contain',\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n          }}\n        />\n        <div className=\"info\">\n          <div className=\"basics\">\n            {!compatibility\n              ? `${school.toUpperCase()}, ${year.toUpperCase()}, ${dorm.toUpperCase()}`\n              : `${school.toUpperCase()}, ${year.toUpperCase()}, ${dorm.toUpperCase()}, ${compatibility}%`}\n            <br />\n            <div className=\"name\">\n              {!compatibility ? name : `${counter}. ${name}`}\n            </div>\n            {/* <div className=\"icons\">\n          <Link\n            id=\"facebook\"\n            to={this.props.to ? this.props.to : '/'}\n          >\n            <img\n              src={require('assets/facebook.png')}\n              style={{ width: '31px', height: '31px' }}\n            />\n          </Link>\n          <Link id=\"spotify\" to={this.props.to ? this.props.to : '/'}>\n            <img\n              src={require('assets/spotify.png')}\n              style={{ width: '35px', height: '35px' }}\n            />\n          </Link>\n        </div> */}\n          </div>\n          <div className=\"description\">{description}</div>\n          {!canDate ? (\n            <button id={matched ? 'see-match' : 'match'} onClick={this.onClick}>\n              {matched ? 'SEE MATCH' : 'MATCH'}\n            </button>\n          ) : (\n            <button onClick={canDateOnClick}>SCHEDULE FREE DATE</button>\n          )}\n        </div>\n        <br />\n        <br />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}