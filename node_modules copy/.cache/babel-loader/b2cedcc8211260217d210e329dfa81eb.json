{"ast":null,"code":"import _regeneratorRuntime from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/melissa/datamatch/src/pages/RestaurantPortal/CheckIn.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  font-weight: bold;\\n\\n  .conf-container {\\n    margin: 20px auto;\\n  }\\n\\n  button {\\n    max-width: 106px;\\n    height: 33px;\\n    background: #545353;\\n    font-weight: bold;\\n    font-size: 18px;\\n    line-height: 22px;\\n    letter-spacing: 0.05em;\\n  }\\n\\n  input {\\n    max-width: 359px;\\n    height: 40px;\\n    border: none;\\n    background: #f4f2f2;\\n    font-family: 'Apercu-light';\\n    display: flex;\\n    align-items: center;\\n    letter-spacing: 0.05em;\\n\\n    color: #545353;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsx jsx **/\nimport { Component } from 'react';\nimport { jsx, css } from '@emotion/core';\nimport Input from 'components/Input';\nimport ConfirmationBox from './components/ConfirmationBox';\nimport Header from 'components/Header';\nvar checkInStyle = css(_templateObject());\n\nvar CheckIn =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CheckIn, _Component);\n\n  function CheckIn(props) {\n    var _this;\n\n    _classCallCheck(this, CheckIn);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CheckIn).call(this, props));\n\n    _this.handleInputChange = function (event) {\n      var code = event.target.value;\n\n      _this.setState({\n        code: code,\n        display: false,\n        errorMessage: '',\n        valid: null\n      });\n    };\n\n    _this.onClick = function _callee() {\n      var code, today, day, codeSnapshot, codeValue, claimed, dateId, dateSnapshot, date;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              code = _this.state.code;\n\n              if (!(code === '')) {\n                _context.next = 4;\n                break;\n              }\n\n              _this.setState({\n                valid: false,\n                display: true,\n                errorMessage: 'Please enter a confirmation code.'\n              });\n\n              return _context.abrupt(\"return\");\n\n            case 4:\n              today = new Date(new Date().toLocaleString('en-US', {\n                timeZone: 'America/New_York'\n              }));\n              day = today.getMonth() + 1 + '/' + today.getDate();\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(_this.props.firebase.ref('codes').child(code).once('value'));\n\n            case 8:\n              codeSnapshot = _context.sent;\n              codeValue = codeSnapshot.val();\n\n              if (codeValue) {\n                _context.next = 13;\n                break;\n              }\n\n              _this.setState({\n                valid: false,\n                display: true,\n                errorMessage: code + ' is an invalid code.'\n              });\n\n              return _context.abrupt(\"return\");\n\n            case 13:\n              claimed = codeValue.claimed, dateId = codeValue.date;\n\n              if (!claimed) {\n                _context.next = 17;\n                break;\n              }\n\n              _this.setState({\n                valid: false,\n                display: true,\n                errorMessage: \"\".concat(code, \" has been checked-in already.\")\n              });\n\n              return _context.abrupt(\"return\");\n\n            case 17:\n              _context.next = 19;\n              return _regeneratorRuntime.awrap(_this.props.firebase.ref('dates').child(dateId).once('value'));\n\n            case 19:\n              dateSnapshot = _context.sent;\n              date = dateSnapshot.val();\n\n              if (!(!date || date.place !== _this.props.restaurantInformation.name)) {\n                _context.next = 24;\n                break;\n              }\n\n              _this.setState({\n                valid: false,\n                display: true,\n                errorMessage: code + ' is an invalid code.'\n              });\n\n              return _context.abrupt(\"return\");\n\n            case 24:\n              if (!(date.day === day)) {\n                _context.next = 30;\n                break;\n              }\n\n              _context.next = 27;\n              return _regeneratorRuntime.awrap(_this.props.firebase.ref(\"/codes/\".concat(code)).update({\n                claimed: true\n              }));\n\n            case 27:\n              _this.setState({\n                valid: true,\n                display: true,\n                errorMessage: ''\n              });\n\n              _context.next = 31;\n              break;\n\n            case 30:\n              _this.setState({\n                valid: false,\n                display: true,\n                errorMessage: 'Wrong day! ' + code + ' is a valid code on ' + date.day + '.'\n              });\n\n            case 31:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.state = {\n      code: '',\n      display: false,\n      errorMessage: '',\n      valid: null\n    };\n    return _this;\n  }\n\n  _createClass(CheckIn, [{\n    key: \"render\",\n    value: function render() {\n      return jsx(\"div\", {\n        className: \"CheckIn\",\n        css: checkInStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, jsx(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"CHECK-IN\"), jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), jsx(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Please do not check a date in unless both people are physically present!\"), jsx(\"div\", {\n        className: \"conf-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, jsx(Input, {\n        handleInputChange: this.handleInputChange,\n        name: \"code\",\n        placeholder: \"ABC123\",\n        text: \"Type in confirmation code:\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), jsx(\"button\", {\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"\\u2714\\xA0Verify\")), jsx(ConfirmationBox, Object.assign({}, this.state, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      })), jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CheckIn;\n}(Component);\n\nexport { CheckIn as default };","map":{"version":3,"sources":["/Users/melissa/datamatch/src/pages/RestaurantPortal/CheckIn.js"],"names":["Component","jsx","css","Input","ConfirmationBox","Header","checkInStyle","CheckIn","props","handleInputChange","event","code","target","value","setState","display","errorMessage","valid","onClick","state","today","Date","toLocaleString","timeZone","day","getMonth","getDate","firebase","ref","child","once","codeSnapshot","codeValue","val","claimed","dateId","date","dateSnapshot","place","restaurantInformation","name","update"],"mappings":"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","sourcesContent":["/** @jsx jsx **/\n\nimport { Component } from 'react';\nimport { jsx, css } from '@emotion/core';\n\nimport Input from 'components/Input';\nimport ConfirmationBox from './components/ConfirmationBox';\nimport Header from 'components/Header';\n\nconst checkInStyle = css`\n  font-weight: bold;\n\n  .conf-container {\n    margin: 20px auto;\n  }\n\n  button {\n    max-width: 106px;\n    height: 33px;\n    background: #545353;\n    font-weight: bold;\n    font-size: 18px;\n    line-height: 22px;\n    letter-spacing: 0.05em;\n  }\n\n  input {\n    max-width: 359px;\n    height: 40px;\n    border: none;\n    background: #f4f2f2;\n    font-family: 'Apercu-light';\n    display: flex;\n    align-items: center;\n    letter-spacing: 0.05em;\n\n    color: #545353;\n  }\n`;\n\nexport default class CheckIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: '',\n      display: false,\n      errorMessage: '',\n      valid: null,\n    };\n  }\n\n  handleInputChange = event => {\n    const code = event.target.value;\n\n    this.setState({\n      code,\n      display: false,\n      errorMessage: '',\n      valid: null,\n    });\n  };\n\n  onClick = async () => {\n    const { code } = this.state;\n\n    if (code === '') {\n      this.setState({\n        valid: false,\n        display: true,\n        errorMessage: 'Please enter a confirmation code.',\n      });\n      return;\n    }\n\n    const today = new Date(\n      new Date().toLocaleString('en-US', {\n        timeZone: 'America/New_York',\n      }),\n    );\n\n    const day = today.getMonth() + 1 + '/' + today.getDate();\n\n    const codeSnapshot = await this.props.firebase\n      .ref('codes')\n      .child(code)\n      .once('value');\n\n    const codeValue = codeSnapshot.val();\n\n    if (!codeValue) {\n      this.setState({\n        valid: false,\n        display: true,\n        errorMessage: code + ' is an invalid code.',\n      });\n      return;\n    }\n\n    const { claimed, date: dateId } = codeValue;\n\n    if (claimed) {\n      this.setState({\n        valid: false,\n        display: true,\n        errorMessage: `${code} has been checked-in already.`,\n      });\n      return;\n    }\n\n    const dateSnapshot = await this.props.firebase\n      .ref('dates')\n      .child(dateId)\n      .once('value');\n\n    const date = dateSnapshot.val();\n\n    if (!date || date.place !== this.props.restaurantInformation.name) {\n      this.setState({\n        valid: false,\n        display: true,\n        errorMessage: code + ' is an invalid code.',\n      });\n      return;\n    }\n\n    if (date.day === day) {\n      await this.props.firebase.ref(`/codes/${code}`).update({ claimed: true });\n      this.setState({\n        valid: true,\n        display: true,\n        errorMessage: '',\n      });\n    } else {\n      this.setState({\n        valid: false,\n        display: true,\n        errorMessage:\n          'Wrong day! ' + code + ' is a valid code on ' + date.day + '.',\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"CheckIn\" css={checkInStyle}>\n        <Header>CHECK-IN</Header>\n        <br />\n        <b>Please do not check a date in unless both people are physically present!</b>\n\n        <div className=\"conf-container\">\n          <Input\n            handleInputChange={this.handleInputChange}\n            name=\"code\"\n            placeholder=\"ABC123\"\n            text=\"Type in confirmation code:\"\n            type=\"text\"\n          />\n\n          <br />\n\n          <button onClick={this.onClick}>&#10004;&nbsp;Verify</button>\n        </div>\n\n        <ConfirmationBox {...this.state} />\n\n        <br />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}