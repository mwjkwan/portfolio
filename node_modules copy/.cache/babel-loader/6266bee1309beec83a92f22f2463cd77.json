{"ast":null,"code":"import _defineProperty from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/melissa/datamatch/src/pages/PageSurvey/index.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport PageSurveyLayout from './layout';\nimport './styles.scss';\n\nvar PageSurvey =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PageSurvey, _Component);\n\n  function PageSurvey() {\n    _classCallCheck(this, PageSurvey);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PageSurvey).apply(this, arguments));\n  }\n\n  _createClass(PageSurvey, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(PageSurveyLayout, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PageSurvey;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, props) {\n  return {\n    updateResponse: function updateResponse(question_id, response_id) {\n      if (props.status === 'live-survey' || props.status === 'development') {\n        props.firebase.update('/responses/' + props.survey + '/' + props.uid, _defineProperty({}, question_id, response_id));\n      }\n    },\n    responses: state.firebase.data.responses,\n    responses_requested: state.firebase.requested.responses,\n    survey: state.firebase.data.survey\n  };\n};\n\nexport default compose(withRouter, firebaseConnect(function (props) {\n  return [{\n    path: '/surveys/' + props.survey,\n    storeAs: 'survey'\n  }, {\n    path: '/responses/' + props.survey + '/' + props.uid,\n    storeAs: 'responses'\n  }];\n}), connect(mapStateToProps))(PageSurvey);","map":{"version":3,"sources":["/Users/melissa/datamatch/src/pages/PageSurvey/index.js"],"names":["React","Component","withRouter","connect","compose","firebaseConnect","PageSurveyLayout","PageSurvey","props","mapStateToProps","state","updateResponse","question_id","response_id","status","firebase","update","survey","uid","responses","data","responses_requested","requested","path","storeAs"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,eAAT,QAAgC,sBAAhC;AACA,OAAOC,gBAAP,MAA6B,UAA7B;AACA,OAAO,eAAP;;IAEMC,U;;;;;;;;;;;;;6BACK;AACP,aAAO,oBAAC,gBAAD,oBAAsB,KAAKC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;;EAHsBP,S;;AAMzB,IAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQF,KAAR,EAAkB;AACxC,SAAO;AACLG,IAAAA,cAAc,EAAE,wBAACC,WAAD,EAAcC,WAAd,EAA8B;AAC5C,UAAIL,KAAK,CAACM,MAAN,KAAiB,aAAjB,IAAkCN,KAAK,CAACM,MAAN,KAAiB,aAAvD,EAAsE;AACpEN,QAAAA,KAAK,CAACO,QAAN,CAAeC,MAAf,CAAsB,gBAAgBR,KAAK,CAACS,MAAtB,GAA+B,GAA/B,GAAqCT,KAAK,CAACU,GAAjE,sBACGN,WADH,EACiBC,WADjB;AAGD;AACF,KAPI;AAQLM,IAAAA,SAAS,EAAET,KAAK,CAACK,QAAN,CAAeK,IAAf,CAAoBD,SAR1B;AASLE,IAAAA,mBAAmB,EAAEX,KAAK,CAACK,QAAN,CAAeO,SAAf,CAAyBH,SATzC;AAULF,IAAAA,MAAM,EAAEP,KAAK,CAACK,QAAN,CAAeK,IAAf,CAAoBH;AAVvB,GAAP;AAYD,CAbD;;AAeA,eAAeb,OAAO,CACpBF,UADoB,EAEpBG,eAAe,CAAC,UAAAG,KAAK;AAAA,SAAI,CACvB;AACEe,IAAAA,IAAI,EAAE,cAAcf,KAAK,CAACS,MAD5B;AAEEO,IAAAA,OAAO,EAAE;AAFX,GADuB,EAKvB;AACED,IAAAA,IAAI,EAAE,gBAAgBf,KAAK,CAACS,MAAtB,GAA+B,GAA/B,GAAqCT,KAAK,CAACU,GADnD;AAEEM,IAAAA,OAAO,EAAE;AAFX,GALuB,CAAJ;AAAA,CAAN,CAFK,EAYpBrB,OAAO,CAACM,eAAD,CAZa,CAAP,CAabF,UAba,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport PageSurveyLayout from './layout';\nimport './styles.scss';\n\nclass PageSurvey extends Component {\n  render() {\n    return <PageSurveyLayout {...this.props} />;\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n    updateResponse: (question_id, response_id) => {\n      if (props.status === 'live-survey' || props.status === 'development') {\n        props.firebase.update('/responses/' + props.survey + '/' + props.uid, {\n          [question_id]: response_id,\n        });\n      }\n    },\n    responses: state.firebase.data.responses,\n    responses_requested: state.firebase.requested.responses,\n    survey: state.firebase.data.survey,\n  };\n};\n\nexport default compose(\n  withRouter,\n  firebaseConnect(props => [\n    {\n      path: '/surveys/' + props.survey,\n      storeAs: 'survey',\n    },\n    {\n      path: '/responses/' + props.survey + '/' + props.uid,\n      storeAs: 'responses',\n    },\n  ]),\n  connect(mapStateToProps),\n)(PageSurvey);\n"]},"metadata":{},"sourceType":"module"}