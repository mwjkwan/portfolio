{"ast":null,"code":"import _defineProperty from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/melissa/datamatch/src/pages/PageSettings/components/PasswordReset.js\";\nimport React, { Component } from 'react';\nimport Input from './Input';\n\nvar PageSettingsLayout =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PageSettingsLayout, _Component);\n\n  function PageSettingsLayout(props) {\n    var _this;\n\n    _classCallCheck(this, PageSettingsLayout);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PageSettingsLayout).call(this, props));\n\n    _this.handleInputChange = function (event) {\n      var target = event.target;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n      var name = target.name;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.state = {\n      resetPassword: false,\n      reset0: '',\n      reset1: '',\n      reset2: ''\n    };\n    return _this;\n  }\n\n  _createClass(PageSettingsLayout, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var works = this.state.reset0 && this.state.reset1 === this.state.reset2 && this.state.reset1.length > 6;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, this.props.email)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"button\", {\n        style: {\n          display: !this.state.resetPassword ? 'block' : 'none'\n        },\n        onClick: function onClick() {\n          _this2.setState(function (prevState) {\n            return {\n              resetPassword: !prevState.resetPassword\n            };\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, !this.state.resetPassword ? 'Reset Password' : '')), this.state.resetPassword && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Input, {\n        name: \"reset0\",\n        placeholder: \"old password\",\n        text: \"old password\",\n        type: \"password\",\n        value: this.state.reset0,\n        handleInputChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(Input, {\n        name: \"reset1\",\n        placeholder: \"new password\",\n        text: \"new password\",\n        type: \"password\",\n        value: this.state.reset1,\n        handleInputChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(Input, {\n        name: \"reset2\",\n        placeholder: \"new password (confirm)\",\n        text: \"new password (confirm)\",\n        type: \"password\",\n        value: this.state.reset2,\n        handleInputChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: function onClick() {\n          var auth = _this2.props.auth();\n\n          _this2.props.reauthenticate(_this2.state.reset0).then(function (data) {\n            auth.currentUser.updatePassword(_this2.state.reset1).then(function (data) {\n              alert('Password Reset!');\n\n              _this2.setState({\n                resetPassword: false,\n                reset1: '',\n                reset2: ''\n              });\n            }).catch(function (error) {\n              alert('PASSWORD RESET FAILED: ' + error.message);\n\n              _this2.setState({\n                resetPassword: false,\n                reset1: '',\n                reset2: ''\n              });\n            });\n          }).catch(function (error) {\n            alert('PASSWORD RESET FAILED ' + error.message);\n\n            _this2.setState({\n              resetPassword: false,\n              reset1: '',\n              reset2: ''\n            });\n          });\n        },\n        style: {\n          marginTop: 20,\n          opacity: works ? 1 : 0.8,\n          pointerEvents: works ? 'auto' : 'none',\n          marginBottom: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Confirm Password Change\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: function onClick() {\n          _this2.setState({\n            resetPassword: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, 'Cancel Reset')));\n    }\n  }]);\n\n  return PageSettingsLayout;\n}(Component);\n\nexport { PageSettingsLayout as default };","map":{"version":3,"sources":["/Users/melissa/datamatch/src/pages/PageSettings/components/PasswordReset.js"],"names":["React","Component","Input","PageSettingsLayout","props","handleInputChange","event","target","value","type","checked","name","setState","state","resetPassword","reset0","reset1","reset2","works","length","email","display","prevState","auth","reauthenticate","then","data","currentUser","updatePassword","alert","catch","error","message","marginTop","opacity","pointerEvents","marginBottom"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;IAEqBC,kB;;;;;AACnB,8BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,4FAAMA,KAAN;;AADiB,UAKnBC,iBALmB,GAKC,UAAAC,KAAK,EAAI;AAC3B,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,UAAMC,KAAK,GAAGD,MAAM,CAACE,IAAP,KAAgB,UAAhB,GAA6BF,MAAM,CAACG,OAApC,GAA8CH,MAAM,CAACC,KAAnE;AACA,UAAMG,IAAI,GAAGJ,MAAM,CAACI,IAApB;;AAEA,YAAKC,QAAL,qBACGD,IADH,EACUH,KADV;AAGD,KAbkB;;AAEjB,UAAKK,KAAL,GAAa;AAAEC,MAAAA,aAAa,EAAE,KAAjB;AAAwBC,MAAAA,MAAM,EAAE,EAAhC;AAAoCC,MAAAA,MAAM,EAAE,EAA5C;AAAgDC,MAAAA,MAAM,EAAE;AAAxD,KAAb;AAFiB;AAGlB;;;;6BAYQ;AAAA;;AACP,UAAIC,KAAK,GACP,KAAKL,KAAL,CAAWE,MAAX,IACA,KAAKF,KAAL,CAAWG,MAAX,KAAsB,KAAKH,KAAL,CAAWI,MADjC,IAEA,KAAKJ,KAAL,CAAWG,MAAX,CAAkBG,MAAlB,GAA2B,CAH7B;AAIA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKf,KAAL,CAAWgB,KAAjB,CAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE,CAAC,KAAKR,KAAL,CAAWC,aAAZ,GAA4B,OAA5B,GAAsC;AAAjD,SADT;AAEE,QAAA,OAAO,EAAE,mBAAM;AACb,UAAA,MAAI,CAACF,QAAL,CAAc,UAAAU,SAAS,EAAI;AACzB,mBAAO;AAAER,cAAAA,aAAa,EAAE,CAACQ,SAAS,CAACR;AAA5B,aAAP;AACD,WAFD;AAGD,SANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQG,CAAC,KAAKD,KAAL,CAAWC,aAAZ,GAA4B,gBAA5B,GAA+C,EARlD,CAFF,CANF,EAmBG,KAAKD,KAAL,CAAWC,aAAX,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,WAAW,EAAC,cAFd;AAGE,QAAA,IAAI,EAAC,cAHP;AAIE,QAAA,IAAI,EAAC,UAJP;AAKE,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,MALpB;AAME,QAAA,iBAAiB,EAAE,KAAKV,iBAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,EAUE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,WAAW,EAAC,cAFd;AAGE,QAAA,IAAI,EAAC,cAHP;AAIE,QAAA,IAAI,EAAC,UAJP;AAKE,QAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWG,MALpB;AAME,QAAA,iBAAiB,EAAE,KAAKX,iBAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBF,EAmBE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,WAAW,EAAC,wBAFd;AAGE,QAAA,IAAI,EAAC,wBAHP;AAIE,QAAA,IAAI,EAAC,UAJP;AAKE,QAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWI,MALpB;AAME,QAAA,iBAAiB,EAAE,KAAKZ,iBAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBF,EA2BE;AACE,QAAA,OAAO,EAAE,mBAAM;AACb,cAAIkB,IAAI,GAAG,MAAI,CAACnB,KAAL,CAAWmB,IAAX,EAAX;;AACA,UAAA,MAAI,CAACnB,KAAL,CACGoB,cADH,CACkB,MAAI,CAACX,KAAL,CAAWE,MAD7B,EAEGU,IAFH,CAEQ,UAAAC,IAAI,EAAI;AACZH,YAAAA,IAAI,CAACI,WAAL,CACGC,cADH,CACkB,MAAI,CAACf,KAAL,CAAWG,MAD7B,EAEGS,IAFH,CAEQ,UAAAC,IAAI,EAAI;AACZG,cAAAA,KAAK,CAAC,iBAAD,CAAL;;AACA,cAAA,MAAI,CAACjB,QAAL,CAAc;AACZE,gBAAAA,aAAa,EAAE,KADH;AAEZE,gBAAAA,MAAM,EAAE,EAFI;AAGZC,gBAAAA,MAAM,EAAE;AAHI,eAAd;AAKD,aATH,EAUGa,KAVH,CAUS,UAAAC,KAAK,EAAI;AACdF,cAAAA,KAAK,CAAC,4BAA4BE,KAAK,CAACC,OAAnC,CAAL;;AACA,cAAA,MAAI,CAACpB,QAAL,CAAc;AACZE,gBAAAA,aAAa,EAAE,KADH;AAEZE,gBAAAA,MAAM,EAAE,EAFI;AAGZC,gBAAAA,MAAM,EAAE;AAHI,eAAd;AAKD,aAjBH;AAkBD,WArBH,EAsBGa,KAtBH,CAsBS,UAAAC,KAAK,EAAI;AACdF,YAAAA,KAAK,CAAC,2BAA2BE,KAAK,CAACC,OAAlC,CAAL;;AACA,YAAA,MAAI,CAACpB,QAAL,CAAc;AACZE,cAAAA,aAAa,EAAE,KADH;AAEZE,cAAAA,MAAM,EAAE,EAFI;AAGZC,cAAAA,MAAM,EAAE;AAHI,aAAd;AAKD,WA7BH;AA8BD,SAjCH;AAkCE,QAAA,KAAK,EAAE;AACLgB,UAAAA,SAAS,EAAE,EADN;AAELC,UAAAA,OAAO,EAAEhB,KAAK,GAAG,CAAH,GAAO,GAFhB;AAGLiB,UAAAA,aAAa,EAAEjB,KAAK,GAAG,MAAH,GAAY,MAH3B;AAILkB,UAAAA,YAAY,EAAE;AAJT,SAlCT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCA3BF,EAsEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtEF,EAuEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAvEF,EAwEE;AACE,QAAA,OAAO,EAAE,mBAAM;AACb,UAAA,MAAI,CAACxB,QAAL,CAAc;AAAEE,YAAAA,aAAa,EAAE;AAAjB,WAAd;AACD,SAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKG,cALH,CAxEF,CApBJ,CADF;AAwGD;;;;EA7H6Cb,S;;SAA3BE,kB","sourcesContent":["import React, { Component } from 'react';\nimport Input from './Input';\n\nexport default class PageSettingsLayout extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { resetPassword: false, reset0: '', reset1: '', reset2: '' };\n  }\n\n  handleInputChange = event => {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    var works =\n      this.state.reset0 &&\n      this.state.reset1 === this.state.reset2 &&\n      this.state.reset1.length > 6;\n    return (\n      <div>\n        <div>\n          <h5>Email</h5>\n          <div>{this.props.email}</div>\n        </div>\n        <br />\n        <div>\n          <h5>Password</h5>\n          <button\n            style={{ display: !this.state.resetPassword ? 'block' : 'none' }}\n            onClick={() => {\n              this.setState(prevState => {\n                return { resetPassword: !prevState.resetPassword };\n              });\n            }}\n          >\n            {!this.state.resetPassword ? 'Reset Password' : ''}\n          </button>\n        </div>\n        {this.state.resetPassword && (\n          <div>\n            <Input\n              name=\"reset0\"\n              placeholder=\"old password\"\n              text=\"old password\"\n              type=\"password\"\n              value={this.state.reset0}\n              handleInputChange={this.handleInputChange}\n            />\n            <br />\n            <Input\n              name=\"reset1\"\n              placeholder=\"new password\"\n              text=\"new password\"\n              type=\"password\"\n              value={this.state.reset1}\n              handleInputChange={this.handleInputChange}\n            />\n            <br />\n            <Input\n              name=\"reset2\"\n              placeholder=\"new password (confirm)\"\n              text=\"new password (confirm)\"\n              type=\"password\"\n              value={this.state.reset2}\n              handleInputChange={this.handleInputChange}\n            />\n            <button\n              onClick={() => {\n                let auth = this.props.auth();\n                this.props\n                  .reauthenticate(this.state.reset0)\n                  .then(data => {\n                    auth.currentUser\n                      .updatePassword(this.state.reset1)\n                      .then(data => {\n                        alert('Password Reset!');\n                        this.setState({\n                          resetPassword: false,\n                          reset1: '',\n                          reset2: '',\n                        });\n                      })\n                      .catch(error => {\n                        alert('PASSWORD RESET FAILED: ' + error.message);\n                        this.setState({\n                          resetPassword: false,\n                          reset1: '',\n                          reset2: '',\n                        });\n                      });\n                  })\n                  .catch(error => {\n                    alert('PASSWORD RESET FAILED ' + error.message);\n                    this.setState({\n                      resetPassword: false,\n                      reset1: '',\n                      reset2: '',\n                    });\n                  });\n              }}\n              style={{\n                marginTop: 20,\n                opacity: works ? 1 : 0.8,\n                pointerEvents: works ? 'auto' : 'none',\n                marginBottom: 0,\n              }}\n            >\n              Confirm Password Change\n            </button>\n            <br />\n            <br />\n            <button\n              onClick={() => {\n                this.setState({ resetPassword: false });\n              }}\n            >\n              {'Cancel Reset'}\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}