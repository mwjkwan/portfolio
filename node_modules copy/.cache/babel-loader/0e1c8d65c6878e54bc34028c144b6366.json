{"ast":null,"code":"import _classCallCheck from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/melissa/datamatch/src/components/Navbar.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  .Navigation {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: flex-start;\\n    text-align: left;\\n    margin: 30px 50px 0px 50px;\\n    color: #515151;\\n    position: relative;\\n    height: calc(100% - 0px);\\n    min-height: 645px;\\n    overflow: auto;\\n\\n    logo {\\n      textalign: center;\\n      width: 100%;\\n    }\\n\\n    .links {\\n      margin-left: 5px;\\n    }\\n\\n    .link {\\n      margin-bottom: 10px;\\n      position: relative;\\n      cursor: pointer;\\n      line-height: 27px;\\n      letter-spacing: 0.07em;\\n      color: #ffffff;\\n    }\\n\\n    a {\\n      color: #ffffff;\\n      font-size: 16px;\\n\\n      &:hover {\\n        text-decoration: none;\\n      }\\n    }\\n\\n    .Highlight {\\n      a {\\n        font-family: 'Apercu';\\n        opacity: 1;\\n        font-weight: bold;\\n      }\\n    }\\n\\n    .bottomLinks {\\n      position: absolute;\\n      bottom: 20px;\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsx jsx */\nimport { Component } from 'react';\nimport { jsx, css } from '@emotion/core';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Logo from 'components/Logo';\nvar navbarStyle = css(_templateObject());\n\nvar renderLink = function renderLink(link, path) {\n  return jsx(\"div\", {\n    key: link.text,\n    className: 'link' + (path === link.to ? ' Highlight' : ''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, jsx(Link, {\n    to: link.to,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, jsx(\"i\", {\n    className: 'icon fas fa-' + link.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), link.text.toUpperCase()));\n};\n\nvar Navbar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Navbar, _Component);\n\n  function Navbar() {\n    _classCallCheck(this, Navbar);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Navbar).apply(this, arguments));\n  }\n\n  _createClass(Navbar, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          links = _this$props.links,\n          logoutUser = _this$props.logoutUser,\n          pathname = _this$props.pathname,\n          settingsURL = _this$props.settingsURL;\n      var parts = pathname.split('/');\n      var path = '/' + parts[1] + (parts[2] ? '/' + parts[2] : '');\n      return jsx(\"div\", {\n        css: navbarStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, jsx(\"div\", {\n        className: \"Navigation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, jsx(\"div\", {\n        className: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, jsx(Logo, {\n        to: \"/app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })), jsx(\"div\", {\n        style: {\n          height: 25,\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), jsx(\"div\", {\n        className: \"links\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, links.map(function (link) {\n        return renderLink(link, path);\n      }), jsx(\"div\", {\n        className: \"bottomLinks\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, renderLink({\n        to: settingsURL,\n        icon: 'cog',\n        text: 'Settings'\n      }, path), jsx(\"div\", {\n        onClick: logoutUser,\n        className: \"link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, jsx(\"i\", {\n        className: \"icon fas fa-sign-out-alt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), \"LOG OUT\")))));\n    }\n  }]);\n\n  return Navbar;\n}(Component);\n\nexport { Navbar as default };\nNavbar.propTypes = {\n  links: PropTypes.arrayOf(PropTypes.shape({\n    icon: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    to: PropTypes.string.isRequired\n  })).isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  pathname: PropTypes.string.isRequired,\n  settingsURL: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/Users/melissa/datamatch/src/components/Navbar.js"],"names":["Component","jsx","css","Link","PropTypes","Logo","navbarStyle","renderLink","link","path","text","to","icon","toUpperCase","Navbar","props","links","logoutUser","pathname","settingsURL","parts","split","height","textAlign","map","propTypes","arrayOf","shape","string","isRequired","func"],"mappings":"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","sourcesContent":["/** @jsx jsx */\n\nimport { Component } from 'react';\nimport { jsx, css } from '@emotion/core';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Logo from 'components/Logo';\n\nconst navbarStyle = css`\n  .Navigation {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    text-align: left;\n    margin: 30px 50px 0px 50px;\n    color: #515151;\n    position: relative;\n    height: calc(100% - 0px);\n    min-height: 645px;\n    overflow: auto;\n\n    logo {\n      textalign: center;\n      width: 100%;\n    }\n\n    .links {\n      margin-left: 5px;\n    }\n\n    .link {\n      margin-bottom: 10px;\n      position: relative;\n      cursor: pointer;\n      line-height: 27px;\n      letter-spacing: 0.07em;\n      color: #ffffff;\n    }\n\n    a {\n      color: #ffffff;\n      font-size: 16px;\n\n      &:hover {\n        text-decoration: none;\n      }\n    }\n\n    .Highlight {\n      a {\n        font-family: 'Apercu';\n        opacity: 1;\n        font-weight: bold;\n      }\n    }\n\n    .bottomLinks {\n      position: absolute;\n      bottom: 20px;\n    }\n  }\n`;\n\nconst renderLink = (link, path) => {\n  return (\n    <div\n      key={link.text}\n      className={'link' + (path === link.to ? ' Highlight' : '')}\n    >\n      <Link to={link.to}>\n        <i className={'icon fas fa-' + link.icon}></i>\n        {link.text.toUpperCase()}\n      </Link>\n    </div>\n  );\n};\n\nexport default class Navbar extends Component {\n  render() {\n    const { links, logoutUser, pathname, settingsURL } = this.props;\n\n    var parts = pathname.split('/');\n    var path = '/' + parts[1] + (parts[2] ? '/' + parts[2] : '');\n\n    return (\n      <div css={navbarStyle}>\n        <div className=\"Navigation\">\n          <div className=\"logo\">\n            <Logo to=\"/app\" />\n          </div>\n          <div style={{ height: 25, textAlign: 'left' }} />\n          <div className=\"links\">\n            {links.map(link => {\n              return renderLink(link, path);\n            })}\n            <div className=\"bottomLinks\">\n              {renderLink(\n                {\n                  to: settingsURL,\n                  icon: 'cog',\n                  text: 'Settings',\n                },\n                path,\n              )}\n              <div onClick={logoutUser} className=\"link\">\n                {<i className=\"icon fas fa-sign-out-alt\"></i>}\n                LOG OUT\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nNavbar.propTypes = {\n  links: PropTypes.arrayOf(\n    PropTypes.shape({\n      icon: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n      to: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  pathname: PropTypes.string.isRequired,\n  settingsURL: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}