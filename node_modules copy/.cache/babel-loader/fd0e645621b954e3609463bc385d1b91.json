{"ast":null,"code":"import _classCallCheck from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/melissa/datamatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/melissa/datamatch/src/pages/RestaurantPortal/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { Route, Switch } from 'react-router-dom';\nimport PageConfirmEmail from 'pages/PageConfirmEmail';\nimport PageLogin from 'pages/PageLogin';\nimport PageRegister from 'pages/PageRegister';\nimport PagePasswordReset from 'pages/PagePasswordReset';\nimport PageApp from './App';\n\nvar RestaurantPortal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RestaurantPortal, _Component);\n\n  function RestaurantPortal() {\n    _classCallCheck(this, RestaurantPortal);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RestaurantPortal).apply(this, arguments));\n  }\n\n  _createClass(RestaurantPortal, [{\n    key: \"render\",\n    value: function render() {\n      var prefix = '/restaurant';\n      var loginPath = \"\".concat(prefix, \"/login\");\n      var registerPath = \"\".concat(prefix, \"/register\");\n      var resetPath = \"\".concat(prefix, \"/reset\");\n      var _this$props = this.props,\n          emailVerified = _this$props.emailVerified,\n          isLoggedIn = _this$props.isLoggedIn;\n      return React.createElement(\"div\", {\n        className: \"PageRestaurantRoot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: loginPath,\n        component: function component() {\n          return React.createElement(PageLogin, {\n            portal: prefix,\n            redirectURL: prefix,\n            registerPath: registerPath,\n            resetPath: resetPath,\n            title: \"Restaurant Portal\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: registerPath,\n        component: function component() {\n          return React.createElement(PageRegister, {\n            loginPath: loginPath,\n            portal: prefix,\n            redirectURL: prefix,\n            resetPath: resetPath,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: resetPath,\n        component: function component() {\n          return React.createElement(PagePasswordReset, {\n            appPath: prefix,\n            loginPath: loginPath,\n            portal: prefix,\n            registerPath: registerPath,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: prefix,\n        component: emailVerified && isLoggedIn ? PageApp : function () {\n          return React.createElement(PageConfirmEmail, {\n            appPath: prefix,\n            loginPath: loginPath,\n            portal: prefix,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return RestaurantPortal;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var _state$firebase = state.firebase,\n      auth = _state$firebase.auth,\n      profile = _state$firebase.profile;\n  return {\n    emailVerified: auth.emailVerified,\n    isLoggedIn: !!auth.uid,\n    profile: profile\n  };\n};\n\nexport default compose(firebaseConnect(), connect(mapStateToProps))(RestaurantPortal);","map":{"version":3,"sources":["/Users/melissa/datamatch/src/pages/RestaurantPortal/index.js"],"names":["React","Component","connect","compose","firebaseConnect","Route","Switch","PageConfirmEmail","PageLogin","PageRegister","PagePasswordReset","PageApp","RestaurantPortal","prefix","loginPath","registerPath","resetPath","props","emailVerified","isLoggedIn","mapStateToProps","state","firebase","auth","profile","uid"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport { Route, Switch } from 'react-router-dom';\n\nimport PageConfirmEmail from 'pages/PageConfirmEmail';\nimport PageLogin from 'pages/PageLogin';\nimport PageRegister from 'pages/PageRegister';\nimport PagePasswordReset from 'pages/PagePasswordReset';\n\nimport PageApp from './App';\n\nclass RestaurantPortal extends Component {\n  render() {\n    const prefix = '/restaurant';\n    const loginPath = `${prefix}/login`;\n    const registerPath = `${prefix}/register`;\n    const resetPath = `${prefix}/reset`;\n    const { emailVerified, isLoggedIn } = this.props;\n\n    return (\n      <div className=\"PageRestaurantRoot\">\n        <Switch>\n          <Route\n            exact\n            path={loginPath}\n            component={() => (\n              <PageLogin\n                portal={prefix}\n                redirectURL={prefix}\n                registerPath={registerPath}\n                resetPath={resetPath}\n                title=\"Restaurant Portal\"\n              />\n            )}\n          />\n          <Route\n            exact\n            path={registerPath}\n            component={() => (\n              <PageRegister\n                loginPath={loginPath}\n                portal={prefix}\n                redirectURL={prefix}\n                resetPath={resetPath}\n              />\n            )}\n          />\n          <Route\n            exact\n            path={resetPath}\n            component={() => (\n              <PagePasswordReset\n                appPath={prefix}\n                loginPath={loginPath}\n                portal={prefix}\n                registerPath={registerPath}\n              />\n            )}\n          />\n          <Route\n            path={prefix}\n            component={\n              emailVerified && isLoggedIn\n                ? PageApp\n                : () => (\n                    <PageConfirmEmail\n                      appPath={prefix}\n                      loginPath={loginPath}\n                      portal={prefix}\n                    />\n                  )\n            }\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { auth, profile } = state.firebase;\n\n  return {\n    emailVerified: auth.emailVerified,\n    isLoggedIn: !!auth.uid,\n    profile,\n  };\n};\n\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps),\n)(RestaurantPortal);\n"]},"metadata":{},"sourceType":"module"}